<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="16:mymainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fd237dc4020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fd237fd9be0"/></to>
    </wire>
    <wire loc="72:/home/johlab/Videos/lol/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fd237fd9be0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fd237fd2dd0"/></to>
    </wire>
    <wire loc="17:mymainC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd237dc4660"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd237df3a80"/></to>
    </wire>
    <wire loc="51:/home/johlab/Videos/lol/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fd237df3a80"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd237df0400"/></to>
    </wire>
    <wire loc="18:mymainC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x7fd237db79e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd237b09140"/></to>
    </wire>
    <wire loc="52:/home/johlab/Videos/lol/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd237b09140"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fd237ccd1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:mymainC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fd237d3c7a0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fd237061c30"/></to>
    </wire>
    <wire loc="65:/home/johlab/Videos/lol/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fd237061c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fd2367cc590"/></to>
    </wire>
    <wire loc="20:mymainC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fd237d2d7e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fd2370608b0"/></to>
    </wire>
    <wire loc="66:/home/johlab/Videos/lol/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fd2370608b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fd2367ca270"/></to>
    </wire>
    <wire loc="21:mymainC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x7fd237d1ba50"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fd237b03510"/></to>
    </wire>
    <wire loc="65:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fd237b03510"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fd237ad1620"/></to>
    </wire>
    <wire loc="22:mymainC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fd237d228f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fd237061020"/></to>
    </wire>
    <wire loc="64:/home/johlab/Videos/lol/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fd237061020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fd2367cd920"/></to>
    </wire>
    <wire loc="23:mymainC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd237d1d180"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd23705b910"/></to>
    </wire>
    <wire loc="54:/home/johlab/Videos/lol/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd23705b910"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd237aff800"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fd237d609e0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="24:mymainC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7fd237d06770"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7fd236ea1560"/></to>
    </wire>
    <wire loc="54:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7fd236ea1560"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7fd237040a20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="25:mymainC.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x7fd237d16d20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd23704e720"/></to>
    </wire>
    <wire loc="53:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd23704e720"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd237041530"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="103:/home/johlab/Videos/lol/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd237fd7160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd236767810"/></to>
    </wire>
    <wire loc="96:/home/johlab/Videos/lol/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd237fd7160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd236838c80"/></to>
    </wire>
    <wire loc="120:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd237fd7160"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7fd2374a7600"/></to>
    </wire>
    <wire loc="52:/home/johlab/Videos/lol/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd237fd7160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd2375df880"/></to>
    </wire>
    <wire loc="57:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd237fd7160"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7fd23692b020"/></to>
    </wire>
    <wire loc="59:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd237fd7160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd23695a270"/></to>
    </wire>
    <wire loc="96:/home/johlab/Videos/lol/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd237fd7160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd236a20850"/></to>
    </wire>
    <wire loc="47:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd237fd7160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd236ab13b0"/></to>
    </wire>
    <wire loc="53:/home/johlab/Videos/lol/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd237fd7160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd237cc9e70"/></to>
    </wire>
    <wire loc="67:/home/johlab/Videos/lol/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fd237e0e470"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fd2380ee510"/></to>
    </wire>
    <wire loc="53:/home/johlab/Videos/lol/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fd2380ee510"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fd238020e40"/></to>
    </wire>
    <wire loc="78:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7fd237e0d020"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7fd237399680"/></to>
    </wire>
    <wire loc="123:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7fd237e0d020"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7fd2374a9a60"/></to>
    </wire>
    <wire loc="68:/home/johlab/Videos/lol/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7fd237e0d020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd237fd1a70"/></to>
    </wire>
    <wire loc="58:/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd237fd1a70"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd237fced00"/></to>
    </wire>
    <wire loc="71:/home/johlab/Videos/lol/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fd237e0d720"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7fd237fd7160"/></to>
    </wire>
    <wire loc="26:/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7fd237fcf9d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd2371efb50"/></to>
    </wire>
    <wire loc="59:/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fd237fcbc30"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fd237e2d690"/></to>
    </wire>
    <wire loc="61:/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7fd237fc7b00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd237e2d020"/></to>
    </wire>
    <wire loc="54:/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7fd237fc7400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd237dcc920"/></to>
    </wire>
    <wire loc="62:/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7fd237fc7400"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7fd237fc84b0"/></to>
    </wire>
    <wire loc="46:/home/johlab/Videos/lol/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7fd237fc84b0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7fd237fbd0e0"/></to>
    </wire>
    <wire loc="63:/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7fd237fc8b80"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7fd237fcf9d0"/></to>
    </wire>
    <wire loc="48:/home/johlab/Videos/lol/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x7fd237fb6620"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x7fd237faccb0"/></to>
    </wire>
    <wire loc="141:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7fd237faccb0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fd237f20da0"/></to>
    </wire>
    <wire loc="49:/home/johlab/Videos/lol/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7fd237fbc820"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7fd237fc8b80"/></to>
    </wire>
    <wire loc="191:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7fd237f75cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd237e86160"/></to>
    </wire>
    <wire loc="165:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7fd237f91350"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fd237ef42b0"/></to>
    </wire>
    <wire loc="67:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fd237ef42b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd236d16e20"/></to>
    </wire>
    <wire loc="176:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7fd237f85350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fd237ee38f0"/></to>
    </wire>
    <wire loc="69:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fd237ee38f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd236ca43f0"/></to>
    </wire>
    <wire loc="185:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7fd237f7bcb0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fd237ed3c10"/></to>
    </wire>
    <wire loc="69:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fd237ed3c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd236c393f0"/></to>
    </wire>
    <wire loc="196:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x7fd237f6e060"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd237e6b6d0"/></to>
    </wire>
    <wire loc="143:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7fd237fa9350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fd237f1d2b0"/></to>
    </wire>
    <wire loc="72:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fd237f1d2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd236e473f0"/></to>
    </wire>
    <wire loc="183:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7fd237f7d670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fd237ed68f0"/></to>
    </wire>
    <wire loc="67:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fd237ed68f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd236c40e20"/></to>
    </wire>
    <wire loc="146:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7fd237fa7990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fd237f15a20"/></to>
    </wire>
    <wire loc="66:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fd237f15a20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd236defa60"/></to>
    </wire>
    <wire loc="157:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7fd237f9a990"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fd237f02020"/></to>
    </wire>
    <wire loc="68:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fd237f02020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd236d7d0a0"/></to>
    </wire>
    <wire loc="168:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7fd237f8ecb0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fd237ef1760"/></to>
    </wire>
    <wire loc="70:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fd237ef1760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd236d0c6d0"/></to>
    </wire>
    <wire loc="179:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7fd237f81cb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fd237edfda0"/></to>
    </wire>
    <wire loc="72:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fd237edfda0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd236c9be20"/></to>
    </wire>
    <wire loc="138:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7fd237faf350"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fd237f238f0"/></to>
    </wire>
    <wire loc="67:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fd237f238f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd236e573f0"/></to>
    </wire>
    <wire loc="149:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7fd237fa3350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fd237f11020"/></to>
    </wire>
    <wire loc="69:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fd237f11020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd236de53f0"/></to>
    </wire>
    <wire loc="160:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7fd237f96350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fd237eff5d0"/></to>
    </wire>
    <wire loc="71:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fd237eff5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd236d749b0"/></to>
    </wire>
    <wire loc="171:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7fd237f8a670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fd237eeec10"/></to>
    </wire>
    <wire loc="73:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fd237eeec10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd236d020a0"/></to>
    </wire>
    <wire loc="188:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7fd237f77670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fd237ecf2b0"/></to>
    </wire>
    <wire loc="72:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fd237ecf2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd236c30e20"/></to>
    </wire>
    <wire loc="194:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7fd237f71b20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd237e76160"/></to>
    </wire>
    <wire loc="174:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7fd237f88cb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fd237ee55d0"/></to>
    </wire>
    <wire loc="67:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fd237ee55d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd236cabe20"/></to>
    </wire>
    <wire loc="70:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fd237f20da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd236e4ee20"/></to>
    </wire>
    <wire loc="152:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7fd237fa0cb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fd237f0d5d0"/></to>
    </wire>
    <wire loc="72:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fd237f0d5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd236ddce20"/></to>
    </wire>
    <wire loc="192:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7fd237f734e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd237e81c90"/></to>
    </wire>
    <wire loc="155:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7fd237f9c350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fd237f06d30"/></to>
    </wire>
    <wire loc="66:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fd237f06d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd236d84c90"/></to>
    </wire>
    <wire loc="166:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7fd237f90670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fd237ef3440"/></to>
    </wire>
    <wire loc="68:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fd237ef3440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd236d120a0"/></to>
    </wire>
    <wire loc="177:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7fd237f84670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fd237ee2a80"/></to>
    </wire>
    <wire loc="70:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fd237ee2a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd236ca16d0"/></to>
    </wire>
    <wire loc="186:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7fd237f79020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fd237ed2da0"/></to>
    </wire>
    <wire loc="70:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fd237ed2da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd236c366d0"/></to>
    </wire>
    <wire loc="144:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7fd237fa8670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fd237f1b440"/></to>
    </wire>
    <wire loc="73:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fd237f1b440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd236e436d0"/></to>
    </wire>
    <wire loc="147:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7fd237fa6cb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fd237f14c10"/></to>
    </wire>
    <wire loc="67:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fd237f14c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd236dece20"/></to>
    </wire>
    <wire loc="158:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7fd237f99cb0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fd237f012b0"/></to>
    </wire>
    <wire loc="69:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fd237f012b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd236d7a3f0"/></to>
    </wire>
    <wire loc="169:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7fd237f8c020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fd237ef08f0"/></to>
    </wire>
    <wire loc="71:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fd237ef08f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd236d099b0"/></to>
    </wire>
    <wire loc="180:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7fd237f7f020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fd237edd020"/></to>
    </wire>
    <wire loc="73:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fd237edd020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd236c970a0"/></to>
    </wire>
    <wire loc="139:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7fd237fae670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fd237f22a80"/></to>
    </wire>
    <wire loc="68:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fd237f22a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd236e546d0"/></to>
    </wire>
    <wire loc="150:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7fd237fa2670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fd237f0f2b0"/></to>
    </wire>
    <wire loc="70:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fd237f0f2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd236de26d0"/></to>
    </wire>
    <wire loc="161:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7fd237f95670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fd237efe760"/></to>
    </wire>
    <wire loc="72:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fd237efe760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd236d71e20"/></to>
    </wire>
    <wire loc="189:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7fd237f76990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fd237ece440"/></to>
    </wire>
    <wire loc="73:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fd237ece440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd236c2c0a0"/></to>
    </wire>
    <wire loc="164:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7fd237f93cb0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fd237ef5020"/></to>
    </wire>
    <wire loc="66:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fd237ef5020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd236d19c90"/></to>
    </wire>
    <wire loc="175:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7fd237f86020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fd237ee4760"/></to>
    </wire>
    <wire loc="68:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fd237ee4760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd236ca70a0"/></to>
    </wire>
    <wire loc="184:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7fd237f7c990"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fd237ed5a80"/></to>
    </wire>
    <wire loc="68:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fd237ed5a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd236c3c0a0"/></to>
    </wire>
    <wire loc="195:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7fd237f70e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd237e71c90"/></to>
    </wire>
    <wire loc="142:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7fd237faa020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fd237f1e020"/></to>
    </wire>
    <wire loc="71:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fd237f1e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd236e4a0a0"/></to>
    </wire>
    <wire loc="153:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7fd237f9d020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fd237f0c760"/></to>
    </wire>
    <wire loc="73:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fd237f0c760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd236dd80a0"/></to>
    </wire>
    <wire loc="182:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7fd237f7e350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fd237ed77a0"/></to>
    </wire>
    <wire loc="66:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fd237ed77a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd236c43c90"/></to>
    </wire>
    <wire loc="156:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7fd237f9b670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fd237f04e60"/></to>
    </wire>
    <wire loc="67:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fd237f04e60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd236d81e20"/></to>
    </wire>
    <wire loc="167:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7fd237f8f990"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fd237ef25d0"/></to>
    </wire>
    <wire loc="69:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fd237ef25d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd236d0f3f0"/></to>
    </wire>
    <wire loc="178:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7fd237f83990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fd237ee1c10"/></to>
    </wire>
    <wire loc="71:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fd237ee1c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd236c9e9b0"/></to>
    </wire>
    <wire loc="187:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7fd237f78350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fd237ed0020"/></to>
    </wire>
    <wire loc="71:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fd237ed0020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd236c339b0"/></to>
    </wire>
    <wire loc="137:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7fd237fb0020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fd237f246b0"/></to>
    </wire>
    <wire loc="66:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fd237f246b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd236e5a020"/></to>
    </wire>
    <wire loc="148:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7fd237fa4020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fd237f13da0"/></to>
    </wire>
    <wire loc="68:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fd237f13da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd236de80a0"/></to>
    </wire>
    <wire loc="159:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7fd237f97020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fd237f00440"/></to>
    </wire>
    <wire loc="70:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fd237f00440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd236d776d0"/></to>
    </wire>
    <wire loc="170:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7fd237f8b350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fd237eefa80"/></to>
    </wire>
    <wire loc="72:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fd237eefa80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd236d06e20"/></to>
    </wire>
    <wire loc="193:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7fd237f72800"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd237e7b6d0"/></to>
    </wire>
    <wire loc="173:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7fd237f89990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fd237ee63f0"/></to>
    </wire>
    <wire loc="66:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fd237ee63f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd236caec90"/></to>
    </wire>
    <wire loc="162:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7fd237f94990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fd237efd8f0"/></to>
    </wire>
    <wire loc="73:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fd237efd8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd236d6d0a0"/></to>
    </wire>
    <wire loc="140:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7fd237fad990"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fd237f21c10"/></to>
    </wire>
    <wire loc="69:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fd237f21c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd236e519b0"/></to>
    </wire>
    <wire loc="151:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7fd237fa1990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fd237f0e440"/></to>
    </wire>
    <wire loc="71:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fd237f0e440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fd236ddf9b0"/></to>
    </wire>
    <wire loc="54:/home/johlab/Videos/lol/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7fd2380e5940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd23801fd30"/></to>
    </wire>
    <wire loc="55:/home/johlab/Videos/lol/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7fd23801a2c0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7fd2380363b0"/></to>
    </wire>
    <wire loc="92:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7fd237ffb330"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7fd237c07a70"/></to>
    </wire>
    <wire loc="53:/home/johlab/Videos/lol/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd237dcc920"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd237dfcdd0"/></to>
    </wire>
    <wire loc="54:/home/johlab/Videos/lol/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fd237defb90"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7fd237dcf020"/></to>
    </wire>
    <wire loc="56:/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fd237dcf020"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7fd237fae670"/></to>
    </wire>
    <wire loc="55:/home/johlab/Videos/lol/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fd237deee30"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7fd237dce380"/></to>
    </wire>
    <wire loc="57:/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fd237dce380"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7fd237faf350"/></to>
    </wire>
    <wire loc="56:/home/johlab/Videos/lol/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fd237dec020"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7fd237dcd6a0"/></to>
    </wire>
    <wire loc="58:/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fd237dcd6a0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7fd237fb0020"/></to>
    </wire>
    <wire loc="83:mymainP.nc">
      <from><interface-ref name="releaseresource" scoped="" ref="0x7fd237cef7e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd2380e5940"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:mymainP.nc">
      <from><interface-ref name="send_data" scoped="" ref="0x7fd237cf6a40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd2380e5940"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="23:mymainP.nc">
      <from><interface-ref name="doI2Cstuff" scoped="" ref="0x7fd237d02710"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd2380e5940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/johlab/Videos/lol/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fd237ccd1d0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fd237cc5c40"/></to>
    </wire>
    <wire loc="61:/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fd237cc5c40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd237b29150"/></to>
    </wire>
    <wire loc="59:/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd237cc9e70"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd237cbcc90"/></to>
    </wire>
    <wire loc="65:/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7fd237cbb510"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fd237b1b830"/></to>
    </wire>
    <wire loc="35:/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd237cbcc90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd237ba8080"/></to>
    </wire>
    <wire loc="62:/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7fd237b24640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd237b78cf0"/></to>
    </wire>
    <wire loc="63:/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fd237b721d0"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7fd237cb09e0"/></to>
    </wire>
    <wire loc="36:/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7fd237cb09e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fd237ba8890"/></to>
    </wire>
    <wire loc="66:/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fd237b1ab30"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7fd237cad060"/></to>
    </wire>
    <wire loc="37:/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7fd237cad060"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fd237ba5bc0"/></to>
    </wire>
    <wire loc="72:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fd237ba5bc0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fd236b47260"/></to>
    </wire>
    <wire loc="70:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd237ba8080"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd236b4c630"/></to>
    </wire>
    <wire loc="71:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fd237ba8890"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fd236b4ce40"/></to>
    </wire>
    <wire loc="74:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd236b455d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd237c23c80"/></to>
    </wire>
    <wire loc="94:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd237c23c80"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd237c11020"/></to>
    </wire>
    <wire loc="75:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7fd236b407d0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7fd237c1b020"/></to>
    </wire>
    <wire loc="95:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7fd237c1b020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7fd237c0c2b0"/></to>
    </wire>
    <wire loc="76:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7fd236b3fa20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fd237c1a520"/></to>
    </wire>
    <wire loc="96:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7fd237c1a520"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fd237c0b6b0"/></to>
    </wire>
    <wire loc="77:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7fd236b3bdd0"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7fd237c16a40"/></to>
    </wire>
    <wire loc="97:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7fd237c16a40"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7fd237c06230"/></to>
    </wire>
    <wire loc="74:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7fd237b6f490"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd2380e5940"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7fd237b1ea00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd2380e5940"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fd237ad1620"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fd237aabd70"/></to>
    </wire>
    <wire loc="70:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7fd237af8bf0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7fd237aca1d0"/></to>
    </wire>
    <wire loc="80:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7fd237aca1d0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7fd237aa3830"/></to>
    </wire>
    <wire loc="72:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fd237afc2b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fd237aca7e0"/></to>
    </wire>
    <wire loc="82:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fd237aca7e0"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7fd237aa16f0"/></to>
    </wire>
    <wire loc="67:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fd237b00530"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fd237ace660"/></to>
    </wire>
    <wire loc="77:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fd237ace660"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fd237aa7e00"/></to>
    </wire>
    <wire loc="69:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fd237afd430"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fd237acc5a0"/></to>
    </wire>
    <wire loc="79:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fd237acc5a0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fd237aa4c00"/></to>
    </wire>
    <wire loc="76:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fd237aeccb0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fd237ac7640"/></to>
    </wire>
    <wire loc="86:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fd237ac7640"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fd237a8b640"/></to>
    </wire>
    <wire loc="68:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd237aff800"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd237acd990"/></to>
    </wire>
    <wire loc="78:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd237acd990"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd237aa4020"/></to>
    </wire>
    <wire loc="75:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd237aef350"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd237ac8b20"/></to>
    </wire>
    <wire loc="85:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd237ac8b20"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd237a94b50"/></to>
    </wire>
    <wire loc="77:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fd237af5020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fd237ac6160"/></to>
    </wire>
    <wire loc="87:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fd237ac6160"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fd237a8a160"/></to>
    </wire>
    <wire loc="73:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fd237afb020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fd237ac9470"/></to>
    </wire>
    <wire loc="83:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fd237ac9470"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fd237aa3e60"/></to>
    </wire>
    <wire loc="78:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7fd237ae0d40"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7fd237ac6df0"/></to>
    </wire>
    <wire loc="88:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7fd237ac6df0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7fd237a8adf0"/></to>
    </wire>
    <wire loc="81:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x7fd237adcd70"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7fd237ab45e0"/></to>
    </wire>
    <wire loc="97:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7fd237ab45e0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7fd237a7d660"/></to>
    </wire>
    <wire loc="80:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fd237ad6e60"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fd237aaf6c0"/></to>
    </wire>
    <wire loc="96:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fd237aaf6c0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fd237a79840"/></to>
    </wire>
    <wire loc="254:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fd237aabd70"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fd2376b1880"/></to>
    </wire>
    <wire loc="92:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7fd237abbc40"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7fd237a82520"/></to>
    </wire>
    <wire loc="345:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7fd237a82520"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7fd2374c63b0"/></to>
    </wire>
    <wire loc="139:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7fd237aa3830"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7fd23789a3a0"/></to>
    </wire>
    <wire loc="141:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7fd237aa16f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fd23789d720"/></to>
    </wire>
    <wire loc="136:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fd237aa7e00"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fd23789c530"/></to>
    </wire>
    <wire loc="138:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fd237aa4c00"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fd23789bb00"/></to>
    </wire>
    <wire loc="91:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7fd237abd660"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7fd237a85020"/></to>
    </wire>
    <wire loc="343:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7fd237a85020"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7fd2374cae80"/></to>
    </wire>
    <wire loc="255:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fd237a8b640"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fd23769b270"/></to>
    </wire>
    <wire loc="137:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd237aa4020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd23789b3a0"/></to>
    </wire>
    <wire loc="309:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7fd237a7d660"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7fd237511bb0"/></to>
    </wire>
    <wire loc="95:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fd237ab50f0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fd237a7e150"/></to>
    </wire>
    <wire loc="347:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fd237a7e150"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fd2374bda40"/></to>
    </wire>
    <wire loc="90:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7fd237ac4110"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7fd237a89a00"/></to>
    </wire>
    <wire loc="344:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7fd237a89a00"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7fd2374c1e70"/></to>
    </wire>
    <wire loc="288:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd237a94b50"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd23759ab60"/></to>
    </wire>
    <wire loc="226:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fd237a8a160"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fd2376bdd60"/></to>
    </wire>
    <wire loc="140:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fd237aa3e60"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fd23789e020"/></to>
    </wire>
    <wire loc="264:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7fd237a8adf0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7fd2376255f0"/></to>
    </wire>
    <wire loc="93:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd237ab3800"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd237a80870"/></to>
    </wire>
    <wire loc="346:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd237a80870"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd2374bd1e0"/></to>
    </wire>
    <wire loc="310:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fd237a79840"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fd237515d00"/></to>
    </wire>
    <wire loc="57:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fd2376b1880"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7fd23769bd90"/></to>
    </wire>
    <wire loc="89:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x7fd2374c63b0"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x7fd2374a0a40"/></to>
    </wire>
    <wire loc="172:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x7fd237a9f8c0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7fd2377e6d30"/></to>
    </wire>
    <wire loc="160:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x7fd237a97530"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd23781b390"/></to>
    </wire>
    <wire loc="98:/home/johlab/Videos/lol/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd23781b390"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd236a1ed80"/></to>
    </wire>
    <wire loc="66:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7fd23789a3a0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7fd236a72740"/></to>
    </wire>
    <wire loc="58:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fd237515d00"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fd2368a0cb0"/></to>
    </wire>
    <wire loc="63:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fd23789c530"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fd236a759e0"/></to>
    </wire>
    <wire loc="65:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fd23789bb00"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fd236a72020"/></to>
    </wire>
    <wire loc="173:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x7fd237a8c840"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7fd237708dd0"/></to>
    </wire>
    <wire loc="58:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x7fd237708dd0"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7fd2369b0790"/></to>
    </wire>
    <wire loc="174:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x7fd237a95d40"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fd237816e00"/></to>
    </wire>
    <wire loc="63:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fd23769b270"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fd236935da0"/></to>
    </wire>
    <wire loc="86:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x7fd2374cae80"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x7fd2374a3550"/></to>
    </wire>
    <wire loc="64:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd23789b3a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd236a73850"/></to>
    </wire>
    <wire loc="62:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fd23789d720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fd236a76bd0"/></to>
    </wire>
    <wire loc="59:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7fd237511bb0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7fd23689dbb0"/></to>
    </wire>
    <wire loc="82:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fd2374bda40"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fd23739d020"/></to>
    </wire>
    <wire loc="95:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x7fd2374c1e70"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x7fd237499560"/></to>
    </wire>
    <wire loc="170:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x7fd237a98420"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x7fd2377e8a50"/></to>
    </wire>
    <wire loc="117:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fd2376bdd60"/></from>
      <to><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x7fd2376b8100"/></to>
    </wire>
    <wire loc="61:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fd23789e020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fd236a77590"/></to>
    </wire>
    <wire loc="171:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x7fd237a9f190"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x7fd2377e6760"/></to>
    </wire>
    <wire loc="62:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x7fd2376255f0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x7fd23692a5f0"/></to>
    </wire>
    <wire loc="97:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd2374bd1e0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd2374978b0"/></to>
    </wire>
    <wire loc="116:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7fd2379dc470"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7fd23770be00"/></to>
    </wire>
    <wire loc="57:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7fd23770be00"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7fd2369b4740"/></to>
    </wire>
    <wire loc="117:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7fd2379d6400"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7fd237947020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fd2379d9ab0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7fd237511bb0"/></to>
    </wire>
    <wire loc="119:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RF230Packet" scoped="" ref="0x7fd2379d0960"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7fd2374cbd90"/></to>
    </wire>
    <wire loc="80:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7fd2374cbd90"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7fd2374a4470"/></to>
    </wire>
    <wire loc="124:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fd237946b60"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fd2374bbdd0"/></to>
    </wire>
    <wire loc="101:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fd2374bbdd0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fd2373a2ac0"/></to>
    </wire>
    <wire loc="125:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7fd237947cb0"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7fd237a743c0"/></to>
    </wire>
    <wire loc="131:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fd2378978c0"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x7fd2379f9890"/></to>
    </wire>
    <wire loc="132:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fd2378988f0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7fd237891880"/></to>
    </wire>
    <wire loc="133:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fd2378972b0"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x7fd2377a5020"/></to>
    </wire>
    <wire loc="134:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7fd23789aa30"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x7fd2377a5630"/></to>
    </wire>
    <wire loc="149:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd237890c00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd23781b390"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fd237890310"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x7fd2377a65d0"/></to>
    </wire>
    <wire loc="165:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7fd2377e5390"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7fd23770be00"/></to>
    </wire>
    <wire loc="166:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fd2377e12b0"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x7fd2377da7c0"/></to>
    </wire>
    <wire loc="167:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fd2377e1be0"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x7fd2377a7120"/></to>
    </wire>
    <wire loc="168:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7fd2377e2470"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x7fd2377a7730"/></to>
    </wire>
    <wire loc="182:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fd2377a44a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd2376d2840"/></to>
    </wire>
    <wire loc="63:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fd2376d2840"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd23695b120"/></to>
    </wire>
    <wire loc="183:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fd2377a4dd0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd237706e60"/></to>
    </wire>
    <wire loc="61:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd237706e60"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd2369ae8f0"/></to>
    </wire>
    <wire loc="184:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7fd2377a2410"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7fd237706080"/></to>
    </wire>
    <wire loc="59:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7fd237706080"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7fd2369afa40"/></to>
    </wire>
    <wire loc="190:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7fd237705500"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7fd2376bca10"/></to>
    </wire>
    <wire loc="115:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7fd2376bca10"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7fd2376ba8c0"/></to>
    </wire>
    <wire loc="194:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fd237704440"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd2376bd790"/></to>
    </wire>
    <wire loc="114:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd2376bd790"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fd2376ba2b0"/></to>
    </wire>
    <wire loc="217:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fd2376cfbe0"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x7fd237a0d480"/></to>
    </wire>
    <wire loc="218:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fd2376d1a70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd2376c8e40"/></to>
    </wire>
    <wire loc="113:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fd2376c8e40"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fd2376bb950"/></to>
    </wire>
    <wire loc="219:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x7fd2376ce720"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x7fd237a62cb0"/></to>
    </wire>
    <wire loc="45:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x7fd237a62cb0"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x7fd236ab1980"/></to>
    </wire>
    <wire loc="220:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7fd2376cd400"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7fd237a27aa0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="230:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd2376b9720"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd23759ab60"/></to>
    </wire>
    <wire loc="232:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fd2376bb950"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd23769d440"/></to>
    </wire>
    <wire loc="58:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fd23769d440"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fd2376998c0"/></to>
    </wire>
    <wire loc="233:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fd2376ba2b0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd23769dd70"/></to>
    </wire>
    <wire loc="59:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd23769dd70"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fd2376982b0"/></to>
    </wire>
    <wire loc="234:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7fd2376ba8c0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7fd23769c3d0"/></to>
    </wire>
    <wire loc="60:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7fd23769c3d0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7fd2376988c0"/></to>
    </wire>
    <wire loc="250:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fd23769bd90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fd237627a10"/></to>
    </wire>
    <wire loc="59:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fd237627a10"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fd23692c3f0"/></to>
    </wire>
    <wire loc="251:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fd2376998c0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd2376265d0"/></to>
    </wire>
    <wire loc="60:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fd2376265d0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd23692b630"/></to>
    </wire>
    <wire loc="252:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fd2376982b0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd237625020"/></to>
    </wire>
    <wire loc="61:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fd237625020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fd23692a020"/></to>
    </wire>
    <wire loc="253:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7fd2376988c0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7fd23750d7e0"/></to>
    </wire>
    <wire loc="60:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7fd23750d7e0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7fd2368997e0"/></to>
    </wire>
    <wire loc="260:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7fd2376238b0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7fd2375cda40"/></to>
    </wire>
    <wire loc="56:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7fd2375cda40"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7fd2368ed280"/></to>
    </wire>
    <wire loc="261:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7fd237622270"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7fd2376d1270"/></to>
    </wire>
    <wire loc="66:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7fd2376d1270"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7fd23695ba10"/></to>
    </wire>
    <wire loc="262:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7fd237624aa0"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7fd2374dfb60"/></to>
    </wire>
    <wire loc="70:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7fd2374dfb60"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x7fd2374d8410"/></to>
    </wire>
    <wire loc="263:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7fd237624020"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7fd237a743c0"/></to>
    </wire>
    <wire loc="268:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fd2376cf440"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7fd2375cc400"/></to>
    </wire>
    <wire loc="59:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7fd2375cc400"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7fd2368edb70"/></to>
    </wire>
    <wire loc="277:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fd2375ca9b0"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x7fd237a06c80"/></to>
    </wire>
    <wire loc="278:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fd2375ccc00"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7fd2375c4ac0"/></to>
    </wire>
    <wire loc="279:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fd2375cb5d0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7fd23759a400"/></to>
    </wire>
    <wire loc="280:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7fd2375cbd30"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7fd237947020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="286:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0x7fd2375955d0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7fd2375049b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="287:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7fd237598780"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7fd237947020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="292:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fd237597440"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x7fd237a12190"/></to>
    </wire>
    <wire loc="293:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fd237599630"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7fd23757aa40"/></to>
    </wire>
    <wire loc="71:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7fd23757aa40"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fd237573440"/></to>
    </wire>
    <wire loc="294:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fd237598020"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7fd237579400"/></to>
    </wire>
    <wire loc="72:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7fd237579400"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fd237573d70"/></to>
    </wire>
    <wire loc="299:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fd237570b40"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x7fd2379f6560"/></to>
    </wire>
    <wire loc="300:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fd237573440"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7fd2374dea40"/></to>
    </wire>
    <wire loc="71:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7fd2374dea40"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fd2374d7440"/></to>
    </wire>
    <wire loc="301:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fd237573d70"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7fd2374dd400"/></to>
    </wire>
    <wire loc="72:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7fd2374dd400"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fd2374d7d70"/></to>
    </wire>
    <wire loc="302:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x7fd2375725a0"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x7fd2374cb5c0"/></to>
    </wire>
    <wire loc="79:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7fd2374cb5c0"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x7fd2374a5c40"/></to>
    </wire>
    <wire loc="307:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fd23750c760"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fd2374bda40"/></to>
    </wire>
    <wire loc="308:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7fd23750b800"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7fd237503590"/></to>
    </wire>
    <wire loc="311:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x7fd23750a760"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7fd2375049b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="316:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7fd2374e34a0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x7fd2374cbd90"/></to>
    </wire>
    <wire loc="326:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fd2374d5b40"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x7fd2379f6560"/></to>
    </wire>
    <wire loc="327:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fd2374d7440"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7fd2374cc460"/></to>
    </wire>
    <wire loc="77:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7fd2374cc460"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7fd2374a6aa0"/></to>
    </wire>
    <wire loc="328:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fd2374d7d70"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7fd2374ccdd0"/></to>
    </wire>
    <wire loc="78:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7fd2374ccdd0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7fd2374a5480"/></to>
    </wire>
    <wire loc="329:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x7fd2374d8410"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7fd2374cf620"/></to>
    </wire>
    <wire loc="76:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7fd2374cf620"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7fd2374a7c40"/></to>
    </wire>
    <wire loc="341:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fd2374b61f0"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0x7fd237a21020"/></to>
    </wire>
    <wire loc="342:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fd2374b52e0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7fd237511bb0"/></to>
    </wire>
    <wire loc="349:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7fd2374b1110"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7fd2375049b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="350:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x7fd2374b1ca0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7fd2375049b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="351:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x7fd2374b08d0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x7fd2375049b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="352:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7fd2374af470"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7fd237947020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="353:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7fd2374ae110"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7fd237a743c0"/></to>
    </wire>
    <wire loc="46:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7fd237a27aa0"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7fd236ab0850"/></to>
    </wire>
    <wire loc="55:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7fd237947020"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7fd236a967c0"/></to>
    </wire>
    <wire loc="56:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fd236a956b0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fd237946b60"/></to>
    </wire>
    <wire loc="57:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7fd236a918d0"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7fd237947cb0"/></to>
    </wire>
    <wire loc="59:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fd236a6fbd0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fd2378b7260"/></to>
    </wire>
    <wire loc="68:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7fd236a72dd0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7fd23789aa30"/></to>
    </wire>
    <wire loc="69:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fd236a71be0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fd2378988f0"/></to>
    </wire>
    <wire loc="70:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fd236a705d0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fd2378972b0"/></to>
    </wire>
    <wire loc="71:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fd236a70be0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7fd2378978c0"/></to>
    </wire>
    <wire loc="99:/home/johlab/Videos/lol/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fd23781a150"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fd236a1db40"/></to>
    </wire>
    <wire loc="100:/home/johlab/Videos/lol/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd23781a8d0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd236a1b400"/></to>
    </wire>
    <wire loc="101:/home/johlab/Videos/lol/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd236a1bcf0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd2378191f0"/></to>
    </wire>
    <wire loc="103:/home/johlab/Videos/lol/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fd236a1a500"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fd236a20e60"/></to>
    </wire>
    <wire loc="68:/home/johlab/Videos/lol/tinyos-main/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fd236a19060"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd2380e5940"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fd2369ad020"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fd2378b7260"/></to>
    </wire>
    <wire loc="60:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7fd2369adae0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7fd237705500"/></to>
    </wire>
    <wire loc="62:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fd2369ac8f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fd237704440"/></to>
    </wire>
    <wire loc="60:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x7fd236957590"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x7fd2376ce720"/></to>
    </wire>
    <wire loc="61:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7fd236956270"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7fd2376cd400"/></to>
    </wire>
    <wire loc="64:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fd23695a8e0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fd2376d1a70"/></to>
    </wire>
    <wire loc="67:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fd2369592b0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fd2376cf440"/></to>
    </wire>
    <wire loc="68:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x7fd236959a10"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7fd2376cfbe0"/></to>
    </wire>
    <wire loc="118:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x7fd2376b8d90"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd2376b9720"/></to>
    </wire>
    <wire loc="64:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7fd236929dc0"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7fd237624020"/></to>
    </wire>
    <wire loc="65:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7fd236929020"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x7fd237624aa0"/></to>
    </wire>
    <wire loc="66:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7fd236927880"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x7fd2376238b0"/></to>
    </wire>
    <wire loc="67:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7fd236926270"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x7fd237622270"/></to>
    </wire>
    <wire loc="189:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x7fd2369252f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd2380e5940"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x7fd236925ad0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd2380e5940"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x7fd236926a50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd2380e5940"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fd2368ec4a0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fd2375ccc00"/></to>
    </wire>
    <wire loc="58:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fd2368eaa10"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7fd2375ca9b0"/></to>
    </wire>
    <wire loc="60:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fd2368ecdd0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fd2375cb5d0"/></to>
    </wire>
    <wire loc="61:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7fd2368eb560"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7fd2375cbd30"/></to>
    </wire>
    <wire loc="63:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fd2368ea270"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fd2375e1330"/></to>
    </wire>
    <wire loc="56:/home/johlab/Videos/lol/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fd2375e1330"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fd2375db290"/></to>
    </wire>
    <wire loc="78:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x7fd2368e8610"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd2380e5940"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/johlab/Videos/lol/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7fd2375e2200"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7fd2375dc1b0"/></to>
    </wire>
    <wire loc="54:/home/johlab/Videos/lol/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd2375e4270"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd2375df880"/></to>
    </wire>
    <wire loc="76:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fd23757c1d0"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7fd237576920"/></to>
    </wire>
    <wire loc="73:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7fd237579b60"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x7fd2375725a0"/></to>
    </wire>
    <wire loc="70:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x7fd23757bb60"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x7fd237574410"/></to>
    </wire>
    <wire loc="74:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7fd237577400"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7fd237572d40"/></to>
    </wire>
    <wire loc="80:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x7fd2375762b0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7fd237570b40"/></to>
    </wire>
    <wire loc="78:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7fd23757b590"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x7fd237575d70"/></to>
    </wire>
    <wire loc="77:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7fd23757cc50"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x7fd237575440"/></to>
    </wire>
    <wire loc="61:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7fd2368944c0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7fd23750b800"/></to>
    </wire>
    <wire loc="63:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fd236896250"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fd23750c760"/></to>
    </wire>
    <wire loc="64:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7fd2368953f0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fd237518080"/></to>
    </wire>
    <wire loc="26:/home/johlab/Videos/lol/tinyos-main/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7fd237518080"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fd237cbb510"/></to>
    </wire>
    <wire loc="66:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x7fd236898640"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0x7fd23750a760"/></to>
    </wire>
    <wire loc="76:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fd2374e00e0"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7fd2374da920"/></to>
    </wire>
    <wire loc="73:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x7fd2374ddb60"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x7fd2374d65a0"/></to>
    </wire>
    <wire loc="74:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7fd2374db400"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x7fd2374d6d40"/></to>
    </wire>
    <wire loc="80:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x7fd2374da2b0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7fd2374d5b40"/></to>
    </wire>
    <wire loc="78:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7fd2374df590"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x7fd2374d9d70"/></to>
    </wire>
    <wire loc="77:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7fd2374e0b60"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x7fd2374d9440"/></to>
    </wire>
    <wire loc="75:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fd2373a2ac0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fd2371a56e0"/></to>
    </wire>
    <wire loc="92:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fd2374c4940"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fd23749c020"/></to>
    </wire>
    <wire loc="81:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fd23739d020"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fd23719d3a0"/></to>
    </wire>
    <wire loc="84:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7fd237483b50"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7fd2374b61f0"/></to>
    </wire>
    <wire loc="87:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7fd237482a10"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7fd2374b1110"/></to>
    </wire>
    <wire loc="90:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x7fd2374816a0"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0x7fd2374b1ca0"/></to>
    </wire>
    <wire loc="93:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x7fd2374803a0"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0x7fd2374b08d0"/></to>
    </wire>
    <wire loc="96:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fd23747f200"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fd2374b52e0"/></to>
    </wire>
    <wire loc="99:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7fd23748b9d0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fd23739d020"/></to>
    </wire>
    <wire loc="102:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x7fd23747bb70"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x7fd2374af470"/></to>
    </wire>
    <wire loc="104:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x7fd237495020"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0x7fd2373aa950"/></to>
    </wire>
    <wire loc="69:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x7fd2373aa950"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7fd237fa7990"/></to>
    </wire>
    <wire loc="105:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fd237494380"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0x7fd2373a7b50"/></to>
    </wire>
    <wire loc="63:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fd2373a7b50"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd23737aa60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7fd23748e270"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7fd2373a6920"/></to>
    </wire>
    <wire loc="64:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7fd2373a6920"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7fd23737b020"/></to>
    </wire>
    <wire loc="108:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x7fd23748edd0"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0x7fd2373a54e0"/></to>
    </wire>
    <wire loc="67:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x7fd2373a54e0"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x7fd237f9d020"/></to>
    </wire>
    <wire loc="109:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7fd237491020"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7fd2373a47f0"/></to>
    </wire>
    <wire loc="68:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7fd2373a47f0"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x7fd237fa9350"/></to>
    </wire>
    <wire loc="111:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x7fd237488b30"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x7fd2373a3b10"/></to>
    </wire>
    <wire loc="57:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x7fd2373a3b10"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x7fd23739c9d0"/></to>
    </wire>
    <wire loc="112:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x7fd23747b080"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x7fd2374ae110"/></to>
    </wire>
    <wire loc="113:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7fd2374844d0"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7fd23714b9b0"/></to>
    </wire>
    <wire loc="856:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <from><interface-ref name="releaseSpi" scoped="" ref="0x7fd2373eae40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd2380e5940"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fd2371a56e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fd236807420"/></to>
    </wire>
    <wire loc="95:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7fd23737b020"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7fd23736d480"/></to>
    </wire>
    <wire loc="48:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7fd23719d3a0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fd237156b60"/></to>
    </wire>
    <wire loc="59:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0x7fd23738d3d0"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x7fd237f8b350"/></to>
    </wire>
    <wire loc="60:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0x7fd23738b680"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x7fd237f8ecb0"/></to>
    </wire>
    <wire loc="72:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7fd2373907f0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fd23729e850"/></to>
    </wire>
    <wire loc="91:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7fd23729e850"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fd2372849e0"/></to>
    </wire>
    <wire loc="96:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fd237370c80"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fd23736c020"/></to>
    </wire>
    <wire loc="94:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fd237379840"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fd23736ee00"/></to>
    </wire>
    <wire loc="92:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fd23737c1f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fd23736e7e0"/></to>
    </wire>
    <wire loc="97:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd23737aa60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd2372b3900"/></to>
    </wire>
    <wire loc="98:/home/johlab/Videos/lol/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd2372b3900"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd236835270"/></to>
    </wire>
    <wire loc="99:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd2372b0730"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd23736cd70"/></to>
    </wire>
    <wire loc="100:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x7fd237350800"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x7fd23730f720"/></to>
    </wire>
    <wire loc="83:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x7fd23730f720"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x7fd2373076b0"/></to>
    </wire>
    <wire loc="101:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7fd23734e620"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7fd237ffebe0"/></to>
    </wire>
    <wire loc="294:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x7fd23732ede0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd2380e5940"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x7fd2372fc060"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7fd237ffebe0"/></to>
    </wire>
    <wire loc="86:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x7fd2373036c0"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7fd237fa7990"/></to>
    </wire>
    <wire loc="87:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7fd237302970"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x7fd237fa6cb0"/></to>
    </wire>
    <wire loc="88:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x7fd237300b20"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x7fd237fa4020"/></to>
    </wire>
    <wire loc="89:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x7fd2372ffe30"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x7fd237fa3350"/></to>
    </wire>
    <wire loc="99:/home/johlab/Videos/lol/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fd2372b26c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fd236834020"/></to>
    </wire>
    <wire loc="100:/home/johlab/Videos/lol/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd2372b2e40"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd2368347a0"/></to>
    </wire>
    <wire loc="101:/home/johlab/Videos/lol/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd2368330d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd2372b0730"/></to>
    </wire>
    <wire loc="103:/home/johlab/Videos/lol/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fd236833890"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fd236837330"/></to>
    </wire>
    <wire loc="68:/home/johlab/Videos/lol/tinyos-main/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fd236832480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd2380e5940"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7fd23729f020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7fd2372852c0"/></to>
    </wire>
    <wire loc="89:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd2372a8c00"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd23728a020"/></to>
    </wire>
    <wire loc="93:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7fd237293ad0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7fd23727f5a0"/></to>
    </wire>
    <wire loc="94:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7fd237293ad0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7fd23727bba0"/></to>
    </wire>
    <wire loc="95:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7fd237293ad0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7fd237276120"/></to>
    </wire>
    <wire loc="43:/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x7fd236804660"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd2372a8c00"/></to>
    </wire>
    <wire loc="44:/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x7fd2367ffa80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fd237293ad0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd2371e2410"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd2372a8c00"/></to>
    </wire>
    <wire loc="49:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fd237155e40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fd23715dcf0"/></to>
    </wire>
    <wire loc="50:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7fd2371590f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fd237199200"/></to>
    </wire>
    <wire loc="31:/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fd237199200"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fd237182020"/></to>
    </wire>
    <wire loc="32:/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fd237180280"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fd2372a8c00"/></to>
    </wire>
    <wire loc="63:/home/johlab/Videos/lol/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fd2367cd920"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fd2367bf390"/></to>
    </wire>
    <wire loc="64:/home/johlab/Videos/lol/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fd2367cc590"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fd237afc2b0"/></to>
    </wire>
    <wire loc="65:/home/johlab/Videos/lol/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fd2367ca270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fd237afb020"/></to>
    </wire>
    <wire loc="67:/home/johlab/Videos/lol/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fd23705e020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fd2367c98f0"/></to>
    </wire>
    <wire loc="66:/home/johlab/Videos/lol/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fd2367c98f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd237aef350"/></to>
    </wire>
    <wire loc="60:/home/johlab/Videos/lol/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fd2367be060"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd2370c4c30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/johlab/Videos/lol/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fd2367bec70"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fd237afb020"/></to>
    </wire>
    <wire loc="53:/home/johlab/Videos/lol/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fd2370c4c30"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fd237077580"/></to>
    </wire>
    <wire loc="54:/home/johlab/Videos/lol/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fd237076400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fd237b00530"/></to>
    </wire>
    <wire loc="55:/home/johlab/Videos/lol/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fd237075060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fd237afb020"/></to>
    </wire>
    <wire loc="56:/home/johlab/Videos/lol/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fd237074720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fd237afc2b0"/></to>
    </wire>
    <wire loc="169:/home/johlab/Videos/lol/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7fd237073480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd2380e5940"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/johlab/Videos/lol/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7fd237073c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd2380e5940"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/johlab/Videos/lol/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fd237054020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fd237afc2b0"/></to>
    </wire>
    <wire loc="56:/home/johlab/Videos/lol/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fd237054c30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fd237afb020"/></to>
    </wire>
    <wire loc="60:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd237041530"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd236fc08b0"/></to>
    </wire>
    <wire loc="61:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7fd237040a20"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7fd236f89820"/></to>
    </wire>
    <wire loc="63:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x7fd236f846c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd236fd67e0"/></to>
    </wire>
    <wire loc="105:/home/johlab/Videos/lol/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fd236fd67e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fd236764020"/></to>
    </wire>
    <wire loc="64:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7fd236f835a0"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7fd236f0eaa0"/></to>
    </wire>
    <wire loc="65:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Atm128I2C" scoped="" ref="0x7fd236f7e2a0"/></from>
      <to><interface-ref name="Atm128I2C" scoped="" ref="0x7fd236f097f0"/></to>
    </wire>
    <wire loc="67:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fd236fd1dd0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fd236f0e1e0"/></to>
    </wire>
    <wire loc="68:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd236fd0b30"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd236fd5e40"/></to>
    </wire>
    <wire loc="107:/home/johlab/Videos/lol/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd236fd5e40"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd236763560"/></to>
    </wire>
    <wire loc="70:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7fd236f09e40"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x7fd236f00ac0"/></to>
    </wire>
    <wire loc="53:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7fd236f00ac0"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x7fd236ef8440"/></to>
    </wire>
    <wire loc="71:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ReadDebugLeds" scoped="" ref="0x7fd236f067a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd236eba020"/></to>
    </wire>
    <wire loc="72:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="WriteDebugLeds" scoped="" ref="0x7fd236f05de0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fd236eba020"/></to>
    </wire>
    <wire loc="106:/home/johlab/Videos/lol/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fd236fd56c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fd236764d80"/></to>
    </wire>
    <wire loc="108:/home/johlab/Videos/lol/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd236fd4a70"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd236762270"/></to>
    </wire>
    <wire loc="109:/home/johlab/Videos/lol/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd236762b60"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd236fd33e0"/></to>
    </wire>
    <wire loc="111:/home/johlab/Videos/lol/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fd236761440"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fd236767e20"/></to>
    </wire>
    <wire loc="75:/home/johlab/Videos/lol/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fd23675e7a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd2380e5940"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="210:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7fd236f03480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fd2380e5940"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CClk" scoped="" ref="0x7fd236ef5020"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x7fd237f93cb0"/></to>
    </wire>
    <wire loc="55:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CData" scoped="" ref="0x7fd236ef4360"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x7fd237f91350"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/home/johlab/Videos/lol/tinyos-main/tos/system/MainC.nc">
      <documentation loc="1:/home/johlab/Videos/lol/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/home/johlab/Videos/lol/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/home/johlab/Videos/lol/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/home/johlab/Videos/lol/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/home/johlab/Videos/lol/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/home/johlab/Videos/lol/tinyos-main/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/home/johlab/Videos/lol/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="56:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="47:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/johlab/Videos/lol/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/johlab/Videos/lol/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/johlab/Videos/lol/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="80:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="65:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/johlab/Videos/lol/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/johlab/Videos/lol/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/home/johlab/Videos/lol/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="mymainP" loc="4:mymainP.nc">
      <module/>
    </component>
    <component qname="mymainC.Timer0" loc="44(mymainC.Timer0):/home/johlab/Videos/lol/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/johlab/Videos/lol/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/johlab/Videos/lol/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="45:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd23806cd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd238069180"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="45:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7fd237ca3120"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="77:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="66:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="78:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="65:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd23806cd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd238069180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd23806cd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd238069180"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd23806cd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd238069180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="37:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="41:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC" loc="37:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC.TaskletC" loc="42(RF230RadioC.TaskletC):/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/TaskletC.nc">
      <instance number="0">
        <component-ref qname="TaskletC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.NeighborhoodC" loc="35(RF230RadioC.NeighborhoodC):/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodC"/>
        <arguments>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.NeighborhoodC.NeighborhoodP" loc="37(RF230RadioC.NeighborhoodC.NeighborhoodP):/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioP" loc="39:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC" loc="37(RF230RadioC.RadioAlarmC):/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC.RadioAlarmP" loc="50(RF230RadioC.RadioAlarmC.RadioAlarmP):/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC" loc="35(RF230RadioC.ActiveMessageLayerC):/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/johlab/Videos/lol/tinyos-main/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/johlab/Videos/lol/tinyos-main/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.AutoResourceAcquireLayerC" loc="35(RF230RadioC.AutoResourceAcquireLayerC):/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC" loc="83(RF230RadioC.SendResourceC):/home/johlab/Videos/lol/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/johlab/Videos/lol/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Queue" loc="42(RF230RadioC.SendResourceC.Queue):/home/johlab/Videos/lol/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Arbiter" loc="49(RF230RadioC.SendResourceC.Arbiter):/home/johlab/Videos/lol/tinyos-main/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/johlab/Videos/lol/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154MessageLayerC" loc="35(RF230RadioC.Ieee154MessageLayerC):/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TinyosNetworkLayerC" loc="50(RF230RadioC.TinyosNetworkLayerC):/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC" loc="35(RF230RadioC.Ieee154PacketLayerC):/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC" loc="35(RF230RadioC.UniqueLayerC):/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
        <arguments>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.UniqueLayerP" loc="37(RF230RadioC.UniqueLayerC.UniqueLayerP):/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.PacketLinkLayerC" loc="73(RF230RadioC.PacketLinkLayerC):/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC" loc="35(RF230RadioC.LowPowerListeningLayerC):/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP" loc="35(RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP):/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC" loc="35(RF230RadioC.MessageBufferLayerC):/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RF230RadioC.MessageBufferLayerC.MessageBufferLayerP):/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC" loc="35(RF230RadioC.CollisionAvoidanceLayerC):/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP" loc="38(RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP):/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/home/johlab/Videos/lol/tinyos-main/tos/system/RandomC.nc">
      <documentation loc="33:/home/johlab/Videos/lol/tinyos-main/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/johlab/Videos/lol/tinyos-main/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.SoftwareAckLayerC" loc="38(RF230RadioC.SoftwareAckLayerC):/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CsmaLayerC" loc="35(RF230RadioC.CsmaLayerC):/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC" loc="37(RF230RadioC.TimeStampingLayerC):/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RF230RadioC.TimeStampingLayerC.TimeStampingLayerP):/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/home/johlab/Videos/lol/tinyos-main/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/home/johlab/Videos/lol/tinyos-main/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MetadataFlagsLayerC" loc="38(RF230RadioC.MetadataFlagsLayerC):/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TrafficMonitorLayerC" loc="35(RF230RadioC.TrafficMonitorLayerC):/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC" loc="38:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230DriverLayerP" loc="42:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="37:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="35:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="80:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/home/johlab/Videos/lol/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/johlab/Videos/lol/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/home/johlab/Videos/lol/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/home/johlab/Videos/lol/tinyos-main/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/johlab/Videos/lol/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer1C" loc="75:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="67:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="75:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="66:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="51(HplRF230C.AlarmC.NAlarm):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd2380681a0"/>
            <typename><typedef-ref name="TOne" ref="0x7fd2380259a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="37:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd2380681a0"/>
            <typename><typedef-ref name="TOne" ref="0x7fd2380259a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="54(LocalTimeMicroC.TransformCounterC):/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd2380681a0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fd238068510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd238a50170"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd2380681a0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fd238068510"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd238a50170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="46(LocalTimeMicroC.CounterToLocalTimeC):/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd2380681a0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fd238068510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="34:/home/johlab/Videos/lol/tinyos-main/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="mymainC.AMSenderC" loc="47(mymainC.AMSenderC):/home/johlab/Videos/lol/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/johlab/Videos/lol/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:33">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="mymainC.AMSenderC.SenderC" loc="47(mymainC.AMSenderC.SenderC):/home/johlab/Videos/lol/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/johlab/Videos/lol/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fd237d609e0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="mymainC.AMSenderC.SenderC.AMQueueEntryP" loc="43(mymainC.AMSenderC.SenderC.AMQueueEntryP):/home/johlab/Videos/lol/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/johlab/Videos/lol/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fd237d609e0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/home/johlab/Videos/lol/tinyos-main/tos/system/AMQueueP.nc">
      <documentation loc="33:/home/johlab/Videos/lol/tinyos-main/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/home/johlab/Videos/lol/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/johlab/Videos/lol/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="mymainC.AMReceiverC" loc="43(mymainC.AMReceiverC):/home/johlab/Videos/lol/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/johlab/Videos/lol/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:33">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="mymainC.Atm128I2CMasterC" loc="43(mymainC.Atm128I2CMasterC):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP" loc="44:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <documentation loc="32:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter" loc="89(Atm128I2CMasterP.Arbiter):/home/johlab/Videos/lol/tinyos-main/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/johlab/Videos/lol/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128I2CMasterC.I2CPacket">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Queue" loc="42(Atm128I2CMasterP.Arbiter.Queue):/home/johlab/Videos/lol/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Arbiter" loc="52(Atm128I2CMasterP.Arbiter.Arbiter):/home/johlab/Videos/lol/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/johlab/Videos/lol/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Power" loc="58(Atm128I2CMasterP.Power):/home/johlab/Videos/lol/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/home/johlab/Videos/lol/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.I2C" loc="40(Atm128I2CMasterP.I2C):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <documentation loc="32:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterImplP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Master" loc="76(Atm128I2CMasterP.Master):/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <documentation loc="61:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterPacketP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128I2CBusC" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <documentation loc="35:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version    $Id: HplAtm128I2CBusC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128I2CBusP" loc="49:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <documentation loc="39:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version $Id: HplAtm128I2CBusP.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="NoLedsC" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/system/NoLedsC.nc">
      <documentation loc="35:/home/johlab/Videos/lol/tinyos-main/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7fd237f6a5b0" loc="40:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7fd237f6a920" loc="40:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7fd237f6ac90" loc="40:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7fd237f5da00" loc="41:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7fd237f5dd90" loc="42:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7fd237f5a170" loc="43:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7fd237f5a4c0" loc="44:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7fd237ec50d0" loc="42:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7fd237ec5460" loc="43:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7fd237ec57f0" loc="44:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7fd237ec5b40" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/johlab/Videos/lol/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/johlab/Videos/lol/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="58:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="45:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7fd237ca3120" loc="58:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7fd237ca3120"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7fd237ca3430" loc="58:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="58:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="45:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7fd237c9ad40" loc="58:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7fd237c9ad40"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7fd237c970d0" loc="58:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd237b9d430" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd237b9d430"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd237b6c890" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd237b6c890"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7fd237b6cbc0" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd237b1cdf0" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd237b1cdf0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TaskletC" loc="42:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/TaskletC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc" abstract="">
      <parameters>
        <constant name="size" ref="0x7fd237a61020" loc="35:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
          <component-ref qname="NeighborhoodC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc" abstract="">
      <parameters>
        <constant name="size" ref="0x7fd237a56820" loc="37:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
          <component-ref qname="NeighborhoodP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="50:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/home/johlab/Videos/lol/tinyos-main/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/home/johlab/Videos/lol/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7fd23787a0d0" loc="83:/home/johlab/Videos/lol/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/johlab/Videos/lol/tinyos-main/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7fd237871b10" loc="42:/home/johlab/Videos/lol/tinyos-main/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/home/johlab/Videos/lol/tinyos-main/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/johlab/Videos/lol/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
        <constant name="neigborhoodSize" ref="0x7fd237700840" loc="35:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
          <component-ref qname="UniqueLayerC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="37:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
        <constant name="neigborhoodSize" ref="0x7fd2376f4020" loc="37:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
          <component-ref qname="UniqueLayerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RandomCollisionLayerC" loc="35:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="38:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="38:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="35:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmOne16C" loc="28:/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7fd2371ee290" loc="44:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fd2371ee290"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x7fd2371ee600" loc="44:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7fd2371f2d70" loc="51:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7fd2371f2d70"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7fd2371d9580" loc="52:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fd2371d9580"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x7fd2371d98a0" loc="53:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7fd237195920" loc="42:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7fd237195920"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7fd237192120" loc="43:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fd237192120"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7fd237176600" loc="55:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7fd237176600"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7fd237176dd0" loc="56:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7fd237176dd0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7fd237175220" loc="57:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7fd237175220"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7fd237175a00" loc="58:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7fd237175a00"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7fd237175dd0" loc="59:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7fd237174630" loc="60:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7fd237174630"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/home/johlab/Videos/lol/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7fd2370f07b0" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fd237d609e0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/home/johlab/Videos/lol/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7fd2370e73a0" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fd237d609e0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/johlab/Videos/lol/tinyos-main/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/johlab/Videos/lol/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7fd2370df0d0" loc="43:/home/johlab/Videos/lol/tinyos-main/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fd237d609e0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/johlab/Videos/lol/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7fd2370bc020" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/home/johlab/Videos/lol/tinyos-main/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/home/johlab/Videos/lol/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7fd23705a2c0" loc="43:/home/johlab/Videos/lol/tinyos-main/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fd237d609e0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterC" loc="43:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterC.nc" abstract="">
      <documentation loc="32:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/home/johlab/Videos/lol/tinyos-main/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/home/johlab/Videos/lol/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7fd2370366f0" loc="89:/home/johlab/Videos/lol/tinyos-main/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="ArbiterP" loc="52:/home/johlab/Videos/lol/tinyos-main/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/johlab/Videos/lol/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7fd2370215e0" loc="52:/home/johlab/Videos/lol/tinyos-main/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/home/johlab/Videos/lol/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/home/johlab/Videos/lol/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterImplP" loc="40:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc" abstract="">
      <documentation loc="32:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterPacketP" loc="76:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc" abstract="">
      <documentation loc="61:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7fd237fd7160" loc="58:/home/johlab/Videos/lol/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7fd237fd7160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd237fd74e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fd237fd9be0" loc="57:/home/johlab/Videos/lol/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7fd237fd9be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fd237fd8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7fd237fcf9d0" loc="52:/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7fd237fcf9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd237fcfd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd237fd1a70" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd237fd1a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd237fd1df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7fd237fcbc30" loc="50:/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fd237fcbc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7fd237fcf020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7fd237fcf1b0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7fd237fcf340"/>
        <function-ref name="actualMicro" scoped="" ref="0x7fd237fcf4d0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7fd237fcf660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7fd237fc7400" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7fd237fc7400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd237fc7780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd237fced00" loc="44:/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd237fced00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd237fc70a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7fd237fc7b00" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7fd237fc7b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd237fc7e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7fd237fc8b80" loc="41:/home/johlab/Videos/lol/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7fd237fc8b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd237fc0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7fd237fc84b0" loc="40:/home/johlab/Videos/lol/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7fd237fc84b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd237fc8830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7fd237fbc820" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7fd237fbc820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd237fbcba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x7fd237fb6620" loc="44:/home/johlab/Videos/lol/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x7fd237fb6620"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237fb69a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237fb6b30"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237fb6cc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237fb6e50"/>
        <function-ref name="get" scoped="" ref="0x7fd237fbc020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237fbc1b0"/>
        <function-ref name="set" scoped="" ref="0x7fd237fbc340"/>
        <function-ref name="clr" scoped="" ref="0x7fd237fbc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7fd237fbd0e0" loc="43:/home/johlab/Videos/lol/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7fd237fbd0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd237fbd460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7fd237f75cb0" loc="98:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7fd237f75cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f74610"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f747a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f74930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f74ac0"/>
        <function-ref name="get" scoped="" ref="0x7fd237f74c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f74de0"/>
        <function-ref name="set" scoped="" ref="0x7fd237f73020"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f731b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7fd237f91350" loc="72:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7fd237f91350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f916d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f91860"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f919f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f91b80"/>
        <function-ref name="get" scoped="" ref="0x7fd237f91d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f90020"/>
        <function-ref name="set" scoped="" ref="0x7fd237f901b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f90340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7fd237f85350" loc="83:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7fd237f85350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f856d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f85860"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f859f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f85b80"/>
        <function-ref name="get" scoped="" ref="0x7fd237f85d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f84020"/>
        <function-ref name="set" scoped="" ref="0x7fd237f841b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f84340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7fd237f7bcb0" loc="92:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7fd237f7bcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f7a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f7a230"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f7a3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f7a550"/>
        <function-ref name="get" scoped="" ref="0x7fd237f7a6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f7a870"/>
        <function-ref name="set" scoped="" ref="0x7fd237f7aa00"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f7ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x7fd237f6e060" loc="103:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x7fd237f6e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f6e3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f6e570"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f6e700"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f6e890"/>
        <function-ref name="get" scoped="" ref="0x7fd237f6ea20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f6ebb0"/>
        <function-ref name="set" scoped="" ref="0x7fd237f6ed40"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f6d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7fd237fa9350" loc="50:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7fd237fa9350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237fa96d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237fa9860"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237fa99f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237fa9b80"/>
        <function-ref name="get" scoped="" ref="0x7fd237fa9d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237fa8020"/>
        <function-ref name="set" scoped="" ref="0x7fd237fa81b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237fa8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7fd237f7d670" loc="90:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7fd237f7d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f7d9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f7db80"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f7dd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f7c020"/>
        <function-ref name="get" scoped="" ref="0x7fd237f7c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f7c340"/>
        <function-ref name="set" scoped="" ref="0x7fd237f7c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f7c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7fd237fa7990" loc="53:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7fd237fa7990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237fa7d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237fa6020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237fa61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237fa6340"/>
        <function-ref name="get" scoped="" ref="0x7fd237fa64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237fa6660"/>
        <function-ref name="set" scoped="" ref="0x7fd237fa67f0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237fa6980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7fd237f9a990" loc="64:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7fd237f9a990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f9ad10"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f99020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f991b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f99340"/>
        <function-ref name="get" scoped="" ref="0x7fd237f994d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f99660"/>
        <function-ref name="set" scoped="" ref="0x7fd237f997f0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f99980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7fd237f8ecb0" loc="75:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7fd237f8ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f8d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f8d230"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f8d3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f8d550"/>
        <function-ref name="get" scoped="" ref="0x7fd237f8d6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f8d870"/>
        <function-ref name="set" scoped="" ref="0x7fd237f8da00"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f8db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7fd237f81cb0" loc="86:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7fd237f81cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f800a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f80230"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f803c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f80550"/>
        <function-ref name="get" scoped="" ref="0x7fd237f806e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f80870"/>
        <function-ref name="set" scoped="" ref="0x7fd237f80a00"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f80b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7fd237faf350" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7fd237faf350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237faf6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237faf860"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237faf9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237fafb80"/>
        <function-ref name="get" scoped="" ref="0x7fd237fafd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237fae020"/>
        <function-ref name="set" scoped="" ref="0x7fd237fae1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237fae340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7fd237fa3350" loc="56:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7fd237fa3350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237fa36d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237fa3860"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237fa39f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237fa3b80"/>
        <function-ref name="get" scoped="" ref="0x7fd237fa3d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237fa2020"/>
        <function-ref name="set" scoped="" ref="0x7fd237fa21b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237fa2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7fd237f96350" loc="67:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7fd237f96350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f966d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f96860"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f969f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f96b80"/>
        <function-ref name="get" scoped="" ref="0x7fd237f96d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f95020"/>
        <function-ref name="set" scoped="" ref="0x7fd237f951b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f95340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7fd237f8a670" loc="78:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7fd237f8a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f8a9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f8ab80"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f8ad10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f89020"/>
        <function-ref name="get" scoped="" ref="0x7fd237f891b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f89340"/>
        <function-ref name="set" scoped="" ref="0x7fd237f894d0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f89660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7fd237f77670" loc="95:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7fd237f77670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f779f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f77b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f77d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f76020"/>
        <function-ref name="get" scoped="" ref="0x7fd237f761b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f76340"/>
        <function-ref name="set" scoped="" ref="0x7fd237f764d0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f76660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7fd237f71b20" loc="101:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7fd237f71b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f70020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f701b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f70340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f704d0"/>
        <function-ref name="get" scoped="" ref="0x7fd237f70660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f707f0"/>
        <function-ref name="set" scoped="" ref="0x7fd237f70980"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f70b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7fd237f88cb0" loc="81:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7fd237f88cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f870a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f87230"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f873c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f87550"/>
        <function-ref name="get" scoped="" ref="0x7fd237f876e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f87870"/>
        <function-ref name="set" scoped="" ref="0x7fd237f87a00"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f87b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7fd237faccb0" loc="48:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7fd237faccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237fab0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237fab230"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237fab3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237fab550"/>
        <function-ref name="get" scoped="" ref="0x7fd237fab6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237fab870"/>
        <function-ref name="set" scoped="" ref="0x7fd237faba00"/>
        <function-ref name="clr" scoped="" ref="0x7fd237fabb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7fd237fa0cb0" loc="59:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7fd237fa0cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f9e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f9e230"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f9e3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f9e550"/>
        <function-ref name="get" scoped="" ref="0x7fd237f9e6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f9e870"/>
        <function-ref name="set" scoped="" ref="0x7fd237f9ea00"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f9eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7fd237f734e0" loc="99:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7fd237f734e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f73860"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f739f0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f73b80"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f73d10"/>
        <function-ref name="get" scoped="" ref="0x7fd237f72020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f721b0"/>
        <function-ref name="set" scoped="" ref="0x7fd237f72340"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f724d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7fd237f9c350" loc="62:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7fd237f9c350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f9c6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f9c860"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f9c9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f9cb80"/>
        <function-ref name="get" scoped="" ref="0x7fd237f9cd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f9b020"/>
        <function-ref name="set" scoped="" ref="0x7fd237f9b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f9b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7fd237f90670" loc="73:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7fd237f90670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f909f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f90b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f90d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f8f020"/>
        <function-ref name="get" scoped="" ref="0x7fd237f8f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f8f340"/>
        <function-ref name="set" scoped="" ref="0x7fd237f8f4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f8f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7fd237f84670" loc="84:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7fd237f84670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f849f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f84b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f84d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f83020"/>
        <function-ref name="get" scoped="" ref="0x7fd237f831b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f83340"/>
        <function-ref name="set" scoped="" ref="0x7fd237f834d0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f83660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7fd237f79020" loc="93:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7fd237f79020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f793a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f79530"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f796c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f79850"/>
        <function-ref name="get" scoped="" ref="0x7fd237f799e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f79b70"/>
        <function-ref name="set" scoped="" ref="0x7fd237f79d00"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f78020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7fd237fa8670" loc="51:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7fd237fa8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237fa89f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237fa8b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237fa8d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237fa7020"/>
        <function-ref name="get" scoped="" ref="0x7fd237fa71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237fa7340"/>
        <function-ref name="set" scoped="" ref="0x7fd237fa74d0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237fa7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7fd237fa6cb0" loc="54:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7fd237fa6cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237fa50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237fa5230"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237fa53c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237fa5550"/>
        <function-ref name="get" scoped="" ref="0x7fd237fa56e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237fa5870"/>
        <function-ref name="set" scoped="" ref="0x7fd237fa5a00"/>
        <function-ref name="clr" scoped="" ref="0x7fd237fa5b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7fd237f99cb0" loc="65:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7fd237f99cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f980a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f98230"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f983c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f98550"/>
        <function-ref name="get" scoped="" ref="0x7fd237f986e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f98870"/>
        <function-ref name="set" scoped="" ref="0x7fd237f98a00"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f98b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7fd237f8c020" loc="76:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7fd237f8c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f8c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f8c530"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f8c6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f8c850"/>
        <function-ref name="get" scoped="" ref="0x7fd237f8c9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f8cb70"/>
        <function-ref name="set" scoped="" ref="0x7fd237f8cd00"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f8b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7fd237f7f020" loc="87:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7fd237f7f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f7f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f7f530"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f7f6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f7f850"/>
        <function-ref name="get" scoped="" ref="0x7fd237f7f9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f7fb70"/>
        <function-ref name="set" scoped="" ref="0x7fd237f7fd00"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f7e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7fd237fae670" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7fd237fae670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237fae9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237faeb80"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237faed10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237fad020"/>
        <function-ref name="get" scoped="" ref="0x7fd237fad1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237fad340"/>
        <function-ref name="set" scoped="" ref="0x7fd237fad4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237fad660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7fd237fa2670" loc="57:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7fd237fa2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237fa2af0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237fa2c80"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237fa2e10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237fa1020"/>
        <function-ref name="get" scoped="" ref="0x7fd237fa11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237fa1340"/>
        <function-ref name="set" scoped="" ref="0x7fd237fa14d0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237fa1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7fd237f95670" loc="68:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7fd237f95670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f959f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f95b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f95d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f94020"/>
        <function-ref name="get" scoped="" ref="0x7fd237f941b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f94340"/>
        <function-ref name="set" scoped="" ref="0x7fd237f944d0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f94660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7fd237f76990" loc="96:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7fd237f76990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f76d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f75020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f751b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f75340"/>
        <function-ref name="get" scoped="" ref="0x7fd237f754d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f75660"/>
        <function-ref name="set" scoped="" ref="0x7fd237f757f0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f75980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7fd237f93cb0" loc="71:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7fd237f93cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f92410"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f925a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f92730"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f928c0"/>
        <function-ref name="get" scoped="" ref="0x7fd237f92a50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f92be0"/>
        <function-ref name="set" scoped="" ref="0x7fd237f92d70"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f91020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7fd237f86020" loc="82:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7fd237f86020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f863a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f86530"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f866c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f86850"/>
        <function-ref name="get" scoped="" ref="0x7fd237f869e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f86b70"/>
        <function-ref name="set" scoped="" ref="0x7fd237f86d00"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f85020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7fd237f7c990" loc="91:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7fd237f7c990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f7cd10"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f7b020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f7b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f7b340"/>
        <function-ref name="get" scoped="" ref="0x7fd237f7b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f7b660"/>
        <function-ref name="set" scoped="" ref="0x7fd237f7b7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f7b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7fd237f70e40" loc="102:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7fd237f70e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f6f1e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f6f370"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f6f500"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f6f690"/>
        <function-ref name="get" scoped="" ref="0x7fd237f6f820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f6f9b0"/>
        <function-ref name="set" scoped="" ref="0x7fd237f6fb40"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f6fcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7fd237faa020" loc="49:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7fd237faa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237faa3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237faa530"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237faa6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237faa850"/>
        <function-ref name="get" scoped="" ref="0x7fd237faa9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237faab70"/>
        <function-ref name="set" scoped="" ref="0x7fd237faad00"/>
        <function-ref name="clr" scoped="" ref="0x7fd237fa9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7fd237f9d020" loc="60:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7fd237f9d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f9d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f9d530"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f9d6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f9d850"/>
        <function-ref name="get" scoped="" ref="0x7fd237f9d9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f9db70"/>
        <function-ref name="set" scoped="" ref="0x7fd237f9dd00"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f9c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7fd237f7e350" loc="89:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7fd237f7e350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f7e6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f7e860"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f7e9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f7eb80"/>
        <function-ref name="get" scoped="" ref="0x7fd237f7ed10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f7d020"/>
        <function-ref name="set" scoped="" ref="0x7fd237f7d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f7d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7fd237f9b670" loc="63:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7fd237f9b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f9b9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f9bb80"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f9bd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f9a020"/>
        <function-ref name="get" scoped="" ref="0x7fd237f9a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f9a340"/>
        <function-ref name="set" scoped="" ref="0x7fd237f9a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f9a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7fd237f8f990" loc="74:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7fd237f8f990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f8fd10"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f8e020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f8e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f8e340"/>
        <function-ref name="get" scoped="" ref="0x7fd237f8e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f8e660"/>
        <function-ref name="set" scoped="" ref="0x7fd237f8e7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f8e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7fd237f83990" loc="85:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7fd237f83990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f83d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f81020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f811b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f81340"/>
        <function-ref name="get" scoped="" ref="0x7fd237f814d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f81660"/>
        <function-ref name="set" scoped="" ref="0x7fd237f817f0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f81980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7fd237f78350" loc="94:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7fd237f78350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f786d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f78860"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f789f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f78b80"/>
        <function-ref name="get" scoped="" ref="0x7fd237f78d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f77020"/>
        <function-ref name="set" scoped="" ref="0x7fd237f771b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f77340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7fd237fb0020" loc="44:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7fd237fb0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237fb03a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237fb0530"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237fb06c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237fb0850"/>
        <function-ref name="get" scoped="" ref="0x7fd237fb09e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237fb0b70"/>
        <function-ref name="set" scoped="" ref="0x7fd237fb0d00"/>
        <function-ref name="clr" scoped="" ref="0x7fd237faf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7fd237fa4020" loc="55:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7fd237fa4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237fa43a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237fa4530"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237fa46c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237fa4850"/>
        <function-ref name="get" scoped="" ref="0x7fd237fa49e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237fa4b70"/>
        <function-ref name="set" scoped="" ref="0x7fd237fa4d00"/>
        <function-ref name="clr" scoped="" ref="0x7fd237fa3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7fd237f97020" loc="66:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7fd237f97020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f973a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f97530"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f976c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f97850"/>
        <function-ref name="get" scoped="" ref="0x7fd237f979e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f97b70"/>
        <function-ref name="set" scoped="" ref="0x7fd237f97d00"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f96020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7fd237f8b350" loc="77:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7fd237f8b350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f8b6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f8b860"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f8b9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f8bb80"/>
        <function-ref name="get" scoped="" ref="0x7fd237f8bd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f8a020"/>
        <function-ref name="set" scoped="" ref="0x7fd237f8a1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f8a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7fd237f72800" loc="100:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7fd237f72800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f72b80"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f72d10"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f71020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f711b0"/>
        <function-ref name="get" scoped="" ref="0x7fd237f71340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f714d0"/>
        <function-ref name="set" scoped="" ref="0x7fd237f71660"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f717f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7fd237f89990" loc="80:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7fd237f89990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f89d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f88020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f881b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f88340"/>
        <function-ref name="get" scoped="" ref="0x7fd237f884d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f88660"/>
        <function-ref name="set" scoped="" ref="0x7fd237f887f0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f88980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7fd237f94990" loc="69:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7fd237f94990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f94d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f93020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f931b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f93340"/>
        <function-ref name="get" scoped="" ref="0x7fd237f934d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f93660"/>
        <function-ref name="set" scoped="" ref="0x7fd237f937f0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f93980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7fd237fad990" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7fd237fad990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237fadd10"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237fac020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237fac1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237fac340"/>
        <function-ref name="get" scoped="" ref="0x7fd237fac4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237fac660"/>
        <function-ref name="set" scoped="" ref="0x7fd237fac7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237fac980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7fd237fa1990" loc="58:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7fd237fa1990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237fa1d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237fa0020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237fa01b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237fa0340"/>
        <function-ref name="get" scoped="" ref="0x7fd237fa04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237fa0660"/>
        <function-ref name="set" scoped="" ref="0x7fd237fa07f0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237fa0980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fd237f22a80" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fd237f22a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f22e00"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f21020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f211b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f21340"/>
        <function-ref name="get" scoped="" ref="0x7fd237f214d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f21660"/>
        <function-ref name="set" scoped="" ref="0x7fd237f217f0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f21980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fd237f1e020" loc="49:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fd237f1e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f1e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f1e530"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f1e6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f1e850"/>
        <function-ref name="get" scoped="" ref="0x7fd237f1e9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f1eb70"/>
        <function-ref name="set" scoped="" ref="0x7fd237f1ed00"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f1d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fd237f246b0" loc="44:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fd237f246b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f24a30"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f24bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f24d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f23020"/>
        <function-ref name="get" scoped="" ref="0x7fd237f231b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f23340"/>
        <function-ref name="set" scoped="" ref="0x7fd237f234d0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f23660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fd237f21c10" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fd237f21c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f20020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f201b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f20340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f204d0"/>
        <function-ref name="get" scoped="" ref="0x7fd237f20660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f207f0"/>
        <function-ref name="set" scoped="" ref="0x7fd237f20980"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f20b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fd237f1d2b0" loc="50:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fd237f1d2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f1d630"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f1d7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f1d950"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f1dae0"/>
        <function-ref name="get" scoped="" ref="0x7fd237f1dc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f1de00"/>
        <function-ref name="set" scoped="" ref="0x7fd237f1b020"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f1b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fd237f238f0" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fd237f238f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f23c70"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f23e00"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f22020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f221b0"/>
        <function-ref name="get" scoped="" ref="0x7fd237f22340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f224d0"/>
        <function-ref name="set" scoped="" ref="0x7fd237f22660"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f227f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fd237f20da0" loc="48:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fd237f20da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f1f180"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f1f310"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f1f4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f1f630"/>
        <function-ref name="get" scoped="" ref="0x7fd237f1f7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f1f950"/>
        <function-ref name="set" scoped="" ref="0x7fd237f1fae0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f1fc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fd237f1b440" loc="51:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fd237f1b440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f1b7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f1b950"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f1bae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f1bc70"/>
        <function-ref name="get" scoped="" ref="0x7fd237f1be00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f1a020"/>
        <function-ref name="set" scoped="" ref="0x7fd237f1a1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f1a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd236e5a020" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd236e5a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd236e5a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd236e5a530"/>
        <function-ref name="toggle" scoped="" ref="0x7fd236e5a6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd236e5a850"/>
        <function-ref name="get" scoped="" ref="0x7fd236e5a9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd236e5ab70"/>
        <function-ref name="set" scoped="" ref="0x7fd236e5ad00"/>
        <function-ref name="clr" scoped="" ref="0x7fd236e59020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd236e573f0" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd236e573f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd236e57770"/>
        <function-ref name="isInput" scoped="" ref="0x7fd236e57900"/>
        <function-ref name="toggle" scoped="" ref="0x7fd236e57a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd236e57c20"/>
        <function-ref name="get" scoped="" ref="0x7fd236e57db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd236e56020"/>
        <function-ref name="set" scoped="" ref="0x7fd236e561b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd236e56340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd236e546d0" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd236e546d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd236e54a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fd236e54be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd236e54d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd236e53020"/>
        <function-ref name="get" scoped="" ref="0x7fd236e531b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd236e53340"/>
        <function-ref name="set" scoped="" ref="0x7fd236e534d0"/>
        <function-ref name="clr" scoped="" ref="0x7fd236e53660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd236e519b0" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd236e519b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd236e51d30"/>
        <function-ref name="isInput" scoped="" ref="0x7fd236e50020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd236e501b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd236e50340"/>
        <function-ref name="get" scoped="" ref="0x7fd236e504d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd236e50660"/>
        <function-ref name="set" scoped="" ref="0x7fd236e507f0"/>
        <function-ref name="clr" scoped="" ref="0x7fd236e50980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd236e4ee20" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd236e4ee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd236e4d1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd236e4d350"/>
        <function-ref name="toggle" scoped="" ref="0x7fd236e4d4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd236e4d670"/>
        <function-ref name="get" scoped="" ref="0x7fd236e4d800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd236e4d990"/>
        <function-ref name="set" scoped="" ref="0x7fd236e4db20"/>
        <function-ref name="clr" scoped="" ref="0x7fd236e4dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd236e4a0a0" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd236e4a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd236e4a420"/>
        <function-ref name="isInput" scoped="" ref="0x7fd236e4a5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd236e4a740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd236e4a8d0"/>
        <function-ref name="get" scoped="" ref="0x7fd236e4aa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd236e4abf0"/>
        <function-ref name="set" scoped="" ref="0x7fd236e4ad80"/>
        <function-ref name="clr" scoped="" ref="0x7fd236e49020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd236e473f0" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd236e473f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd236e47770"/>
        <function-ref name="isInput" scoped="" ref="0x7fd236e47900"/>
        <function-ref name="toggle" scoped="" ref="0x7fd236e47a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd236e47c20"/>
        <function-ref name="get" scoped="" ref="0x7fd236e47db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd236e45020"/>
        <function-ref name="set" scoped="" ref="0x7fd236e451b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd236e45340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd236e436d0" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd236e436d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd236e43a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fd236e43be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd236e43d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd236e42020"/>
        <function-ref name="get" scoped="" ref="0x7fd236e421b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd236e42340"/>
        <function-ref name="set" scoped="" ref="0x7fd236e424d0"/>
        <function-ref name="clr" scoped="" ref="0x7fd236e42660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fd237f13da0" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fd237f13da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f12180"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f12310"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f124a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f12630"/>
        <function-ref name="get" scoped="" ref="0x7fd237f127c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f12950"/>
        <function-ref name="set" scoped="" ref="0x7fd237f12ae0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f12c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fd237f0e440" loc="49:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fd237f0e440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f0e7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f0e950"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f0eae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f0ec70"/>
        <function-ref name="get" scoped="" ref="0x7fd237f0ee00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f0d020"/>
        <function-ref name="set" scoped="" ref="0x7fd237f0d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f0d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fd237f15a20" loc="44:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fd237f15a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f15da0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f14020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f141b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f14340"/>
        <function-ref name="get" scoped="" ref="0x7fd237f144d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f14660"/>
        <function-ref name="set" scoped="" ref="0x7fd237f147f0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f14980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fd237f11020" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fd237f11020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f113a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f11530"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f116c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f11850"/>
        <function-ref name="get" scoped="" ref="0x7fd237f119e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f11b70"/>
        <function-ref name="set" scoped="" ref="0x7fd237f11d00"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f0f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fd237f0d5d0" loc="50:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fd237f0d5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f0d950"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f0dae0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f0dc70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f0de00"/>
        <function-ref name="get" scoped="" ref="0x7fd237f0c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f0c1b0"/>
        <function-ref name="set" scoped="" ref="0x7fd237f0c340"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f0c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fd237f14c10" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fd237f14c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f13020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f131b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f13340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f134d0"/>
        <function-ref name="get" scoped="" ref="0x7fd237f13660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f137f0"/>
        <function-ref name="set" scoped="" ref="0x7fd237f13980"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f13b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fd237f0f2b0" loc="48:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fd237f0f2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f0f630"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f0f7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f0f950"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f0fae0"/>
        <function-ref name="get" scoped="" ref="0x7fd237f0fc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f0fe00"/>
        <function-ref name="set" scoped="" ref="0x7fd237f0e020"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f0e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fd237f0c760" loc="51:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fd237f0c760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f0cae0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f0cc70"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f0ce00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f0b020"/>
        <function-ref name="get" scoped="" ref="0x7fd237f0b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f0b340"/>
        <function-ref name="set" scoped="" ref="0x7fd237f0b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f0b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd236defa60" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd236defa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd236defde0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd236dee020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd236dee1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd236dee340"/>
        <function-ref name="get" scoped="" ref="0x7fd236dee4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd236dee660"/>
        <function-ref name="set" scoped="" ref="0x7fd236dee7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fd236dee980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd236dece20" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd236dece20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd236deb1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd236deb350"/>
        <function-ref name="toggle" scoped="" ref="0x7fd236deb4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd236deb670"/>
        <function-ref name="get" scoped="" ref="0x7fd236deb800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd236deb990"/>
        <function-ref name="set" scoped="" ref="0x7fd236debb20"/>
        <function-ref name="clr" scoped="" ref="0x7fd236debcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd236de80a0" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd236de80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd236de8420"/>
        <function-ref name="isInput" scoped="" ref="0x7fd236de85b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd236de8740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd236de88d0"/>
        <function-ref name="get" scoped="" ref="0x7fd236de8a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd236de8bf0"/>
        <function-ref name="set" scoped="" ref="0x7fd236de8d80"/>
        <function-ref name="clr" scoped="" ref="0x7fd236de7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd236de53f0" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd236de53f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd236de5770"/>
        <function-ref name="isInput" scoped="" ref="0x7fd236de5900"/>
        <function-ref name="toggle" scoped="" ref="0x7fd236de5a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd236de5c20"/>
        <function-ref name="get" scoped="" ref="0x7fd236de5db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd236de4020"/>
        <function-ref name="set" scoped="" ref="0x7fd236de41b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd236de4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd236de26d0" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd236de26d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd236de2a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fd236de2be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd236de2d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd236de1020"/>
        <function-ref name="get" scoped="" ref="0x7fd236de11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd236de1340"/>
        <function-ref name="set" scoped="" ref="0x7fd236de14d0"/>
        <function-ref name="clr" scoped="" ref="0x7fd236de1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd236ddf9b0" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd236ddf9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd236ddfd30"/>
        <function-ref name="isInput" scoped="" ref="0x7fd236dde020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd236dde1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd236dde340"/>
        <function-ref name="get" scoped="" ref="0x7fd236dde4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd236dde660"/>
        <function-ref name="set" scoped="" ref="0x7fd236dde7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fd236dde980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd236ddce20" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd236ddce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd236ddb1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd236ddb350"/>
        <function-ref name="toggle" scoped="" ref="0x7fd236ddb4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd236ddb670"/>
        <function-ref name="get" scoped="" ref="0x7fd236ddb800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd236ddb990"/>
        <function-ref name="set" scoped="" ref="0x7fd236ddbb20"/>
        <function-ref name="clr" scoped="" ref="0x7fd236ddbcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd236dd80a0" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd236dd80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd236dd8420"/>
        <function-ref name="isInput" scoped="" ref="0x7fd236dd85b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd236dd8740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd236dd88d0"/>
        <function-ref name="get" scoped="" ref="0x7fd236dd8a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd236dd8bf0"/>
        <function-ref name="set" scoped="" ref="0x7fd236dd8d80"/>
        <function-ref name="clr" scoped="" ref="0x7fd236dd6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fd237f02020" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fd237f02020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f023a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f02530"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f026c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f02850"/>
        <function-ref name="get" scoped="" ref="0x7fd237f029e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f02b70"/>
        <function-ref name="set" scoped="" ref="0x7fd237f02d00"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f01020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fd237eff5d0" loc="49:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fd237eff5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237eff950"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237effae0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237effc70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237effe00"/>
        <function-ref name="get" scoped="" ref="0x7fd237efe020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237efe1b0"/>
        <function-ref name="set" scoped="" ref="0x7fd237efe340"/>
        <function-ref name="clr" scoped="" ref="0x7fd237efe4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fd237f06d30" loc="44:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fd237f06d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f040e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f04270"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f04400"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f04590"/>
        <function-ref name="get" scoped="" ref="0x7fd237f04720"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f048b0"/>
        <function-ref name="set" scoped="" ref="0x7fd237f04a40"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f04bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fd237f012b0" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fd237f012b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f01630"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f017c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f01950"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f01ae0"/>
        <function-ref name="get" scoped="" ref="0x7fd237f01c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f01e00"/>
        <function-ref name="set" scoped="" ref="0x7fd237f00020"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f001b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fd237efe760" loc="50:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fd237efe760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237efeae0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237efec70"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237efee00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237efd020"/>
        <function-ref name="get" scoped="" ref="0x7fd237efd1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237efd340"/>
        <function-ref name="set" scoped="" ref="0x7fd237efd4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237efd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fd237f04e60" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fd237f04e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f03210"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f033a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f03530"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f036c0"/>
        <function-ref name="get" scoped="" ref="0x7fd237f03850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237f039e0"/>
        <function-ref name="set" scoped="" ref="0x7fd237f03b70"/>
        <function-ref name="clr" scoped="" ref="0x7fd237f03d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fd237f00440" loc="48:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fd237f00440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237f007c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237f00950"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237f00ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237f00c70"/>
        <function-ref name="get" scoped="" ref="0x7fd237f00e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237eff020"/>
        <function-ref name="set" scoped="" ref="0x7fd237eff1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237eff340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fd237efd8f0" loc="51:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fd237efd8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237efdc70"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237efde00"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237efc020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237efc1b0"/>
        <function-ref name="get" scoped="" ref="0x7fd237efc340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237efc4d0"/>
        <function-ref name="set" scoped="" ref="0x7fd237efc660"/>
        <function-ref name="clr" scoped="" ref="0x7fd237efc7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd236d84c90" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd236d84c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd236d830a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd236d83230"/>
        <function-ref name="toggle" scoped="" ref="0x7fd236d833c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd236d83550"/>
        <function-ref name="get" scoped="" ref="0x7fd236d836e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd236d83870"/>
        <function-ref name="set" scoped="" ref="0x7fd236d83a00"/>
        <function-ref name="clr" scoped="" ref="0x7fd236d83b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd236d81e20" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd236d81e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd236d801c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd236d80350"/>
        <function-ref name="toggle" scoped="" ref="0x7fd236d804e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd236d80670"/>
        <function-ref name="get" scoped="" ref="0x7fd236d80800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd236d80990"/>
        <function-ref name="set" scoped="" ref="0x7fd236d80b20"/>
        <function-ref name="clr" scoped="" ref="0x7fd236d80cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd236d7d0a0" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd236d7d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd236d7d420"/>
        <function-ref name="isInput" scoped="" ref="0x7fd236d7d5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd236d7d740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd236d7d8d0"/>
        <function-ref name="get" scoped="" ref="0x7fd236d7da60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd236d7dbf0"/>
        <function-ref name="set" scoped="" ref="0x7fd236d7dd80"/>
        <function-ref name="clr" scoped="" ref="0x7fd236d7c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd236d7a3f0" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd236d7a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd236d7a770"/>
        <function-ref name="isInput" scoped="" ref="0x7fd236d7a900"/>
        <function-ref name="toggle" scoped="" ref="0x7fd236d7aa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd236d7ac20"/>
        <function-ref name="get" scoped="" ref="0x7fd236d7adb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd236d79020"/>
        <function-ref name="set" scoped="" ref="0x7fd236d791b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd236d79340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd236d776d0" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd236d776d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd236d77a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fd236d77be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd236d77d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd236d76020"/>
        <function-ref name="get" scoped="" ref="0x7fd236d761b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd236d76340"/>
        <function-ref name="set" scoped="" ref="0x7fd236d764d0"/>
        <function-ref name="clr" scoped="" ref="0x7fd236d76660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd236d749b0" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd236d749b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd236d74d30"/>
        <function-ref name="isInput" scoped="" ref="0x7fd236d73020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd236d731b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd236d73340"/>
        <function-ref name="get" scoped="" ref="0x7fd236d734d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd236d73660"/>
        <function-ref name="set" scoped="" ref="0x7fd236d737f0"/>
        <function-ref name="clr" scoped="" ref="0x7fd236d73980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd236d71e20" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd236d71e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd236d701c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd236d70350"/>
        <function-ref name="toggle" scoped="" ref="0x7fd236d704e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd236d70670"/>
        <function-ref name="get" scoped="" ref="0x7fd236d70800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd236d70990"/>
        <function-ref name="set" scoped="" ref="0x7fd236d70b20"/>
        <function-ref name="clr" scoped="" ref="0x7fd236d70cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd236d6d0a0" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd236d6d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd236d6d420"/>
        <function-ref name="isInput" scoped="" ref="0x7fd236d6d5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd236d6d740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd236d6d8d0"/>
        <function-ref name="get" scoped="" ref="0x7fd236d6da60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd236d6dbf0"/>
        <function-ref name="set" scoped="" ref="0x7fd236d6dd80"/>
        <function-ref name="clr" scoped="" ref="0x7fd236d6b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fd237ef3440" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fd237ef3440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237ef37c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237ef3950"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237ef3ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237ef3c70"/>
        <function-ref name="get" scoped="" ref="0x7fd237ef3e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237ef2020"/>
        <function-ref name="set" scoped="" ref="0x7fd237ef21b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237ef2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fd237ef08f0" loc="49:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fd237ef08f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237ef0c70"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237ef0e00"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237eef020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237eef1b0"/>
        <function-ref name="get" scoped="" ref="0x7fd237eef340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237eef4d0"/>
        <function-ref name="set" scoped="" ref="0x7fd237eef660"/>
        <function-ref name="clr" scoped="" ref="0x7fd237eef7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fd237ef5020" loc="44:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fd237ef5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237ef53a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237ef5530"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237ef56c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237ef5850"/>
        <function-ref name="get" scoped="" ref="0x7fd237ef59e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237ef5b70"/>
        <function-ref name="set" scoped="" ref="0x7fd237ef5d00"/>
        <function-ref name="clr" scoped="" ref="0x7fd237ef4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fd237ef25d0" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fd237ef25d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237ef2950"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237ef2ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237ef2c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237ef2e00"/>
        <function-ref name="get" scoped="" ref="0x7fd237ef1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237ef11b0"/>
        <function-ref name="set" scoped="" ref="0x7fd237ef1340"/>
        <function-ref name="clr" scoped="" ref="0x7fd237ef14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fd237eefa80" loc="50:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fd237eefa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237eefe00"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237eee020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237eee1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237eee340"/>
        <function-ref name="get" scoped="" ref="0x7fd237eee4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237eee660"/>
        <function-ref name="set" scoped="" ref="0x7fd237eee7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237eee980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fd237ef42b0" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fd237ef42b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237ef4630"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237ef47c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237ef4950"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237ef4ae0"/>
        <function-ref name="get" scoped="" ref="0x7fd237ef4c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237ef4e00"/>
        <function-ref name="set" scoped="" ref="0x7fd237ef3020"/>
        <function-ref name="clr" scoped="" ref="0x7fd237ef31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fd237ef1760" loc="48:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fd237ef1760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237ef1ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237ef1c70"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237ef1e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237ef0020"/>
        <function-ref name="get" scoped="" ref="0x7fd237ef01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237ef0340"/>
        <function-ref name="set" scoped="" ref="0x7fd237ef04d0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237ef0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fd237eeec10" loc="51:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fd237eeec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237eed020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237eed1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237eed340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237eed4d0"/>
        <function-ref name="get" scoped="" ref="0x7fd237eed660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237eed7f0"/>
        <function-ref name="set" scoped="" ref="0x7fd237eed980"/>
        <function-ref name="clr" scoped="" ref="0x7fd237eedb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd236d19c90" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd236d19c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd236d180a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd236d18230"/>
        <function-ref name="toggle" scoped="" ref="0x7fd236d183c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd236d18550"/>
        <function-ref name="get" scoped="" ref="0x7fd236d186e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd236d18870"/>
        <function-ref name="set" scoped="" ref="0x7fd236d18a00"/>
        <function-ref name="clr" scoped="" ref="0x7fd236d18b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd236d16e20" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd236d16e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd236d151c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd236d15350"/>
        <function-ref name="toggle" scoped="" ref="0x7fd236d154e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd236d15670"/>
        <function-ref name="get" scoped="" ref="0x7fd236d15800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd236d15990"/>
        <function-ref name="set" scoped="" ref="0x7fd236d15b20"/>
        <function-ref name="clr" scoped="" ref="0x7fd236d15cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd236d120a0" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd236d120a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd236d12420"/>
        <function-ref name="isInput" scoped="" ref="0x7fd236d125b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd236d12740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd236d128d0"/>
        <function-ref name="get" scoped="" ref="0x7fd236d12a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd236d12bf0"/>
        <function-ref name="set" scoped="" ref="0x7fd236d12d80"/>
        <function-ref name="clr" scoped="" ref="0x7fd236d11020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd236d0f3f0" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd236d0f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd236d0f770"/>
        <function-ref name="isInput" scoped="" ref="0x7fd236d0f900"/>
        <function-ref name="toggle" scoped="" ref="0x7fd236d0fa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd236d0fc20"/>
        <function-ref name="get" scoped="" ref="0x7fd236d0fdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd236d0e020"/>
        <function-ref name="set" scoped="" ref="0x7fd236d0e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd236d0e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd236d0c6d0" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd236d0c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd236d0ca50"/>
        <function-ref name="isInput" scoped="" ref="0x7fd236d0cbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd236d0cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd236d0b020"/>
        <function-ref name="get" scoped="" ref="0x7fd236d0b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd236d0b340"/>
        <function-ref name="set" scoped="" ref="0x7fd236d0b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fd236d0b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd236d099b0" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd236d099b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd236d09d30"/>
        <function-ref name="isInput" scoped="" ref="0x7fd236d08020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd236d081b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd236d08340"/>
        <function-ref name="get" scoped="" ref="0x7fd236d084d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd236d08660"/>
        <function-ref name="set" scoped="" ref="0x7fd236d087f0"/>
        <function-ref name="clr" scoped="" ref="0x7fd236d08980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd236d06e20" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd236d06e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd236d051c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd236d05350"/>
        <function-ref name="toggle" scoped="" ref="0x7fd236d054e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd236d05670"/>
        <function-ref name="get" scoped="" ref="0x7fd236d05800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd236d05990"/>
        <function-ref name="set" scoped="" ref="0x7fd236d05b20"/>
        <function-ref name="clr" scoped="" ref="0x7fd236d05cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd236d020a0" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd236d020a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd236d02420"/>
        <function-ref name="isInput" scoped="" ref="0x7fd236d025b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd236d02740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd236d028d0"/>
        <function-ref name="get" scoped="" ref="0x7fd236d02a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd236d02bf0"/>
        <function-ref name="set" scoped="" ref="0x7fd236d02d80"/>
        <function-ref name="clr" scoped="" ref="0x7fd236d01020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fd237ee4760" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fd237ee4760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237ee4ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237ee4c70"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237ee4e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237ee3020"/>
        <function-ref name="get" scoped="" ref="0x7fd237ee31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237ee3340"/>
        <function-ref name="set" scoped="" ref="0x7fd237ee34d0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237ee3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fd237ee1c10" loc="49:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fd237ee1c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237edf020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237edf1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237edf340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237edf4d0"/>
        <function-ref name="get" scoped="" ref="0x7fd237edf660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237edf7f0"/>
        <function-ref name="set" scoped="" ref="0x7fd237edf980"/>
        <function-ref name="clr" scoped="" ref="0x7fd237edfb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fd237ee63f0" loc="44:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fd237ee63f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237ee6770"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237ee6900"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237ee6a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237ee6c20"/>
        <function-ref name="get" scoped="" ref="0x7fd237ee6db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237ee5020"/>
        <function-ref name="set" scoped="" ref="0x7fd237ee51b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237ee5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fd237ee38f0" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fd237ee38f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237ee3c70"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237ee3e00"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237ee2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237ee21b0"/>
        <function-ref name="get" scoped="" ref="0x7fd237ee2340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237ee24d0"/>
        <function-ref name="set" scoped="" ref="0x7fd237ee2660"/>
        <function-ref name="clr" scoped="" ref="0x7fd237ee27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fd237edfda0" loc="50:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fd237edfda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237ede180"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237ede310"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237ede4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237ede630"/>
        <function-ref name="get" scoped="" ref="0x7fd237ede7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237ede950"/>
        <function-ref name="set" scoped="" ref="0x7fd237edeae0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237edec70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fd237ee55d0" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fd237ee55d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237ee5950"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237ee5ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237ee5c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237ee5e00"/>
        <function-ref name="get" scoped="" ref="0x7fd237ee4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237ee41b0"/>
        <function-ref name="set" scoped="" ref="0x7fd237ee4340"/>
        <function-ref name="clr" scoped="" ref="0x7fd237ee44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fd237ee2a80" loc="48:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fd237ee2a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237ee2e00"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237ee1020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237ee11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237ee1340"/>
        <function-ref name="get" scoped="" ref="0x7fd237ee14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237ee1660"/>
        <function-ref name="set" scoped="" ref="0x7fd237ee17f0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237ee1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fd237edd020" loc="51:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fd237edd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237edd3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237edd530"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237edd6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237edd850"/>
        <function-ref name="get" scoped="" ref="0x7fd237edd9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237eddb70"/>
        <function-ref name="set" scoped="" ref="0x7fd237eddd00"/>
        <function-ref name="clr" scoped="" ref="0x7fd237edc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd236caec90" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd236caec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd236cad0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd236cad230"/>
        <function-ref name="toggle" scoped="" ref="0x7fd236cad3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd236cad550"/>
        <function-ref name="get" scoped="" ref="0x7fd236cad6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd236cad870"/>
        <function-ref name="set" scoped="" ref="0x7fd236cada00"/>
        <function-ref name="clr" scoped="" ref="0x7fd236cadb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd236cabe20" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd236cabe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd236caa1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd236caa350"/>
        <function-ref name="toggle" scoped="" ref="0x7fd236caa4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd236caa670"/>
        <function-ref name="get" scoped="" ref="0x7fd236caa800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd236caa990"/>
        <function-ref name="set" scoped="" ref="0x7fd236caab20"/>
        <function-ref name="clr" scoped="" ref="0x7fd236caacb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd236ca70a0" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd236ca70a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd236ca7420"/>
        <function-ref name="isInput" scoped="" ref="0x7fd236ca75b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd236ca7740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd236ca78d0"/>
        <function-ref name="get" scoped="" ref="0x7fd236ca7a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd236ca7bf0"/>
        <function-ref name="set" scoped="" ref="0x7fd236ca7d80"/>
        <function-ref name="clr" scoped="" ref="0x7fd236ca6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd236ca43f0" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd236ca43f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd236ca4770"/>
        <function-ref name="isInput" scoped="" ref="0x7fd236ca4900"/>
        <function-ref name="toggle" scoped="" ref="0x7fd236ca4a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd236ca4c20"/>
        <function-ref name="get" scoped="" ref="0x7fd236ca4db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd236ca3020"/>
        <function-ref name="set" scoped="" ref="0x7fd236ca31b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd236ca3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd236ca16d0" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd236ca16d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd236ca1a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fd236ca1be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd236ca1d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd236ca0020"/>
        <function-ref name="get" scoped="" ref="0x7fd236ca01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd236ca0340"/>
        <function-ref name="set" scoped="" ref="0x7fd236ca04d0"/>
        <function-ref name="clr" scoped="" ref="0x7fd236ca0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd236c9e9b0" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd236c9e9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd236c9ed30"/>
        <function-ref name="isInput" scoped="" ref="0x7fd236c9d020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd236c9d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd236c9d340"/>
        <function-ref name="get" scoped="" ref="0x7fd236c9d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd236c9d660"/>
        <function-ref name="set" scoped="" ref="0x7fd236c9d7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fd236c9d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd236c9be20" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd236c9be20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd236c9a1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd236c9a350"/>
        <function-ref name="toggle" scoped="" ref="0x7fd236c9a4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd236c9a670"/>
        <function-ref name="get" scoped="" ref="0x7fd236c9a800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd236c9a990"/>
        <function-ref name="set" scoped="" ref="0x7fd236c9ab20"/>
        <function-ref name="clr" scoped="" ref="0x7fd236c9acb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd236c970a0" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd236c970a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd236c97420"/>
        <function-ref name="isInput" scoped="" ref="0x7fd236c975b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd236c97740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd236c978d0"/>
        <function-ref name="get" scoped="" ref="0x7fd236c97a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd236c97bf0"/>
        <function-ref name="set" scoped="" ref="0x7fd236c97d80"/>
        <function-ref name="clr" scoped="" ref="0x7fd236c96020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fd237ed5a80" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fd237ed5a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237ed5e00"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237ed3020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237ed31b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237ed3340"/>
        <function-ref name="get" scoped="" ref="0x7fd237ed34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237ed3660"/>
        <function-ref name="set" scoped="" ref="0x7fd237ed37f0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237ed3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fd237ed0020" loc="49:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fd237ed0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237ed03a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237ed0530"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237ed06c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237ed0850"/>
        <function-ref name="get" scoped="" ref="0x7fd237ed09e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237ed0b70"/>
        <function-ref name="set" scoped="" ref="0x7fd237ed0d00"/>
        <function-ref name="clr" scoped="" ref="0x7fd237ecf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fd237ed77a0" loc="44:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fd237ed77a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237ed7b20"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237ed7cb0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237ed7e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237ed6020"/>
        <function-ref name="get" scoped="" ref="0x7fd237ed61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237ed6340"/>
        <function-ref name="set" scoped="" ref="0x7fd237ed64d0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237ed6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fd237ed3c10" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fd237ed3c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237ed2020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237ed21b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237ed2340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237ed24d0"/>
        <function-ref name="get" scoped="" ref="0x7fd237ed2660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237ed27f0"/>
        <function-ref name="set" scoped="" ref="0x7fd237ed2980"/>
        <function-ref name="clr" scoped="" ref="0x7fd237ed2b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fd237ecf2b0" loc="50:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fd237ecf2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237ecf630"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237ecf7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237ecf950"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237ecfae0"/>
        <function-ref name="get" scoped="" ref="0x7fd237ecfc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237ecfe00"/>
        <function-ref name="set" scoped="" ref="0x7fd237ece020"/>
        <function-ref name="clr" scoped="" ref="0x7fd237ece1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fd237ed68f0" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fd237ed68f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237ed6c70"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237ed6e00"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237ed5020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237ed51b0"/>
        <function-ref name="get" scoped="" ref="0x7fd237ed5340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237ed54d0"/>
        <function-ref name="set" scoped="" ref="0x7fd237ed5660"/>
        <function-ref name="clr" scoped="" ref="0x7fd237ed57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fd237ed2da0" loc="48:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fd237ed2da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237ed1180"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237ed1310"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237ed14a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237ed1630"/>
        <function-ref name="get" scoped="" ref="0x7fd237ed17c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237ed1950"/>
        <function-ref name="set" scoped="" ref="0x7fd237ed1ae0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237ed1c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fd237ece440" loc="51:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fd237ece440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237ece7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237ece950"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237eceae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237ecec70"/>
        <function-ref name="get" scoped="" ref="0x7fd237ecee00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237ecd020"/>
        <function-ref name="set" scoped="" ref="0x7fd237ecd1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237ecd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd236c43c90" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd236c43c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd236c420a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd236c42230"/>
        <function-ref name="toggle" scoped="" ref="0x7fd236c423c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd236c42550"/>
        <function-ref name="get" scoped="" ref="0x7fd236c426e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd236c42870"/>
        <function-ref name="set" scoped="" ref="0x7fd236c42a00"/>
        <function-ref name="clr" scoped="" ref="0x7fd236c42b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd236c40e20" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd236c40e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd236c3f1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd236c3f350"/>
        <function-ref name="toggle" scoped="" ref="0x7fd236c3f4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd236c3f670"/>
        <function-ref name="get" scoped="" ref="0x7fd236c3f800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd236c3f990"/>
        <function-ref name="set" scoped="" ref="0x7fd236c3fb20"/>
        <function-ref name="clr" scoped="" ref="0x7fd236c3fcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd236c3c0a0" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd236c3c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd236c3c420"/>
        <function-ref name="isInput" scoped="" ref="0x7fd236c3c5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd236c3c740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd236c3c8d0"/>
        <function-ref name="get" scoped="" ref="0x7fd236c3ca60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd236c3cbf0"/>
        <function-ref name="set" scoped="" ref="0x7fd236c3cd80"/>
        <function-ref name="clr" scoped="" ref="0x7fd236c3b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd236c393f0" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd236c393f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd236c39770"/>
        <function-ref name="isInput" scoped="" ref="0x7fd236c39900"/>
        <function-ref name="toggle" scoped="" ref="0x7fd236c39a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd236c39c20"/>
        <function-ref name="get" scoped="" ref="0x7fd236c39db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd236c38020"/>
        <function-ref name="set" scoped="" ref="0x7fd236c381b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd236c38340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd236c366d0" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd236c366d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd236c36a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fd236c36be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd236c36d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd236c35020"/>
        <function-ref name="get" scoped="" ref="0x7fd236c351b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd236c35340"/>
        <function-ref name="set" scoped="" ref="0x7fd236c354d0"/>
        <function-ref name="clr" scoped="" ref="0x7fd236c35660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd236c339b0" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd236c339b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd236c33d30"/>
        <function-ref name="isInput" scoped="" ref="0x7fd236c32020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd236c321b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd236c32340"/>
        <function-ref name="get" scoped="" ref="0x7fd236c324d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd236c32660"/>
        <function-ref name="set" scoped="" ref="0x7fd236c327f0"/>
        <function-ref name="clr" scoped="" ref="0x7fd236c32980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd236c30e20" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd236c30e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd236c2f1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd236c2f350"/>
        <function-ref name="toggle" scoped="" ref="0x7fd236c2f4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd236c2f670"/>
        <function-ref name="get" scoped="" ref="0x7fd236c2f800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd236c2f990"/>
        <function-ref name="set" scoped="" ref="0x7fd236c2fb20"/>
        <function-ref name="clr" scoped="" ref="0x7fd236c2fcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd236c2c0a0" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd236c2c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd236c2c420"/>
        <function-ref name="isInput" scoped="" ref="0x7fd236c2c5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd236c2c740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd236c2c8d0"/>
        <function-ref name="get" scoped="" ref="0x7fd236c2ca60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd236c2cbf0"/>
        <function-ref name="set" scoped="" ref="0x7fd236c2cd80"/>
        <function-ref name="clr" scoped="" ref="0x7fd236c2b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd237ec6a20" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd237ec6a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237ec6da0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237eb0020"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237eb01b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237eb0340"/>
        <function-ref name="get" scoped="" ref="0x7fd237eb04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237eb0660"/>
        <function-ref name="set" scoped="" ref="0x7fd237eb07f0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237eb0980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd237eab6d0" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd237eab6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237eaba50"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237eabbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237eabd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237eaa020"/>
        <function-ref name="get" scoped="" ref="0x7fd237eaa1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237eaa340"/>
        <function-ref name="set" scoped="" ref="0x7fd237eaa4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237eaa660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd237ea6160" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd237ea6160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237ea64e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237ea6670"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237ea6800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237ea6990"/>
        <function-ref name="get" scoped="" ref="0x7fd237ea6b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237ea6cb0"/>
        <function-ref name="set" scoped="" ref="0x7fd237ea6e40"/>
        <function-ref name="clr" scoped="" ref="0x7fd237ea4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd237ea1c90" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd237ea1c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237ea00a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237ea0230"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237ea03c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237ea0550"/>
        <function-ref name="get" scoped="" ref="0x7fd237ea06e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237ea0870"/>
        <function-ref name="set" scoped="" ref="0x7fd237ea0a00"/>
        <function-ref name="clr" scoped="" ref="0x7fd237ea0b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd237e9b6d0" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd237e9b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237e9ba50"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237e9bbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237e9bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237e9a020"/>
        <function-ref name="get" scoped="" ref="0x7fd237e9a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237e9a340"/>
        <function-ref name="set" scoped="" ref="0x7fd237e9a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237e9a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd237e96160" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd237e96160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237e964e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237e96670"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237e96800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237e96990"/>
        <function-ref name="get" scoped="" ref="0x7fd237e96b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237e96cb0"/>
        <function-ref name="set" scoped="" ref="0x7fd237e96e40"/>
        <function-ref name="clr" scoped="" ref="0x7fd237e94020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd237e91c90" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd237e91c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237e900a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237e90230"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237e903c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237e90550"/>
        <function-ref name="get" scoped="" ref="0x7fd237e906e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237e90870"/>
        <function-ref name="set" scoped="" ref="0x7fd237e90a00"/>
        <function-ref name="clr" scoped="" ref="0x7fd237e90b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd237e8b6d0" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd237e8b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237e8ba50"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237e8bbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237e8bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237e8a020"/>
        <function-ref name="get" scoped="" ref="0x7fd237e8a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237e8a340"/>
        <function-ref name="set" scoped="" ref="0x7fd237e8a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237e8a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd237e86160" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd237e86160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237e864e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237e86670"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237e86800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237e86990"/>
        <function-ref name="get" scoped="" ref="0x7fd237e86b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237e86cb0"/>
        <function-ref name="set" scoped="" ref="0x7fd237e86e40"/>
        <function-ref name="clr" scoped="" ref="0x7fd237e85020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd237e81c90" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd237e81c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237e800a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237e80230"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237e803c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237e80550"/>
        <function-ref name="get" scoped="" ref="0x7fd237e806e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237e80870"/>
        <function-ref name="set" scoped="" ref="0x7fd237e80a00"/>
        <function-ref name="clr" scoped="" ref="0x7fd237e80b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd237e7b6d0" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd237e7b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237e7ba50"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237e7bbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237e7bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237e7a020"/>
        <function-ref name="get" scoped="" ref="0x7fd237e7a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237e7a340"/>
        <function-ref name="set" scoped="" ref="0x7fd237e7a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237e7a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd237e76160" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd237e76160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237e764e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237e76670"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237e76800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237e76990"/>
        <function-ref name="get" scoped="" ref="0x7fd237e76b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237e76cb0"/>
        <function-ref name="set" scoped="" ref="0x7fd237e76e40"/>
        <function-ref name="clr" scoped="" ref="0x7fd237e75020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd237e71c90" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd237e71c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237e700a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237e70230"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237e703c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237e70550"/>
        <function-ref name="get" scoped="" ref="0x7fd237e706e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237e70870"/>
        <function-ref name="set" scoped="" ref="0x7fd237e70a00"/>
        <function-ref name="clr" scoped="" ref="0x7fd237e70b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fd237e6b6d0" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fd237e6b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237e6ba50"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237e6bbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237e6bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237e6a020"/>
        <function-ref name="get" scoped="" ref="0x7fd237e6a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237e6a340"/>
        <function-ref name="set" scoped="" ref="0x7fd237e6a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237e6a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd237e2d020" loc="61:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd237e2d020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7fd2381173a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7fd2381173a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd237e2d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7fd237e2d690" loc="62:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fd237e2d690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7fd237e2da10"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7fd237e2dba0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7fd237e2dd30"/>
        <function-ref name="actualMicro" scoped="" ref="0x7fd237e2c020"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7fd237e2c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7fd237e0d720" loc="60:/home/johlab/Videos/lol/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7fd237e0d720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd237e0daa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fd237fd2dd0" loc="57:/home/johlab/Videos/lol/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7fd237fd2dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fd237e0e180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7fd237e0d020" loc="59:/home/johlab/Videos/lol/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7fd237e0d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd237e0d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7fd237e0e470" loc="58:/home/johlab/Videos/lol/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7fd237e0e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd237e0e7f0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fd237e0e980"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fd237e0eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fd2380e5940" loc="48:/home/johlab/Videos/lol/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7fd2380e5940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd2380e5cc0"/>
        <function-ref name="runTask" scoped="" ref="0x7fd2380e5e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fd2380ee510" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7fd2380ee510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd2380ee890"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fd2380eea20"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fd2380eebb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fd23801fd30" loc="56:/home/johlab/Videos/lol/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7fd23801fd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd23801e0e0"/>
        <function-ref name="runTask" scoped="" ref="0x7fd23801e270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7fd23801a2c0" loc="57:/home/johlab/Videos/lol/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7fd23801a2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7fd23801a640"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7fd23801a7d0"/>
        <function-ref name="sleep" scoped="" ref="0x7fd23801a960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fd238020e40" loc="55:/home/johlab/Videos/lol/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7fd238020e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd23801f1e0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fd23801f370"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fd23801f500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7fd237ffb330" loc="86:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fd237ffb330"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fd237ffb6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7fd2380363b0" loc="82:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7fd2380363b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7fd238036730"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7fd2380368c0"/>
        <function-ref name="sleep" scoped="" ref="0x7fd238036a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7fd237ffebe0" loc="83:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7fd237ffebe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fd238000020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fd237df3a80" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fd237df3a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd237df3e00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd237dfd020"/>
        <function-ref name="led1On" scoped="" ref="0x7fd237dfd1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd237dfd340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd237dfd4d0"/>
        <function-ref name="get" scoped="" ref="0x7fd237dfd660"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd237dfd7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd237dfde30"/>
        <function-ref name="set" scoped="" ref="0x7fd237dfd980"/>
        <function-ref name="led0On" scoped="" ref="0x7fd237dfdb10"/>
        <function-ref name="led2On" scoped="" ref="0x7fd237dfdca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7fd237defb90" loc="50:/home/johlab/Videos/lol/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7fd237defb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237dee020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237dee1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237dee340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237dee4d0"/>
        <function-ref name="get" scoped="" ref="0x7fd237dee660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237dee7f0"/>
        <function-ref name="set" scoped="" ref="0x7fd237dee980"/>
        <function-ref name="clr" scoped="" ref="0x7fd237deeb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd237dfcdd0" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd237dfcdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd237df0180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7fd237deee30" loc="51:/home/johlab/Videos/lol/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7fd237deee30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237ded1e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237ded370"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237ded500"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237ded690"/>
        <function-ref name="get" scoped="" ref="0x7fd237ded820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237ded9b0"/>
        <function-ref name="set" scoped="" ref="0x7fd237dedb40"/>
        <function-ref name="clr" scoped="" ref="0x7fd237dedcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fd237df0400" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fd237df0400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd237df0780"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd237df0910"/>
        <function-ref name="led1On" scoped="" ref="0x7fd237df0aa0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd237df0c30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd237df0dc0"/>
        <function-ref name="get" scoped="" ref="0x7fd237def020"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd237def1b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd237def7f0"/>
        <function-ref name="set" scoped="" ref="0x7fd237def340"/>
        <function-ref name="led0On" scoped="" ref="0x7fd237def4d0"/>
        <function-ref name="led2On" scoped="" ref="0x7fd237def660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7fd237dec020" loc="52:/home/johlab/Videos/lol/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7fd237dec020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237dec3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237dec530"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237dec6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237dec850"/>
        <function-ref name="get" scoped="" ref="0x7fd237dec9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237decb70"/>
        <function-ref name="set" scoped="" ref="0x7fd237decd00"/>
        <function-ref name="clr" scoped="" ref="0x7fd237deb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7fd237dcf020" loc="44:/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7fd237dcf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237dcf3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237dcf530"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237dcf6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237dcf850"/>
        <function-ref name="get" scoped="" ref="0x7fd237dcf9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237dcfb70"/>
        <function-ref name="set" scoped="" ref="0x7fd237dcfd00"/>
        <function-ref name="clr" scoped="" ref="0x7fd237dce020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7fd237dce380" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7fd237dce380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237dce700"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237dce890"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237dcea20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237dcebb0"/>
        <function-ref name="get" scoped="" ref="0x7fd237dced40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237dcd020"/>
        <function-ref name="set" scoped="" ref="0x7fd237dcd1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237dcd340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7fd237dcc920" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd237dcc920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd237dccca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7fd237dcd6a0" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7fd237dcd6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237dcda20"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237dcdbb0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237dcdd40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237dcc020"/>
        <function-ref name="get" scoped="" ref="0x7fd237dcc1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237dcc340"/>
        <function-ref name="set" scoped="" ref="0x7fd237dcc4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237dcc660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x7fd237db79e0" loc="7:mymainP.nc">
      <component-ref qname="mymainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x7fd237db79e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd23806cd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd238069180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd237db4020"/>
        <function-ref name="fired" scoped="" ref="0x7fd237dc0510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd237db5300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd237dc0e10"/>
        <function-ref name="getdt" scoped="" ref="0x7fd237db4920"/>
        <function-ref name="gett0" scoped="" ref="0x7fd237db44a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd237dc0990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd237dc1670"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd237db5910"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd237dc1b40"/>
        <function-ref name="stop" scoped="" ref="0x7fd237dc0090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x7fd237d1ba50" loc="12:mymainP.nc">
      <component-ref qname="mymainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMControl" scoped="" ref="0x7fd237d1ba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd237d1bdd0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd237d2b020"/>
        <function-ref name="start" scoped="" ref="0x7fd237d2b1b0"/>
        <function-ref name="stop" scoped="" ref="0x7fd237d2b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7fd237dc4020" loc="5:mymainP.nc">
      <component-ref qname="mymainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7fd237dc4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fd237dc43a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fd237d3c7a0" loc="8:mymainP.nc">
      <component-ref qname="mymainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fd237d3c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd237d3cb20"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd237d3ccb0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd237d3ce40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd237db2020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd237db21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7fd237d228f0" loc="10:mymainP.nc">
      <component-ref qname="mymainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fd237d228f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd237d22c70"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd237d22e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd237d2c020"/>
        <function-ref name="cancel" scoped="" ref="0x7fd237d2c1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd237d2c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="releaseresource" ref="0x7fd237cef7e0" loc="83:mymainP.nc">
      <component-ref qname="mymainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="releaseresource" scoped="" ref="0x7fd237cef7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd237cefc60"/>
        <function-ref name="runTask" scoped="" ref="0x7fd237cefdf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send_data" ref="0x7fd237cf6a40" loc="61:mymainP.nc">
      <component-ref qname="mymainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="send_data" scoped="" ref="0x7fd237cf6a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd237cf6dc0"/>
        <function-ref name="runTask" scoped="" ref="0x7fd237cf5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7fd237d1d180" loc="11:mymainP.nc">
      <component-ref qname="mymainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fd237d1d180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd237d1d500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd237dc4660" loc="6:mymainP.nc">
      <component-ref qname="mymainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fd237dc4660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd237dc49e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd237dc4b70"/>
        <function-ref name="led1On" scoped="" ref="0x7fd237dc4d00"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd237dc3020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd237dc31b0"/>
        <function-ref name="get" scoped="" ref="0x7fd237dc3340"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd237dc34d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd237dc3b10"/>
        <function-ref name="set" scoped="" ref="0x7fd237dc3660"/>
        <function-ref name="led0On" scoped="" ref="0x7fd237dc37f0"/>
        <function-ref name="led2On" scoped="" ref="0x7fd237dc3980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x7fd237d16d20" loc="13:mymainP.nc">
      <component-ref qname="mymainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x7fd237d16d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd237d230e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd237d23270"/>
        <function-ref name="request" scoped="" ref="0x7fd237d23400"/>
        <function-ref name="granted" scoped="" ref="0x7fd237d23590"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd237d23720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x7fd237d06770" loc="14:mymainP.nc">
      <component-ref qname="mymainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7fd237d06770"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7fd237d14540"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7fd237d14800"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd237d193d0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd237d05880"/>
        <function-ref name="write" scoped="" ref="0x7fd237d15020"/>
        <function-ref name="readDone" scoped="" ref="0x7fd237d15c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fd237d2d7e0" loc="9:mymainP.nc">
      <component-ref qname="mymainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fd237d2d7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd237d2db60"/>
        <function-ref name="source" scoped="" ref="0x7fd237d2dcf0"/>
        <function-ref name="address" scoped="" ref="0x7fd237d2de80"/>
        <function-ref name="destination" scoped="" ref="0x7fd237db1030"/>
        <function-ref name="setSource" scoped="" ref="0x7fd237db11c0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd237db1350"/>
        <function-ref name="type" scoped="" ref="0x7fd237db14e0"/>
        <function-ref name="setType" scoped="" ref="0x7fd237db1670"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd237db1800"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd237db1990"/>
        <function-ref name="localGroup" scoped="" ref="0x7fd237db1b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="doI2Cstuff" ref="0x7fd237d02710" loc="23:mymainP.nc">
      <component-ref qname="mymainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="doI2Cstuff" scoped="" ref="0x7fd237d02710"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd237d02a90"/>
        <function-ref name="runTask" scoped="" ref="0x7fd237d02c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd237b09140" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="mymainC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fd237b09140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd23806cd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd238069180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd237b05630"/>
        <function-ref name="fired" scoped="" ref="0x7fd237b08b70"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd237b06920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd237b064a0"/>
        <function-ref name="getdt" scoped="" ref="0x7fd237b04020"/>
        <function-ref name="gett0" scoped="" ref="0x7fd237b05ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd237b06020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd237b09d30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd237b05020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd237b08220"/>
        <function-ref name="stop" scoped="" ref="0x7fd237b086f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fd237ccd1d0" loc="49:/home/johlab/Videos/lol/tinyos-main/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7fd237ccd1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd23806cd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd238069180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd237cca630"/>
        <function-ref name="fired" scoped="" ref="0x7fd237cccc30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd237ccb9d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd237ccb550"/>
        <function-ref name="getdt" scoped="" ref="0x7fd237cc9020"/>
        <function-ref name="gett0" scoped="" ref="0x7fd237ccaab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd237ccb0d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd237ccddc0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd237cca020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd237ccc2e0"/>
        <function-ref name="stop" scoped="" ref="0x7fd237ccc7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fd237cc5c40" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7fd237cc5c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd23806cd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd238069180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd237cc0110"/>
        <function-ref name="fired" scoped="" ref="0x7fd237cc36a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd237cc14a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd237cc1020"/>
        <function-ref name="getdt" scoped="" ref="0x7fd237cc0a10"/>
        <function-ref name="gett0" scoped="" ref="0x7fd237cc0590"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd237cc3b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd237cc4860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd237cc1ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd237cc4d30"/>
        <function-ref name="stop" scoped="" ref="0x7fd237cc3220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fd237cbb510" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7fd237cbb510"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd23806cd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd238069180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd237cbd170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd237cc9e70" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd237cc9e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd237cc5220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7fd237cad060" loc="29:/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7fd237cad060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd23806cd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd238069180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd238a50170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd237cade70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd237cac820"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd237cac360"/>
        <function-ref name="overflow" scoped="" ref="0x7fd237cacce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd237cbcc90" loc="27:/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd237cbcc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd237cb80a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7fd237cb09e0" loc="28:/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7fd237cb09e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd23806cd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd238069180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd238a50170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd237cae2a0"/>
        <function-ref name="fired" scoped="" ref="0x7fd237caf2a0"/>
        <function-ref name="startAt" scoped="" ref="0x7fd237cafc20"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd237caf760"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd237cae760"/>
        <function-ref name="start" scoped="" ref="0x7fd237cb6890"/>
        <function-ref name="stop" scoped="" ref="0x7fd237cb6da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fd237ba8890" loc="61:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fd237ba8890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd23806cd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd238069180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd238a50170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd237ba50d0"/>
        <function-ref name="fired" scoped="" ref="0x7fd237ba60d0"/>
        <function-ref name="startAt" scoped="" ref="0x7fd237ba6a50"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd237ba6590"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd237ba5590"/>
        <function-ref name="start" scoped="" ref="0x7fd237ba76e0"/>
        <function-ref name="stop" scoped="" ref="0x7fd237ba7bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd237ba8080" loc="60:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd237ba8080"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7fd238117020"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7fd238117020"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd237ba8400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fd237ba5bc0" loc="62:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fd237ba5bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd23806cd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd238069180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd238a50170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd237ba3a00"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd237ba24e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd237ba2020"/>
        <function-ref name="overflow" scoped="" ref="0x7fd237ba29a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x7fd236b407d0" loc="66:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fd236b407d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fd236b40b50"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fd236b40ce0"/>
        <function-ref name="getControlA" scoped="" ref="0x7fd236b40e70"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fd236b3f030"/>
        <function-ref name="setControlB" scoped="" ref="0x7fd236b3f1c0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fd236b3f350"/>
        <function-ref name="getControlB" scoped="" ref="0x7fd236b3f4e0"/>
        <function-ref name="setControlA" scoped="" ref="0x7fd236b3f670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fd236b4ce40" loc="61:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fd236b4ce40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd23806cd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd238069180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd238a50170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd236b496e0"/>
        <function-ref name="fired" scoped="" ref="0x7fd236b4a6b0"/>
        <function-ref name="startAt" scoped="" ref="0x7fd236b49090"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd236b4ab70"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd236b49ba0"/>
        <function-ref name="start" scoped="" ref="0x7fd236b4bca0"/>
        <function-ref name="stop" scoped="" ref="0x7fd236b4a1f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd236b4c630" loc="60:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd236b4c630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd236b4c9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fd236b47260" loc="62:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fd236b47260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd23806cd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd238069180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd238a50170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd236b46090"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd236b46a10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd236b46550"/>
        <function-ref name="overflow" scoped="" ref="0x7fd236b45020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x7fd236b3bdd0" loc="68:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7fd236b3bdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7fd236b3a180"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7fd236b3a310"/>
        <function-ref name="controlABusy" scoped="" ref="0x7fd236b3a4a0"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7fd236b3a630"/>
        <function-ref name="countBusy" scoped="" ref="0x7fd236b3a7c0"/>
        <function-ref name="compareABusy" scoped="" ref="0x7fd236b3a950"/>
        <function-ref name="getAssr" scoped="" ref="0x7fd236b3aae0"/>
        <function-ref name="setAssr" scoped="" ref="0x7fd236b3ac70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7fd236b3fa20" loc="67:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7fd236b3fa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fd236b3b4e0"/>
        <function-ref name="fired" scoped="" ref="0x7fd236b3c0d0"/>
        <function-ref name="get" scoped="" ref="0x7fd236b3e6b0"/>
        <function-ref name="reset" scoped="" ref="0x7fd236b3c590"/>
        <function-ref name="isOn" scoped="" ref="0x7fd236b3b9a0"/>
        <function-ref name="set" scoped="" ref="0x7fd236b3eb70"/>
        <function-ref name="start" scoped="" ref="0x7fd236b3ca50"/>
        <function-ref name="stop" scoped="" ref="0x7fd236b3b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd236b455d0" loc="65:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fd236b455d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fd236b419a0"/>
        <function-ref name="test" scoped="" ref="0x7fd236b41020"/>
        <function-ref name="get" scoped="" ref="0x7fd236b44240"/>
        <function-ref name="setScale" scoped="" ref="0x7fd236b41e60"/>
        <function-ref name="getScale" scoped="" ref="0x7fd236b403a0"/>
        <function-ref name="reset" scoped="" ref="0x7fd236b43110"/>
        <function-ref name="overflow" scoped="" ref="0x7fd236b44c10"/>
        <function-ref name="isOn" scoped="" ref="0x7fd236b414e0"/>
        <function-ref name="set" scoped="" ref="0x7fd236b44700"/>
        <function-ref name="start" scoped="" ref="0x7fd236b435d0"/>
        <function-ref name="stop" scoped="" ref="0x7fd236b43a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7fd237c1b020" loc="82:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fd237c1b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fd237c1b3a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fd237c1b530"/>
        <function-ref name="getControlA" scoped="" ref="0x7fd237c1b6c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fd237c1b850"/>
        <function-ref name="setControlB" scoped="" ref="0x7fd237c1b9e0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fd237c1bb70"/>
        <function-ref name="getControlB" scoped="" ref="0x7fd237c1bd00"/>
        <function-ref name="setControlA" scoped="" ref="0x7fd237c1a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7fd237c16a40" loc="84:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7fd237c16a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7fd237c16dc0"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7fd237c15020"/>
        <function-ref name="controlABusy" scoped="" ref="0x7fd237c151b0"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7fd237c15340"/>
        <function-ref name="countBusy" scoped="" ref="0x7fd237c154d0"/>
        <function-ref name="compareABusy" scoped="" ref="0x7fd237c15660"/>
        <function-ref name="getAssr" scoped="" ref="0x7fd237c157f0"/>
        <function-ref name="setAssr" scoped="" ref="0x7fd237c15980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fd237c1a520" loc="83:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7fd237c1a520"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fd237c16020"/>
        <function-ref name="fired" scoped="" ref="0x7fd237c19b80"/>
        <function-ref name="get" scoped="" ref="0x7fd237c191b0"/>
        <function-ref name="reset" scoped="" ref="0x7fd237c17090"/>
        <function-ref name="isOn" scoped="" ref="0x7fd237c164e0"/>
        <function-ref name="set" scoped="" ref="0x7fd237c19670"/>
        <function-ref name="start" scoped="" ref="0x7fd237c17550"/>
        <function-ref name="stop" scoped="" ref="0x7fd237c17a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd237c23c80" loc="81:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fd237c23c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fd237c1c020"/>
        <function-ref name="test" scoped="" ref="0x7fd237c1d610"/>
        <function-ref name="get" scoped="" ref="0x7fd237c208e0"/>
        <function-ref name="setScale" scoped="" ref="0x7fd237c1c4e0"/>
        <function-ref name="getScale" scoped="" ref="0x7fd237c1c9f0"/>
        <function-ref name="reset" scoped="" ref="0x7fd237c1f7a0"/>
        <function-ref name="overflow" scoped="" ref="0x7fd237c1f2e0"/>
        <function-ref name="isOn" scoped="" ref="0x7fd237c1dad0"/>
        <function-ref name="set" scoped="" ref="0x7fd237c20da0"/>
        <function-ref name="start" scoped="" ref="0x7fd237c1fc60"/>
        <function-ref name="stop" scoped="" ref="0x7fd237c1d150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7fd237c0c2b0" loc="83:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fd237c0c2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fd237c0c630"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fd237c0c7c0"/>
        <function-ref name="getControlA" scoped="" ref="0x7fd237c0c950"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fd237c0cae0"/>
        <function-ref name="setControlB" scoped="" ref="0x7fd237c0cc70"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fd237c0ce00"/>
        <function-ref name="getControlB" scoped="" ref="0x7fd237c0b020"/>
        <function-ref name="setControlA" scoped="" ref="0x7fd237c0b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7fd237c07a70" loc="85:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fd237c07a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fd237c07df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7fd237c06230" loc="86:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7fd237c06230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7fd237c065b0"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7fd237c06740"/>
        <function-ref name="controlABusy" scoped="" ref="0x7fd237c068d0"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7fd237c06a60"/>
        <function-ref name="countBusy" scoped="" ref="0x7fd237c06bf0"/>
        <function-ref name="compareABusy" scoped="" ref="0x7fd237c06d80"/>
        <function-ref name="getAssr" scoped="" ref="0x7fd237c05020"/>
        <function-ref name="setAssr" scoped="" ref="0x7fd237c051b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fd237c0b6b0" loc="84:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7fd237c0b6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fd237c07110"/>
        <function-ref name="fired" scoped="" ref="0x7fd237c09da0"/>
        <function-ref name="get" scoped="" ref="0x7fd237c093d0"/>
        <function-ref name="reset" scoped="" ref="0x7fd237c082a0"/>
        <function-ref name="isOn" scoped="" ref="0x7fd237c075d0"/>
        <function-ref name="set" scoped="" ref="0x7fd237c09890"/>
        <function-ref name="start" scoped="" ref="0x7fd237c08760"/>
        <function-ref name="stop" scoped="" ref="0x7fd237c08c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd237c11020" loc="82:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fd237c11020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fd237c0d350"/>
        <function-ref name="test" scoped="" ref="0x7fd237c0e9a0"/>
        <function-ref name="get" scoped="" ref="0x7fd237c11c50"/>
        <function-ref name="setScale" scoped="" ref="0x7fd237c0d810"/>
        <function-ref name="getScale" scoped="" ref="0x7fd237c0dd20"/>
        <function-ref name="reset" scoped="" ref="0x7fd237c10b20"/>
        <function-ref name="overflow" scoped="" ref="0x7fd237c10660"/>
        <function-ref name="isOn" scoped="" ref="0x7fd237c0ee60"/>
        <function-ref name="set" scoped="" ref="0x7fd237c10150"/>
        <function-ref name="start" scoped="" ref="0x7fd237c0e020"/>
        <function-ref name="stop" scoped="" ref="0x7fd237c0e4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7fd237b6f490" loc="74:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7fd237b6f490"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd237b6f810"/>
        <function-ref name="runTask" scoped="" ref="0x7fd237b6f9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7fd237b721d0" loc="49:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fd237b721d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd23806cd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd238069180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd238a50170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd237b70b30"/>
        <function-ref name="fired" scoped="" ref="0x7fd237b719f0"/>
        <function-ref name="startAt" scoped="" ref="0x7fd237b704e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd237b70020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd237b6f020"/>
        <function-ref name="start" scoped="" ref="0x7fd237b71020"/>
        <function-ref name="stop" scoped="" ref="0x7fd237b71530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd237b78cf0" loc="48:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fd237b78cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd23806cd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd238069180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd237b74220"/>
        <function-ref name="fired" scoped="" ref="0x7fd237b767c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd237b75590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd237b75110"/>
        <function-ref name="getdt" scoped="" ref="0x7fd237b74b20"/>
        <function-ref name="gett0" scoped="" ref="0x7fd237b746a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd237b76c40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd237b77940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd237b75ba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd237b77e10"/>
        <function-ref name="stop" scoped="" ref="0x7fd237b76340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7fd237b1ea00" loc="71:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7fd237b1ea00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd237b1ed80"/>
        <function-ref name="runTask" scoped="" ref="0x7fd237b1d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7fd237b24640" loc="49:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7fd237b24640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd23806cd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd238069180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd237b20c40"/>
        <function-ref name="fired" scoped="" ref="0x7fd237b211e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd237b20020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd237b21ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7fd237b1e590"/>
        <function-ref name="gett0" scoped="" ref="0x7fd237b1e110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd237b21660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd237b22390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd237b20630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd237b22860"/>
        <function-ref name="stop" scoped="" ref="0x7fd237b22d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd237b29150" loc="48:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fd237b29150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd23806cd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd238069180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd237b25700"/>
        <function-ref name="fired" scoped="" ref="0x7fd237b28c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fd237b27a50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fd237b275b0"/>
        <function-ref name="getdt" scoped="" ref="0x7fd237b24090"/>
        <function-ref name="gett0" scoped="" ref="0x7fd237b25ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd237b27110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fd237b29d60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fd237b250d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fd237b282a0"/>
        <function-ref name="stop" scoped="" ref="0x7fd237b28790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fd237b1b830" loc="48:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7fd237b1b830"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd23806cd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd238069180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd237b1a4c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fd237b1ab30" loc="49:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fd237b1ab30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd23806cd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd238069180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd238a50170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd237b10970"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd237b0f340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd237b10e30"/>
        <function-ref name="overflow" scoped="" ref="0x7fd237b0f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fd237b03510" loc="41:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fd237b03510"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd237b03890"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd237b03a20"/>
        <function-ref name="start" scoped="" ref="0x7fd237b03bb0"/>
        <function-ref name="stop" scoped="" ref="0x7fd237b03d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fd237af8bf0" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7fd237af8bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd237d609e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fd237afc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fd237afc2b0" loc="48:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fd237afc2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd237afc630"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd237afc7c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd237afc950"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd237afcae0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd237afcc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fd237b00530" loc="43:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fd237b00530"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd237b008b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd237b00a40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd237b00bd0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd237b00d60"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd237aff020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fd237afd430" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7fd237afd430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd237afd7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fd237aeccb0" loc="52:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7fd237aeccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fd237af60a0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fd237af6230"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fd237af63c0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fd237af6550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd237aff800" loc="44:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fd237aff800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd237affb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fd237aef350" loc="51:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd237aef350"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fd237aef6d0"/>
        <function-ref name="noAck" scoped="" ref="0x7fd237aef860"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fd237aef9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fd237af5020" loc="53:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7fd237af5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fd237af53a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7fd237af5530"/>
        <function-ref name="getRetries" scoped="" ref="0x7fd237af56c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fd237af5850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fd237af59e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fd237afb020" loc="49:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fd237afb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd237afb3a0"/>
        <function-ref name="source" scoped="" ref="0x7fd237afb530"/>
        <function-ref name="address" scoped="" ref="0x7fd237afb6c0"/>
        <function-ref name="destination" scoped="" ref="0x7fd237afb850"/>
        <function-ref name="setSource" scoped="" ref="0x7fd237afb9e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd237afbb70"/>
        <function-ref name="type" scoped="" ref="0x7fd237afbd00"/>
        <function-ref name="setType" scoped="" ref="0x7fd237af9020"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd237af91b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd237af9340"/>
        <function-ref name="localGroup" scoped="" ref="0x7fd237af94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7fd237ae0d40" loc="54:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7fd237ae0d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7fd237aea0e0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fd237aea270"/>
        <function-ref name="getChannel" scoped="" ref="0x7fd237aea400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0x7fd237adcd70" loc="56:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x7fd237adcd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd2380681a0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fd238068510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd238a50170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd237adf330"/>
        <function-ref name="clear" scoped="" ref="0x7fd237adfa60"/>
        <function-ref name="isValid" scoped="" ref="0x7fd237ae2ba0"/>
        <function-ref name="set" scoped="" ref="0x7fd237ad6210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fd237ad6e60" loc="57:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fd237ad6e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd23806cd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd238069180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd238a50170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd237ad4500"/>
        <function-ref name="clear" scoped="" ref="0x7fd237ad4c30"/>
        <function-ref name="isValid" scoped="" ref="0x7fd237ad5da0"/>
        <function-ref name="set" scoped="" ref="0x7fd237ad23b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fd237ad1620" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fd237ad1620"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd237ad19a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd237ad1b30"/>
        <function-ref name="start" scoped="" ref="0x7fd237ad1cc0"/>
        <function-ref name="stop" scoped="" ref="0x7fd237ad1e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7fd237abbc40" loc="62:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7fd237abbc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd237ab83c0"/>
        <function-ref name="get" scoped="" ref="0x7fd237ab9df0"/>
        <function-ref name="isSet" scoped="" ref="0x7fd237ab98a0"/>
        <function-ref name="set" scoped="" ref="0x7fd237ab8910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fd237aca1d0" loc="50:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7fd237aca1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd237d609e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fd237aca550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fd237aca7e0" loc="52:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fd237aca7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd237acab60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd237acacf0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd237acae80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd237ac9030"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd237ac91c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fd237ace660" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fd237ace660"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd237d609e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd237ace9e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd237aceb70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd237aced00"/>
        <function-ref name="cancel" scoped="" ref="0x7fd237acd020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd237acd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fd237acc5a0" loc="49:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7fd237acc5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd237d609e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd237acc920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7fd237abd660" loc="61:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7fd237abd660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd237abce70"/>
        <function-ref name="get" scoped="" ref="0x7fd237abc920"/>
        <function-ref name="isSet" scoped="" ref="0x7fd237abc3d0"/>
        <function-ref name="set" scoped="" ref="0x7fd237abb3f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fd237ac7640" loc="56:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7fd237ac7640"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fd237ac79c0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fd237ac7b50"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fd237ac7ce0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fd237ac7e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd237acd990" loc="48:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fd237acd990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd237d609e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd237acdd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7fd237ab45e0" loc="66:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7fd237ab45e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd2380681a0"/>
            <typename><typedef-ref name="TRadio" ref="0x7fd237d6fd20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd238a50170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd237ab2b50"/>
        <function-ref name="clear" scoped="" ref="0x7fd237ab02e0"/>
        <function-ref name="isValid" scoped="" ref="0x7fd237ab2420"/>
        <function-ref name="set" scoped="" ref="0x7fd237ab0a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7fd237ab50f0" loc="65:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fd237ab50f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd2380681a0"/>
            <typename><typedef-ref name="TRadio" ref="0x7fd237d6fd20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd237ab5d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7fd237ac4110" loc="60:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7fd237ac4110"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd237ac3830"/>
        <function-ref name="get" scoped="" ref="0x7fd237ac32e0"/>
        <function-ref name="isSet" scoped="" ref="0x7fd237ac4d40"/>
        <function-ref name="set" scoped="" ref="0x7fd237ac3d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fd237ac8b20" loc="55:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd237ac8b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fd237ac7020"/>
        <function-ref name="noAck" scoped="" ref="0x7fd237ac71b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fd237ac7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fd237ac6160" loc="57:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7fd237ac6160"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fd237ac64e0"/>
        <function-ref name="setRetries" scoped="" ref="0x7fd237ac6670"/>
        <function-ref name="getRetries" scoped="" ref="0x7fd237ac6800"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fd237ac6990"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fd237ac6b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fd237ac9470" loc="53:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fd237ac9470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd237ac97f0"/>
        <function-ref name="source" scoped="" ref="0x7fd237ac9980"/>
        <function-ref name="address" scoped="" ref="0x7fd237ac9b10"/>
        <function-ref name="destination" scoped="" ref="0x7fd237ac9ca0"/>
        <function-ref name="setSource" scoped="" ref="0x7fd237ac9e30"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd237ac8020"/>
        <function-ref name="type" scoped="" ref="0x7fd237ac81b0"/>
        <function-ref name="setType" scoped="" ref="0x7fd237ac8340"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd237ac84d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd237ac8660"/>
        <function-ref name="localGroup" scoped="" ref="0x7fd237ac87f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7fd237ac6df0" loc="58:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7fd237ac6df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7fd237ac51c0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fd237ac5350"/>
        <function-ref name="getChannel" scoped="" ref="0x7fd237ac54e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fd237ab3800" loc="63:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd237ab3800"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fd237ab3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fd237aaf6c0" loc="67:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fd237aaf6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd23806cd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd238069180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd238a50170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd237aaece0"/>
        <function-ref name="clear" scoped="" ref="0x7fd237aac460"/>
        <function-ref name="isValid" scoped="" ref="0x7fd237aae5b0"/>
        <function-ref name="set" scoped="" ref="0x7fd237aacb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fd237aabd70" loc="41:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fd237aabd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd237aa7180"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd237aa7310"/>
        <function-ref name="start" scoped="" ref="0x7fd237aa74a0"/>
        <function-ref name="stop" scoped="" ref="0x7fd237aa7630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7fd237a82520" loc="85:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7fd237a82520"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd237a81c50"/>
        <function-ref name="get" scoped="" ref="0x7fd237a81700"/>
        <function-ref name="isSet" scoped="" ref="0x7fd237a811b0"/>
        <function-ref name="set" scoped="" ref="0x7fd237a801f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x7fd237a9f8c0" loc="65:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x7fd237a9f8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fd237a9fc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x7fd237a97530" loc="67:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x7fd237a97530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd237a978b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd237a97a40"/>
        <function-ref name="request" scoped="" ref="0x7fd237a97bd0"/>
        <function-ref name="granted" scoped="" ref="0x7fd237a97d60"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd237a96020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fd237aa3830" loc="57:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7fd237aa3830"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd237d609e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fd237aa3bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fd237a79840" loc="90:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fd237a79840"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd23806cd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd238069180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd238a50170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd237a78dd0"/>
        <function-ref name="clear" scoped="" ref="0x7fd237a76540"/>
        <function-ref name="isValid" scoped="" ref="0x7fd237a786a0"/>
        <function-ref name="set" scoped="" ref="0x7fd237a76c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fd237aa7e00" loc="54:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fd237aa7e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd237d609e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd237aa61c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd237aa6350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd237aa64e0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd237aa6670"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd237aa6800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fd237aa4c00" loc="56:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7fd237aa4c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd237d609e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd237aa3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7fd237a8c840" loc="69:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7fd237a8c840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7fd237a8cbc0"/>
        <function-ref name="address" scoped="" ref="0x7fd237a8cd50"/>
        <function-ref name="destination" scoped="" ref="0x7fd237a95020"/>
        <function-ref name="setSource" scoped="" ref="0x7fd237a951b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd237a95340"/>
        <function-ref name="pan" scoped="" ref="0x7fd237a954d0"/>
        <function-ref name="setPan" scoped="" ref="0x7fd237a95660"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd237a957f0"/>
        <function-ref name="localPan" scoped="" ref="0x7fd237a95980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x7fd237a95d40" loc="70:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x7fd237a95d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd237a941e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd237a94370"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd237a94500"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd237a94690"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd237a94820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fd237a8b640" loc="74:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7fd237a8b640"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fd237a8b9c0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fd237a8bb50"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fd237a8bce0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fd237a8be70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7fd237a85020" loc="84:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7fd237a85020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd237a84740"/>
        <function-ref name="get" scoped="" ref="0x7fd237a841f0"/>
        <function-ref name="isSet" scoped="" ref="0x7fd237a85c50"/>
        <function-ref name="set" scoped="" ref="0x7fd237a84c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd237aa4020" loc="55:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fd237aa4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd237d609e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd237aa43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x7fd237aa16f0" loc="59:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x7fd237aa16f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd237aa1a70"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd237aa1c00"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd237aa1d90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd237aa0020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd237aa01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7fd237a7d660" loc="89:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7fd237a7d660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd2380681a0"/>
            <typename><typedef-ref name="TRadio" ref="0x7fd237d6fd20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd238a50170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd237a7cce0"/>
        <function-ref name="clear" scoped="" ref="0x7fd237a7a460"/>
        <function-ref name="isValid" scoped="" ref="0x7fd237a7c5b0"/>
        <function-ref name="set" scoped="" ref="0x7fd237a7ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7fd237a7e150" loc="88:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fd237a7e150"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd2380681a0"/>
            <typename><typedef-ref name="TRadio" ref="0x7fd237d6fd20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd237a7ed80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7fd237a89a00" loc="83:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7fd237a89a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd237a871b0"/>
        <function-ref name="get" scoped="" ref="0x7fd237a88c00"/>
        <function-ref name="isSet" scoped="" ref="0x7fd237a886b0"/>
        <function-ref name="set" scoped="" ref="0x7fd237a87700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fd237a94b50" loc="73:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd237a94b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fd237a8b020"/>
        <function-ref name="noAck" scoped="" ref="0x7fd237a8b1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fd237a8b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7fd237a98420" loc="63:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7fd237a98420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd237a987a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd237a98930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd237a98ac0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd237a98c50"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd237a98de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fd237a8a160" loc="75:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7fd237a8a160"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fd237a8a4e0"/>
        <function-ref name="setRetries" scoped="" ref="0x7fd237a8a670"/>
        <function-ref name="getRetries" scoped="" ref="0x7fd237a8a800"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fd237a8a990"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fd237a8ab20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fd237aa3e60" loc="58:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fd237aa3e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd237aa2210"/>
        <function-ref name="source" scoped="" ref="0x7fd237aa23a0"/>
        <function-ref name="address" scoped="" ref="0x7fd237aa2530"/>
        <function-ref name="destination" scoped="" ref="0x7fd237aa26c0"/>
        <function-ref name="setSource" scoped="" ref="0x7fd237aa2850"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd237aa29e0"/>
        <function-ref name="type" scoped="" ref="0x7fd237aa2b70"/>
        <function-ref name="setType" scoped="" ref="0x7fd237aa2d00"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd237aa1020"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd237aa11b0"/>
        <function-ref name="localGroup" scoped="" ref="0x7fd237aa1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7fd237a9f190" loc="64:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7fd237a9f190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd237a9f510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7fd237a8adf0" loc="81:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7fd237a8adf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7fd237a891c0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fd237a89350"/>
        <function-ref name="getChannel" scoped="" ref="0x7fd237a894e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fd237a80870" loc="86:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd237a80870"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fd237a80bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x7fd237a743c0" loc="44:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="RF230RadioC.TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7fd237a743c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7fd237a74740"/>
        <function-ref name="suspend" scoped="" ref="0x7fd237a748d0"/>
        <function-ref name="resume" scoped="" ref="0x7fd237a74a60"/>
        <function-ref name="run" scoped="" ref="0x7fd237a74bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x7fd237a27aa0" loc="38:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="RF230RadioC.NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7fd237a27aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd237a27e40"/>
        <function-ref name="clearAll" scoped="" ref="0x7fd237a26020"/>
        <function-ref name="get" scoped="" ref="0x7fd237a261b0"/>
        <function-ref name="set" scoped="" ref="0x7fd237a26340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x7fd237a62cb0" loc="37:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="RF230RadioC.NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7fd237a62cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7fd237a270a0"/>
        <function-ref name="insertNode" scoped="" ref="0x7fd237a27230"/>
        <function-ref name="getNode" scoped="" ref="0x7fd237a273c0"/>
        <function-ref name="evicted" scoped="" ref="0x7fd237a27550"/>
        <function-ref name="getIndex" scoped="" ref="0x7fd237a276e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x7fd236ab0850" loc="43:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="RF230RadioC.NeighborhoodC.NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7fd236ab0850"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd236ab0bf0"/>
        <function-ref name="clearAll" scoped="" ref="0x7fd236ab0d80"/>
        <function-ref name="get" scoped="" ref="0x7fd236aaf020"/>
        <function-ref name="set" scoped="" ref="0x7fd236aaf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x7fd236ab1980" loc="42:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="RF230RadioC.NeighborhoodC.NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7fd236ab1980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7fd236ab1d00"/>
        <function-ref name="insertNode" scoped="" ref="0x7fd236ab0020"/>
        <function-ref name="getNode" scoped="" ref="0x7fd236ab01b0"/>
        <function-ref name="evicted" scoped="" ref="0x7fd236ab0340"/>
        <function-ref name="getIndex" scoped="" ref="0x7fd236ab04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd236ab13b0" loc="41:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="RF230RadioC.NeighborhoodC.NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd236ab13b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd236ab1730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x7fd2379f6560" loc="51:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x7fd2379f6560"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7fd2379f68e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x7fd237a0a660" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x7fd237a0a660"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0x7fd237a0a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x7fd2379f9890" loc="50:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x7fd2379f9890"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd2379f9c10"/>
        <function-ref name="checkFrame" scoped="" ref="0x7fd2379f9da0"/>
        <function-ref name="source" scoped="" ref="0x7fd237a05020"/>
        <function-ref name="destination" scoped="" ref="0x7fd237a051b0"/>
        <function-ref name="setSource" scoped="" ref="0x7fd237a05340"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd237a054d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd237a05660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x7fd237a00310" loc="49:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x7fd237a00310"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x7fd237a00690"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x7fd237a00820"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x7fd237a009b0"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x7fd237a00b40"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x7fd237a00cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7fd2379d6400" loc="61:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7fd2379d6400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd2379d6780"/>
        <function-ref name="wait" scoped="" ref="0x7fd2379d6910"/>
        <function-ref name="cancel" scoped="" ref="0x7fd2379d6aa0"/>
        <function-ref name="isFree" scoped="" ref="0x7fd2379d6c30"/>
        <function-ref name="getNow" scoped="" ref="0x7fd2379d6dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Packet" ref="0x7fd2379d0960" loc="62:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Packet" scoped="" ref="0x7fd2379d0960"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd2379d0ce0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd2379d0e70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd2379d9030"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd2379d91c0"/>
        <function-ref name="headerLength" scoped="" ref="0x7fd2379d9350"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fd2379d94e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7fd2379d9ab0" loc="64:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fd2379d9ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd2380681a0"/>
            <typename><typedef-ref name="TRadio" ref="0x7fd237d6fd20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd238a50170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd2379ce170"/>
        <function-ref name="clear" scoped="" ref="0x7fd2379ce8a0"/>
        <function-ref name="isValid" scoped="" ref="0x7fd2379d5a00"/>
        <function-ref name="set" scoped="" ref="0x7fd2379cd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0x7fd237a21020" loc="43:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0x7fd237a21020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd237a213a0"/>
        <function-ref name="headerLength" scoped="" ref="0x7fd237a21530"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fd237a216c0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7fd237a21850"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7fd237a219e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x7fd237a11020" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x7fd237a11020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x7fd237a113a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x7fd237a12190" loc="44:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x7fd237a12190"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x7fd237a12510"/>
        <function-ref name="createAckPacket" scoped="" ref="0x7fd237a126a0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7fd237a12830"/>
        <function-ref name="isAckPacket" scoped="" ref="0x7fd237a129c0"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x7fd237a12b50"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x7fd237a12ce0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7fd237a12e70"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7fd237a20030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x7fd2379dc470" loc="60:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7fd2379dc470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7fd2379dc7f0"/>
        <function-ref name="getDSN" scoped="" ref="0x7fd2379dc980"/>
        <function-ref name="setFCF" scoped="" ref="0x7fd2379dcb10"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7fd2379dcca0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7fd2379dce30"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7fd2379ff020"/>
        <function-ref name="setDSN" scoped="" ref="0x7fd2379ff1b0"/>
        <function-ref name="createAckReply" scoped="" ref="0x7fd2379ff340"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7fd2379ff4d0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7fd2379ff660"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7fd2379ff7f0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7fd2379ff980"/>
        <function-ref name="localAddr" scoped="" ref="0x7fd2379ffb10"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7fd2379ffda0"/>
        <function-ref name="localPan" scoped="" ref="0x7fd2379f7020"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7fd2379f71b0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7fd2379f7340"/>
        <function-ref name="setFramePending" scoped="" ref="0x7fd2379f74d0"/>
        <function-ref name="setDestPan" scoped="" ref="0x7fd2379f7660"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd2379f77f0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7fd2379f7980"/>
        <function-ref name="getFCF" scoped="" ref="0x7fd2379f7b10"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7fd2379f7ca0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7fd2379f7e30"/>
        <function-ref name="getFramePending" scoped="" ref="0x7fd2379db020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x7fd237a0d480" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x7fd237a0d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7fd237a0d800"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7fd237a0d990"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7fd237a0db20"/>
        <function-ref name="getSender" scoped="" ref="0x7fd237a0dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x7fd237a06c80" loc="48:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x7fd237a06c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7fd237a0c0a0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7fd237a0c230"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7fd237a0c3c0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7fd237a0c550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x7fd237947020" loc="41:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7fd237947020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd2379473c0"/>
        <function-ref name="wait" scoped="" ref="0x7fd237947550"/>
        <function-ref name="cancel" scoped="" ref="0x7fd2379476e0"/>
        <function-ref name="isFree" scoped="" ref="0x7fd237947870"/>
        <function-ref name="getNow" scoped="" ref="0x7fd237947a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7fd237946b60" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fd237946b60"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7fd2381173a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7fd2381173a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd2380681a0"/>
            <typename><typedef-ref name="TRadio" ref="0x7fd237d6fd20"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7fd237d6e180"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd2379434e0"/>
        <function-ref name="fired" scoped="" ref="0x7fd2379444e0"/>
        <function-ref name="startAt" scoped="" ref="0x7fd237944e60"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd2379449a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd2379439a0"/>
        <function-ref name="start" scoped="" ref="0x7fd2379459b0"/>
        <function-ref name="stop" scoped="" ref="0x7fd237944020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7fd237947cb0" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7fd237947cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7fd2379460a0"/>
        <function-ref name="suspend" scoped="" ref="0x7fd237946230"/>
        <function-ref name="resume" scoped="" ref="0x7fd2379463c0"/>
        <function-ref name="run" scoped="" ref="0x7fd237946550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x7fd236a967c0" loc="54:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7fd236a967c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd236a96b60"/>
        <function-ref name="wait" scoped="" ref="0x7fd236a96cf0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd236a96e80"/>
        <function-ref name="isFree" scoped="" ref="0x7fd236a95030"/>
        <function-ref name="getNow" scoped="" ref="0x7fd236a951c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7fd236a956b0" loc="59:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fd236a956b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd2380681a0"/>
            <typename><typedef-ref name="TRadio" ref="0x7fd237d6fd20"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7fd237d6e180"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd236a91020"/>
        <function-ref name="fired" scoped="" ref="0x7fd236a92020"/>
        <function-ref name="startAt" scoped="" ref="0x7fd236a929a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd236a924e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd236a914e0"/>
        <function-ref name="start" scoped="" ref="0x7fd236a935b0"/>
        <function-ref name="stop" scoped="" ref="0x7fd236a93ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7fd236a918d0" loc="60:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7fd236a918d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7fd236a91c50"/>
        <function-ref name="suspend" scoped="" ref="0x7fd236a91de0"/>
        <function-ref name="resume" scoped="" ref="0x7fd236a90020"/>
        <function-ref name="run" scoped="" ref="0x7fd236a901b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fd2378988f0" loc="50:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fd2378988f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd237898c70"/>
        <function-ref name="cancel" scoped="" ref="0x7fd237898e00"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd237897020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fd2378972b0" loc="51:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fd2378972b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd237897630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fd23789a3a0" loc="44:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7fd23789a3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd237d609e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fd23789a740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fd23789d720" loc="40:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fd23789d720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd23789daa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd23789dc30"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd23789ddc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd23789c020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd23789c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fd23789c530" loc="41:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fd23789c530"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd237d609e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd23789c8d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd23789ca60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd23789cbf0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd23789cd80"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd23789b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fd23789bb00" loc="43:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7fd23789bb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd237d609e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd23789a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fd23789aa30" loc="49:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fd23789aa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd23789adb0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd237898020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd2378981b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd237898340"/>
        <function-ref name="headerLength" scoped="" ref="0x7fd2378984d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fd237898660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fd2378978c0" loc="52:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7fd2378978c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd237897c40"/>
        <function-ref name="checkFrame" scoped="" ref="0x7fd237897dd0"/>
        <function-ref name="source" scoped="" ref="0x7fd237896020"/>
        <function-ref name="destination" scoped="" ref="0x7fd2378961b0"/>
        <function-ref name="setSource" scoped="" ref="0x7fd237896340"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd2378964d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd237896660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd23789b3a0" loc="42:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fd23789b3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd237d609e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd23789b740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fd23789e020" loc="39:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fd23789e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd23789e3a0"/>
        <function-ref name="source" scoped="" ref="0x7fd23789e530"/>
        <function-ref name="address" scoped="" ref="0x7fd23789e6c0"/>
        <function-ref name="destination" scoped="" ref="0x7fd23789e850"/>
        <function-ref name="setSource" scoped="" ref="0x7fd23789e9e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd23789eb70"/>
        <function-ref name="type" scoped="" ref="0x7fd23789ed00"/>
        <function-ref name="setType" scoped="" ref="0x7fd23789d020"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd23789d1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd23789d340"/>
        <function-ref name="localGroup" scoped="" ref="0x7fd23789d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fd236a71be0" loc="54:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fd236a71be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd236a70020"/>
        <function-ref name="cancel" scoped="" ref="0x7fd236a701b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd236a70340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fd236a705d0" loc="55:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fd236a705d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd236a70950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fd236a72740" loc="48:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7fd236a72740"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd237d609e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fd236a72ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fd236a76bd0" loc="44:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fd236a76bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd236a75020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd236a751b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd236a75340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd236a754d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd236a75660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7fd236a78740" loc="42:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7fd236a78740"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd236a78ac0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd236a78c50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd236a78de0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd236a77020"/>
        <function-ref name="headerLength" scoped="" ref="0x7fd236a771b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fd236a77340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fd236a759e0" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fd236a759e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd237d609e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd236a75d80"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd236a73020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd236a731b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd236a73340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd236a734d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fd236a72020" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7fd236a72020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd237d609e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd236a723c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fd236a72dd0" loc="53:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fd236a72dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd236a71180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd236a71310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd236a714a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd236a71630"/>
        <function-ref name="headerLength" scoped="" ref="0x7fd236a717c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fd236a71950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd236a73850" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fd236a73850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd237d609e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd236a73bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fd236a70be0" loc="56:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7fd236a70be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd236a6f020"/>
        <function-ref name="checkFrame" scoped="" ref="0x7fd236a6f1b0"/>
        <function-ref name="source" scoped="" ref="0x7fd236a6f340"/>
        <function-ref name="destination" scoped="" ref="0x7fd236a6f4d0"/>
        <function-ref name="setSource" scoped="" ref="0x7fd236a6f660"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd236a6f7f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd236a6f980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7fd236a6fbd0" loc="57:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fd236a6fbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fd236a6e020"/>
        <function-ref name="changed" scoped="" ref="0x7fd236a6e1b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7fd236a6e340"/>
        <function-ref name="setAddress" scoped="" ref="0x7fd236a6e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fd236a77590" loc="43:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fd236a77590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd236a77910"/>
        <function-ref name="source" scoped="" ref="0x7fd236a77aa0"/>
        <function-ref name="address" scoped="" ref="0x7fd236a77c30"/>
        <function-ref name="destination" scoped="" ref="0x7fd236a77dc0"/>
        <function-ref name="setSource" scoped="" ref="0x7fd236a76020"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd236a761b0"/>
        <function-ref name="type" scoped="" ref="0x7fd236a76340"/>
        <function-ref name="setType" scoped="" ref="0x7fd236a764d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd236a76660"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd236a767f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7fd236a76980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7fd2378b7260" loc="54:/home/johlab/Videos/lol/tinyos-main/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fd2378b7260"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fd2378b75e0"/>
        <function-ref name="changed" scoped="" ref="0x7fd2378b7770"/>
        <function-ref name="amGroup" scoped="" ref="0x7fd2378b7900"/>
        <function-ref name="setAddress" scoped="" ref="0x7fd2378b7a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fd237890310" loc="44:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fd237890310"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd237890690"/>
        <function-ref name="cancel" scoped="" ref="0x7fd237890820"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd2378909b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fd237890c00" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd237890c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd237880020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd2378801b0"/>
        <function-ref name="request" scoped="" ref="0x7fd237880340"/>
        <function-ref name="granted" scoped="" ref="0x7fd2378804d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd237880660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7fd237891880" loc="39:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7fd237891880"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd237891c00"/>
        <function-ref name="cancel" scoped="" ref="0x7fd237891d90"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd237890020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fd23781a150" loc="86:/home/johlab/Videos/lol/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fd23781a150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fd23781a4f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd23781a680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fd2378191f0" loc="89:/home/johlab/Videos/lol/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd2378191f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd237819590"/>
        <function-ref name="configure" scoped="" ref="0x7fd237819720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd23781b390" loc="85:/home/johlab/Videos/lol/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd23781b390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd23781b730"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd23781b8c0"/>
        <function-ref name="request" scoped="" ref="0x7fd23781ba50"/>
        <function-ref name="granted" scoped="" ref="0x7fd23781bbe0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd23781bd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fd23781a8d0" loc="87:/home/johlab/Videos/lol/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd23781a8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd23781ac50"/>
        <function-ref name="userId" scoped="" ref="0x7fd23781ade0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd236a20850" loc="44:/home/johlab/Videos/lol/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd236a20850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd236a20bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fd236a20e60" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7fd236a20e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fd236a1f210"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fd236a1f3a0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fd236a1f530"/>
        <function-ref name="dequeue" scoped="" ref="0x7fd236a1f6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fd236a1db40" loc="52:/home/johlab/Videos/lol/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fd236a1db40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fd236a1b020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd236a1b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fd236a1bcf0" loc="56:/home/johlab/Videos/lol/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd236a1bcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd236a1a0e0"/>
        <function-ref name="configure" scoped="" ref="0x7fd236a1a270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fd236a1a500" loc="57:/home/johlab/Videos/lol/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7fd236a1a500"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fd236a1a880"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fd236a1aa10"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fd236a1aba0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fd236a1ad30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd236a1ed80" loc="51:/home/johlab/Videos/lol/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd236a1ed80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd236a1d180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd236a1d310"/>
        <function-ref name="request" scoped="" ref="0x7fd236a1d4a0"/>
        <function-ref name="granted" scoped="" ref="0x7fd236a1d630"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd236a1d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fd236a1b400" loc="53:/home/johlab/Videos/lol/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd236a1b400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd236a1b780"/>
        <function-ref name="userId" scoped="" ref="0x7fd236a1b910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fd236a19060" loc="68:/home/johlab/Videos/lol/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7fd236a19060"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd236a193e0"/>
        <function-ref name="runTask" scoped="" ref="0x7fd236a19570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fd2377e12b0" loc="49:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fd2377e12b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd2377e1630"/>
        <function-ref name="cancel" scoped="" ref="0x7fd2377e17c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd2377e1950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fd2377e1be0" loc="50:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fd2377e1be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd2377e0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fd2377e6d30" loc="42:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7fd2377e6d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fd2377e50e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fd237816e00" loc="39:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fd237816e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd2377e81c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd2377e8350"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd2377e84e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd2377e8670"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd2377e8800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x7fd2377e2470" loc="48:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7fd2377e2470"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd2377e27f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd2377e2980"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd2377e2b10"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd2377e2ca0"/>
        <function-ref name="headerLength" scoped="" ref="0x7fd2377e2e30"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fd2377e1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x7fd2377e5390" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7fd2377e5390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7fd2377e5710"/>
        <function-ref name="getDSN" scoped="" ref="0x7fd2377e58a0"/>
        <function-ref name="setFCF" scoped="" ref="0x7fd2377e5a30"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7fd2377e5bc0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7fd2377e5d50"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7fd2377e4020"/>
        <function-ref name="setDSN" scoped="" ref="0x7fd2377e41b0"/>
        <function-ref name="createAckReply" scoped="" ref="0x7fd2377e4340"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7fd2377e44d0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7fd2377e4660"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7fd2377e47f0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7fd2377e4980"/>
        <function-ref name="localAddr" scoped="" ref="0x7fd2377e4b10"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7fd2377e4da0"/>
        <function-ref name="localPan" scoped="" ref="0x7fd2377e3020"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7fd2377e31b0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7fd2377e3340"/>
        <function-ref name="setFramePending" scoped="" ref="0x7fd2377e34d0"/>
        <function-ref name="setDestPan" scoped="" ref="0x7fd2377e3660"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd2377e37f0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7fd2377e3980"/>
        <function-ref name="getFCF" scoped="" ref="0x7fd2377e3b10"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7fd2377e3ca0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7fd2377e3e30"/>
        <function-ref name="getFramePending" scoped="" ref="0x7fd2377e2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7fd2377e8a50" loc="40:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7fd2377e8a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd2377e8dd0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd2377e6020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd2377e61b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd2377e6340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd2377e64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7fd2377e6760" loc="41:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7fd2377e6760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd2377e6ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fd2377a44a0" loc="69:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fd2377a44a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd2377a4820"/>
        <function-ref name="cancel" scoped="" ref="0x7fd2377a49b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd2377a4b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fd2377a4dd0" loc="70:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fd2377a4dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd2377a2180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7fd2377a7730" loc="57:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7fd2377a7730"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd2377a7ab0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd2377a7c40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd2377a7dd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd2377a6020"/>
        <function-ref name="headerLength" scoped="" ref="0x7fd2377a61b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fd2377a6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x7fd2377a5020" loc="62:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x7fd2377a5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd2377a53a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fd2377a2410" loc="71:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fd2377a2410"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd2377a2790"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd2377a2920"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd2377a2ab0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd2377a2c40"/>
        <function-ref name="headerLength" scoped="" ref="0x7fd2377a2dd0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fd2377a1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x7fd2377a65d0" loc="61:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x7fd2377a65d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd2377a6950"/>
        <function-ref name="cancel" scoped="" ref="0x7fd2377a6ae0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd2377a6c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x7fd2377da7c0" loc="55:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x7fd2377da7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd2377dab40"/>
        <function-ref name="cancel" scoped="" ref="0x7fd2377dacd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd2377dae60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x7fd2377a7120" loc="56:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x7fd2377a7120"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd2377a74a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x7fd2377a5630" loc="63:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x7fd2377a5630"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd2377a59b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd2377a5b40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd2377a5cd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd2377a5e60"/>
        <function-ref name="headerLength" scoped="" ref="0x7fd2377a4020"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fd2377a41b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fd237704440" loc="48:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fd237704440"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd2377047c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7fd237708dd0" loc="40:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7fd237708dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7fd237707180"/>
        <function-ref name="address" scoped="" ref="0x7fd237707310"/>
        <function-ref name="destination" scoped="" ref="0x7fd2377074a0"/>
        <function-ref name="setSource" scoped="" ref="0x7fd237707630"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd2377077c0"/>
        <function-ref name="pan" scoped="" ref="0x7fd237707950"/>
        <function-ref name="setPan" scoped="" ref="0x7fd237707ae0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd237707c70"/>
        <function-ref name="localPan" scoped="" ref="0x7fd237707e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7fd237706080" loc="41:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7fd237706080"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd237706400"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd237706590"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd237706720"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd2377068b0"/>
        <function-ref name="headerLength" scoped="" ref="0x7fd237706a40"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fd237706bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x7fd23770be00" loc="39:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7fd23770be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7fd23770a1c0"/>
        <function-ref name="getDSN" scoped="" ref="0x7fd23770a350"/>
        <function-ref name="setFCF" scoped="" ref="0x7fd23770a4e0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7fd23770a670"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7fd23770a800"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7fd23770a990"/>
        <function-ref name="setDSN" scoped="" ref="0x7fd23770ab20"/>
        <function-ref name="createAckReply" scoped="" ref="0x7fd23770acb0"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7fd23770ae40"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7fd237709020"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7fd2377091b0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7fd237709340"/>
        <function-ref name="localAddr" scoped="" ref="0x7fd2377094d0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7fd237709760"/>
        <function-ref name="localPan" scoped="" ref="0x7fd2377098f0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7fd237709a80"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7fd237709c10"/>
        <function-ref name="setFramePending" scoped="" ref="0x7fd237709da0"/>
        <function-ref name="setDestPan" scoped="" ref="0x7fd237708020"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd2377081b0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7fd237708340"/>
        <function-ref name="getFCF" scoped="" ref="0x7fd2377084d0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7fd237708660"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7fd2377087f0"/>
        <function-ref name="getFramePending" scoped="" ref="0x7fd237708980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fd237705500" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fd237705500"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd237705880"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd237705a10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd237705ba0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd237705d30"/>
        <function-ref name="headerLength" scoped="" ref="0x7fd237704020"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fd2377041b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd237706e60" loc="42:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fd237706e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd237705210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fd2369ac8f0" loc="51:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fd2369ac8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd2369acc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x7fd2369b0790" loc="42:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x7fd2369b0790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x7fd2369b0b10"/>
        <function-ref name="address" scoped="" ref="0x7fd2369b0ca0"/>
        <function-ref name="destination" scoped="" ref="0x7fd2369b0e30"/>
        <function-ref name="setSource" scoped="" ref="0x7fd2369af020"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd2369af1b0"/>
        <function-ref name="pan" scoped="" ref="0x7fd2369af340"/>
        <function-ref name="setPan" scoped="" ref="0x7fd2369af4d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd2369af660"/>
        <function-ref name="localPan" scoped="" ref="0x7fd2369af7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7fd2369afa40" loc="43:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7fd2369afa40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd2369afdc0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd2369ae020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd2369ae1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd2369ae340"/>
        <function-ref name="headerLength" scoped="" ref="0x7fd2369ae4d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fd2369ae660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x7fd2369b4740" loc="41:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x7fd2369b4740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x7fd2369b4ac0"/>
        <function-ref name="getDSN" scoped="" ref="0x7fd2369b4c50"/>
        <function-ref name="setFCF" scoped="" ref="0x7fd2369b4de0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x7fd2369b2020"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x7fd2369b21b0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x7fd2369b2340"/>
        <function-ref name="setDSN" scoped="" ref="0x7fd2369b24d0"/>
        <function-ref name="createAckReply" scoped="" ref="0x7fd2369b2660"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x7fd2369b27f0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x7fd2369b2980"/>
        <function-ref name="getAckRequired" scoped="" ref="0x7fd2369b2b10"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x7fd2369b2ca0"/>
        <function-ref name="localAddr" scoped="" ref="0x7fd2369b2e30"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7fd2369b1120"/>
        <function-ref name="localPan" scoped="" ref="0x7fd2369b12b0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x7fd2369b1440"/>
        <function-ref name="createAckFrame" scoped="" ref="0x7fd2369b15d0"/>
        <function-ref name="setFramePending" scoped="" ref="0x7fd2369b1760"/>
        <function-ref name="setDestPan" scoped="" ref="0x7fd2369b18f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd2369b1a80"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7fd2369b1c10"/>
        <function-ref name="getFCF" scoped="" ref="0x7fd2369b1da0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7fd2369b0020"/>
        <function-ref name="getDestAddr" scoped="" ref="0x7fd2369b01b0"/>
        <function-ref name="getFramePending" scoped="" ref="0x7fd2369b0340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7fd2369ad020" loc="49:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fd2369ad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fd2369ad3a0"/>
        <function-ref name="changed" scoped="" ref="0x7fd2369ad530"/>
        <function-ref name="amGroup" scoped="" ref="0x7fd2369ad6c0"/>
        <function-ref name="setAddress" scoped="" ref="0x7fd2369ad850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd2369ae8f0" loc="44:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fd2369ae8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd2369aec70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fd2369adae0" loc="50:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fd2369adae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd2369ade60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd2369ac020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd2369ac1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd2369ac340"/>
        <function-ref name="headerLength" scoped="" ref="0x7fd2369ac4d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fd2369ac660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fd2376d1a70" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fd2376d1a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd2376d1df0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd2376cf020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd2376cf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fd2376cf440" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fd2376cf440"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd2376cf7c0"/>
        <function-ref name="header" scoped="" ref="0x7fd2376cf950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x7fd2376cd400" loc="51:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7fd2376cd400"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd2376cd780"/>
        <function-ref name="clearAll" scoped="" ref="0x7fd2376cd910"/>
        <function-ref name="get" scoped="" ref="0x7fd2376cdaa0"/>
        <function-ref name="set" scoped="" ref="0x7fd2376cdc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd2376d2840" loc="40:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fd2376d2840"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd2376d2bc0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd2376d2d50"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd2376d1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fd2376cfbe0" loc="48:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7fd2376cfbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7fd2376ce020"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7fd2376ce1b0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7fd2376ce340"/>
        <function-ref name="getSender" scoped="" ref="0x7fd2376ce4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7fd2376d1270" loc="41:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7fd2376d1270"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd2376d15f0"/>
        <function-ref name="header" scoped="" ref="0x7fd2376d1780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x7fd2376ce720" loc="50:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7fd2376ce720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7fd2376ceaa0"/>
        <function-ref name="insertNode" scoped="" ref="0x7fd2376cec30"/>
        <function-ref name="getNode" scoped="" ref="0x7fd2376cedc0"/>
        <function-ref name="evicted" scoped="" ref="0x7fd2376cd020"/>
        <function-ref name="getIndex" scoped="" ref="0x7fd2376cd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fd23695a8e0" loc="49:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fd23695a8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd23695ac60"/>
        <function-ref name="cancel" scoped="" ref="0x7fd23695adf0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd236959020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fd2369592b0" loc="50:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fd2369592b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd236959630"/>
        <function-ref name="header" scoped="" ref="0x7fd2369597c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x7fd236956270" loc="54:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x7fd236956270"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd2369565f0"/>
        <function-ref name="clearAll" scoped="" ref="0x7fd236956780"/>
        <function-ref name="get" scoped="" ref="0x7fd236956910"/>
        <function-ref name="set" scoped="" ref="0x7fd236956aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd23695b120" loc="41:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fd23695b120"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd23695b4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd23695b630"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd23695b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x7fd236957590" loc="53:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x7fd236957590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x7fd236957910"/>
        <function-ref name="insertNode" scoped="" ref="0x7fd236957aa0"/>
        <function-ref name="getNode" scoped="" ref="0x7fd236957c30"/>
        <function-ref name="evicted" scoped="" ref="0x7fd236957dc0"/>
        <function-ref name="getIndex" scoped="" ref="0x7fd236956020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7fd23695ba10" loc="42:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7fd23695ba10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd23695bd90"/>
        <function-ref name="header" scoped="" ref="0x7fd23695a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd23695a270" loc="44:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd23695a270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd23695a5f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x7fd236959a10" loc="52:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x7fd236959a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x7fd236959d90"/>
        <function-ref name="reportChannelError" scoped="" ref="0x7fd236957020"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x7fd2369571b0"/>
        <function-ref name="getSender" scoped="" ref="0x7fd236957340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fd2376bb950" loc="85:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fd2376bb950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd2376bbcd0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd2376bbe60"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd2376ba020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fd2376ba2b0" loc="86:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fd2376ba2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd2376ba630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedPacketAcks" ref="0x7fd2376b8d90" loc="93:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x7fd2376b8d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fd2376b7180"/>
        <function-ref name="noAck" scoped="" ref="0x7fd2376b7310"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fd2376b74a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd2376c8e40" loc="77:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fd2376c8e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd2376bd1e0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd2376bd370"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd2376bd500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7fd2376bca10" loc="80:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7fd2376bca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd2376bcd90"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd2376bb020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd2376bb1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd2376bb340"/>
        <function-ref name="headerLength" scoped="" ref="0x7fd2376bb4d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fd2376bb660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fd2376ba8c0" loc="87:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fd2376ba8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd2376bac40"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd2376badd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd2376b9020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd2376b91b0"/>
        <function-ref name="headerLength" scoped="" ref="0x7fd2376b9340"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fd2376b94d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnconnectedPacketLink" ref="0x7fd2376b8100" loc="92:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x7fd2376b8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fd2376b8480"/>
        <function-ref name="setRetries" scoped="" ref="0x7fd2376b8610"/>
        <function-ref name="getRetries" scoped="" ref="0x7fd2376b87a0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fd2376b8930"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fd2376b8ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd2376bd790" loc="78:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fd2376bd790"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd2376bdb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7fd2376b9720" loc="88:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd2376b9720"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fd2376b9aa0"/>
        <function-ref name="noAck" scoped="" ref="0x7fd2376b9c30"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fd2376b9dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fd2376bdd60" loc="79:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7fd2376bdd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fd2376bc180"/>
        <function-ref name="setRetries" scoped="" ref="0x7fd2376bc310"/>
        <function-ref name="getRetries" scoped="" ref="0x7fd2376bc4a0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fd2376bc630"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fd2376bc7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fd2376b1880" loc="39:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fd2376b1880"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd2376b1c00"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd2376b1d90"/>
        <function-ref name="start" scoped="" ref="0x7fd23769d020"/>
        <function-ref name="stop" scoped="" ref="0x7fd23769d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fd2376998c0" loc="49:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fd2376998c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd237699c40"/>
        <function-ref name="cancel" scoped="" ref="0x7fd237699dd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd237698020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fd2376982b0" loc="50:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fd2376982b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd237698630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd23769d440" loc="40:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fd23769d440"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd23769d7c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd23769d950"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd23769dae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7fd23769c3d0" loc="42:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7fd23769c3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd23769c750"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd23769c8e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd23769ca70"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd23769cc00"/>
        <function-ref name="headerLength" scoped="" ref="0x7fd23769cd90"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fd23769b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fd23769b270" loc="44:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7fd23769b270"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fd23769b5f0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fd23769b780"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fd23769b910"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fd23769baa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7fd23769bd90" loc="48:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7fd23769bd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd237699180"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd237699310"/>
        <function-ref name="start" scoped="" ref="0x7fd2376994a0"/>
        <function-ref name="stop" scoped="" ref="0x7fd237699630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd23769dd70" loc="41:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fd23769dd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd23769c180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fd2376988c0" loc="51:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fd2376988c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd237698c40"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd237698dd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd237697020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd2376971b0"/>
        <function-ref name="headerLength" scoped="" ref="0x7fd237697340"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fd2376974d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fd236935da0" loc="37:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7fd236935da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fd236934180"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fd236934310"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fd2369344a0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fd236934630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fd237627a10" loc="39:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fd237627a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd237627d90"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd237626020"/>
        <function-ref name="start" scoped="" ref="0x7fd2376261b0"/>
        <function-ref name="stop" scoped="" ref="0x7fd237626340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x7fd237624aa0" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7fd237624aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7fd237624e20"/>
        <function-ref name="turnOn" scoped="" ref="0x7fd237623020"/>
        <function-ref name="setChannel" scoped="" ref="0x7fd2376231b0"/>
        <function-ref name="done" scoped="" ref="0x7fd237623340"/>
        <function-ref name="standby" scoped="" ref="0x7fd2376234d0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fd237623660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd2376265d0" loc="40:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fd2376265d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd237626950"/>
        <function-ref name="cancel" scoped="" ref="0x7fd237626ae0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd237626c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7fd237622270" loc="49:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7fd237622270"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd2376225f0"/>
        <function-ref name="header" scoped="" ref="0x7fd237622780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd237625020" loc="41:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fd237625020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd2376253a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7fd2376238b0" loc="48:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7fd2376238b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd237623c30"/>
        <function-ref name="ready" scoped="" ref="0x7fd237623dc0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd237622020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7fd2376255f0" loc="42:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7fd2376255f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7fd237625970"/>
        <function-ref name="setChannel" scoped="" ref="0x7fd237625b00"/>
        <function-ref name="getChannel" scoped="" ref="0x7fd237625c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7fd237624020" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7fd237624020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7fd2376243a0"/>
        <function-ref name="suspend" scoped="" ref="0x7fd237624530"/>
        <function-ref name="resume" scoped="" ref="0x7fd2376246c0"/>
        <function-ref name="run" scoped="" ref="0x7fd237624850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fd23692c3f0" loc="43:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fd23692c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd23692c770"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd23692c900"/>
        <function-ref name="start" scoped="" ref="0x7fd23692ca90"/>
        <function-ref name="stop" scoped="" ref="0x7fd23692cc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x7fd23692b020" loc="44:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7fd23692b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd23692b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x7fd236929020" loc="52:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7fd236929020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7fd2369293a0"/>
        <function-ref name="turnOn" scoped="" ref="0x7fd236929530"/>
        <function-ref name="setChannel" scoped="" ref="0x7fd2369296c0"/>
        <function-ref name="done" scoped="" ref="0x7fd236929850"/>
        <function-ref name="standby" scoped="" ref="0x7fd2369299e0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fd236929b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd23692b630" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fd23692b630"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd23692b9b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd23692bb40"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd23692bcd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x7fd2369252f0" loc="189:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x7fd2369252f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd236925670"/>
        <function-ref name="runTask" scoped="" ref="0x7fd236925800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7fd236926270" loc="55:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7fd236926270"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd2369265f0"/>
        <function-ref name="header" scoped="" ref="0x7fd236926780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x7fd236925ad0" loc="144:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x7fd236925ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd236925e50"/>
        <function-ref name="runTask" scoped="" ref="0x7fd236924020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd23692a020" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fd23692a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd23692a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x7fd236926a50" loc="322:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x7fd236926a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd236926dd0"/>
        <function-ref name="runTask" scoped="" ref="0x7fd236925020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7fd236927880" loc="54:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7fd236927880"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd236927c00"/>
        <function-ref name="ready" scoped="" ref="0x7fd236927d90"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd236926020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x7fd23692a5f0" loc="48:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x7fd23692a5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x7fd23692a970"/>
        <function-ref name="setChannel" scoped="" ref="0x7fd23692ab00"/>
        <function-ref name="getChannel" scoped="" ref="0x7fd23692ac90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7fd236929dc0" loc="53:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7fd236929dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7fd236927180"/>
        <function-ref name="suspend" scoped="" ref="0x7fd236927310"/>
        <function-ref name="resume" scoped="" ref="0x7fd2369274a0"/>
        <function-ref name="run" scoped="" ref="0x7fd236927630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fd2375ccc00" loc="44:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fd2375ccc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd2375cb020"/>
        <function-ref name="ready" scoped="" ref="0x7fd2375cb1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd2375cb340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fd2375cb5d0" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fd2375cb5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd2375cb950"/>
        <function-ref name="header" scoped="" ref="0x7fd2375cbae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7fd2375cbd30" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7fd2375cbd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd2375ca0e0"/>
        <function-ref name="wait" scoped="" ref="0x7fd2375ca270"/>
        <function-ref name="cancel" scoped="" ref="0x7fd2375ca400"/>
        <function-ref name="isFree" scoped="" ref="0x7fd2375ca590"/>
        <function-ref name="getNow" scoped="" ref="0x7fd2375ca720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fd2375ca9b0" loc="48:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7fd2375ca9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7fd2375cad30"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7fd2375c9020"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7fd2375c91b0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7fd2375c9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7fd2375cc400" loc="40:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7fd2375cc400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd2375cc780"/>
        <function-ref name="header" scoped="" ref="0x7fd2375cc910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7fd2375cda40" loc="39:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7fd2375cda40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd2375cddc0"/>
        <function-ref name="ready" scoped="" ref="0x7fd2375cc020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd2375cc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fd2368ec4a0" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fd2368ec4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd2368ec820"/>
        <function-ref name="ready" scoped="" ref="0x7fd2368ec9b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd2368ecb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fd2368ecdd0" loc="48:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fd2368ecdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd2368eb180"/>
        <function-ref name="header" scoped="" ref="0x7fd2368eb310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7fd2368eb560" loc="49:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7fd2368eb560"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd2368eb8e0"/>
        <function-ref name="wait" scoped="" ref="0x7fd2368eba70"/>
        <function-ref name="cancel" scoped="" ref="0x7fd2368ebc00"/>
        <function-ref name="isFree" scoped="" ref="0x7fd2368ebd90"/>
        <function-ref name="getNow" scoped="" ref="0x7fd2368ea020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fd2368ea270" loc="50:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7fd2368ea270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fd2368ea5f0"/>
        <function-ref name="rand32" scoped="" ref="0x7fd2368ea780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fd2368eaa10" loc="51:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7fd2368eaa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x7fd2368ead90"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x7fd2368e8020"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x7fd2368e81b0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x7fd2368e8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7fd2368edb70" loc="43:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7fd2368edb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd2368ec020"/>
        <function-ref name="header" scoped="" ref="0x7fd2368ec1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7fd2368ed280" loc="42:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7fd2368ed280"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd2368ed600"/>
        <function-ref name="ready" scoped="" ref="0x7fd2368ed790"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd2368ed920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x7fd2368e8610" loc="78:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x7fd2368e8610"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd2368e8990"/>
        <function-ref name="runTask" scoped="" ref="0x7fd2368e8b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7fd2375e1330" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7fd2375e1330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fd2375e16b0"/>
        <function-ref name="rand32" scoped="" ref="0x7fd2375e1840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7fd2375e2200" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7fd2375e2200"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd2375e2df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd2375e4270" loc="44:/home/johlab/Videos/lol/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd2375e4270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd2375e45f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7fd2375db290" loc="48:/home/johlab/Videos/lol/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7fd2375db290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fd2375db610"/>
        <function-ref name="rand32" scoped="" ref="0x7fd2375db7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7fd2375dc1b0" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7fd2375dc1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd2375dcda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd2375df880" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd2375df880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd2375dfc00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fd237599630" loc="49:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fd237599630"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd2375999b0"/>
        <function-ref name="ready" scoped="" ref="0x7fd237599b40"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd237599cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fd237598020" loc="50:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fd237598020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd2375983a0"/>
        <function-ref name="header" scoped="" ref="0x7fd237598530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7fd237598780" loc="51:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7fd237598780"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd237598b00"/>
        <function-ref name="wait" scoped="" ref="0x7fd237598c90"/>
        <function-ref name="cancel" scoped="" ref="0x7fd237598e20"/>
        <function-ref name="isFree" scoped="" ref="0x7fd237597020"/>
        <function-ref name="getNow" scoped="" ref="0x7fd2375971b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0x7fd2375955d0" loc="54:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0x7fd2375955d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd237595950"/>
        <function-ref name="get" scoped="" ref="0x7fd237595ae0"/>
        <function-ref name="setValue" scoped="" ref="0x7fd237595c70"/>
        <function-ref name="set" scoped="" ref="0x7fd237595e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fd237597440" loc="53:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7fd237597440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x7fd2375977c0"/>
        <function-ref name="createAckPacket" scoped="" ref="0x7fd237597950"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x7fd237597ae0"/>
        <function-ref name="isAckPacket" scoped="" ref="0x7fd237597c70"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x7fd237597e00"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x7fd237595020"/>
        <function-ref name="setAckRequired" scoped="" ref="0x7fd2375951b0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x7fd237595340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7fd23759a400" loc="43:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7fd23759a400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd23759a780"/>
        <function-ref name="header" scoped="" ref="0x7fd23759a910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7fd2375c4ac0" loc="42:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7fd2375c4ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd2375c4e40"/>
        <function-ref name="ready" scoped="" ref="0x7fd23759a020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd23759a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fd23759ab60" loc="44:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fd23759ab60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fd237599020"/>
        <function-ref name="noAck" scoped="" ref="0x7fd2375991b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fd237599340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fd23757c1d0" loc="39:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fd23757c1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd23757c550"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd23757c6e0"/>
        <function-ref name="start" scoped="" ref="0x7fd23757c870"/>
        <function-ref name="stop" scoped="" ref="0x7fd23757ca00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7fd237579b60" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7fd237579b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7fd237577020"/>
        <function-ref name="request" scoped="" ref="0x7fd2375771b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fd237573440" loc="59:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fd237573440"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd2375737c0"/>
        <function-ref name="ready" scoped="" ref="0x7fd237573950"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd237573ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fd237573d70" loc="60:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fd237573d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd237572180"/>
        <function-ref name="header" scoped="" ref="0x7fd237572310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7fd23757bb60" loc="43:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7fd23757bb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7fd23757a020"/>
        <function-ref name="turnOn" scoped="" ref="0x7fd23757a1b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fd23757a340"/>
        <function-ref name="done" scoped="" ref="0x7fd23757a4d0"/>
        <function-ref name="standby" scoped="" ref="0x7fd23757a660"/>
        <function-ref name="getChannel" scoped="" ref="0x7fd23757a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7fd237577400" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7fd237577400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd237577780"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd237577910"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd237577aa0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd237577c30"/>
        <function-ref name="headerLength" scoped="" ref="0x7fd237577dc0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fd237576020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x7fd237574410" loc="58:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x7fd237574410"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7fd237574890"/>
        <function-ref name="turnOn" scoped="" ref="0x7fd237574a20"/>
        <function-ref name="setChannel" scoped="" ref="0x7fd237574bb0"/>
        <function-ref name="done" scoped="" ref="0x7fd237574d40"/>
        <function-ref name="standby" scoped="" ref="0x7fd237573020"/>
        <function-ref name="getChannel" scoped="" ref="0x7fd2375731b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x7fd2375762b0" loc="49:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x7fd2375762b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7fd237576630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7fd237579400" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7fd237579400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd237579780"/>
        <function-ref name="header" scoped="" ref="0x7fd237579910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x7fd237575d70" loc="56:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x7fd237575d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd237574180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7fd237576920" loc="54:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7fd237576920"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd237576ca0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd237576e30"/>
        <function-ref name="start" scoped="" ref="0x7fd237575020"/>
        <function-ref name="stop" scoped="" ref="0x7fd2375751b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fd237572d40" loc="62:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fd237572d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd2375700e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd237570270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd237570400"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd237570590"/>
        <function-ref name="headerLength" scoped="" ref="0x7fd237570720"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fd2375708b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7fd23757b590" loc="41:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7fd23757b590"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd23757b910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fd237570b40" loc="64:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7fd237570b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7fd23756f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x7fd237575440" loc="55:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x7fd237575440"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd2375757c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd237575950"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd237575ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7fd23757aa40" loc="44:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7fd23757aa40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd23757adc0"/>
        <function-ref name="ready" scoped="" ref="0x7fd237579020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd2375791b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x7fd2375725a0" loc="61:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x7fd2375725a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7fd237572920"/>
        <function-ref name="request" scoped="" ref="0x7fd237572ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7fd23757cc50" loc="40:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7fd23757cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd23757b020"/>
        <function-ref name="cancel" scoped="" ref="0x7fd23757b1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd23757b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x7fd23750a760" loc="50:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x7fd23750a760"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd23750aae0"/>
        <function-ref name="get" scoped="" ref="0x7fd23750ac70"/>
        <function-ref name="setValue" scoped="" ref="0x7fd23750ae00"/>
        <function-ref name="set" scoped="" ref="0x7fd237509020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7fd23750d7e0" loc="43:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7fd23750d7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd23750db60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd23750dcf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd23750de80"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd23750c030"/>
        <function-ref name="headerLength" scoped="" ref="0x7fd23750c1c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fd23750c350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fd23750b800" loc="49:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fd23750b800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd23750bb80"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd23750bd10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd23750a020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd23750a1b0"/>
        <function-ref name="headerLength" scoped="" ref="0x7fd23750a340"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fd23750a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7fd237511bb0" loc="42:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7fd237511bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd2380681a0"/>
            <typename><typedef-ref name="TRadio" ref="0x7fd237d6fd20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd238a50170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd23750f170"/>
        <function-ref name="clear" scoped="" ref="0x7fd23750f8a0"/>
        <function-ref name="isValid" scoped="" ref="0x7fd237510a00"/>
        <function-ref name="set" scoped="" ref="0x7fd23750d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x7fd23750c760" loc="48:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fd23750c760"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd2380681a0"/>
            <typename><typedef-ref name="TRadio" ref="0x7fd237d6fd20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd23750b3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fd237515d00" loc="41:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fd237515d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd23806cd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd238069180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd238a50170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd2375122e0"/>
        <function-ref name="clear" scoped="" ref="0x7fd237512a10"/>
        <function-ref name="isValid" scoped="" ref="0x7fd237514b60"/>
        <function-ref name="set" scoped="" ref="0x7fd237511170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x7fd236898640" loc="49:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x7fd236898640"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd2368989c0"/>
        <function-ref name="get" scoped="" ref="0x7fd236898b50"/>
        <function-ref name="setValue" scoped="" ref="0x7fd236898ce0"/>
        <function-ref name="set" scoped="" ref="0x7fd236898e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7fd2368997e0" loc="44:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7fd2368997e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd236899b60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd236899cf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd236899e80"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd236898030"/>
        <function-ref name="headerLength" scoped="" ref="0x7fd2368981c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fd236898350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fd2368944c0" loc="54:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fd2368944c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd236894840"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd2368949d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd236894b60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd236894cf0"/>
        <function-ref name="headerLength" scoped="" ref="0x7fd236894e80"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fd236893030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x7fd23689dbb0" loc="43:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x7fd23689dbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd2380681a0"/>
            <typename><typedef-ref name="TRadio" ref="0x7fd237d6fd20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd238a50170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd23689a170"/>
        <function-ref name="clear" scoped="" ref="0x7fd23689a8a0"/>
        <function-ref name="isValid" scoped="" ref="0x7fd23689ba00"/>
        <function-ref name="set" scoped="" ref="0x7fd236899020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x7fd236896250" loc="51:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fd236896250"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd2380681a0"/>
            <typename><typedef-ref name="TRadio" ref="0x7fd237d6fd20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd236896e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7fd2368953f0" loc="52:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7fd2368953f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd23806cd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd238069180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd236894090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fd2368a0cb0" loc="42:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fd2368a0cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd23806cd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd238069180"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd238a50170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd23689e2e0"/>
        <function-ref name="clear" scoped="" ref="0x7fd23689ea10"/>
        <function-ref name="isValid" scoped="" ref="0x7fd23689fb60"/>
        <function-ref name="set" scoped="" ref="0x7fd23689d170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fd237518080" loc="20:/home/johlab/Videos/lol/tinyos-main/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7fd237518080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd23806cd60"/>
            <typename><typedef-ref name="TMilli" ref="0x7fd238069180"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd237518cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7fd237503590" loc="43:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7fd237503590"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd237503910"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd237503aa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd237503c30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd237503dc0"/>
        <function-ref name="headerLength" scoped="" ref="0x7fd2374e3020"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fd2374e31b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fd2374e34a0" loc="48:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fd2374e34a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd2374e3820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd2374e39b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd2374e3b40"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd2374e3cd0"/>
        <function-ref name="headerLength" scoped="" ref="0x7fd2374e3e60"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fd2374e2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x7fd2375049b0" loc="42:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x7fd2375049b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd237504d50"/>
        <function-ref name="get" scoped="" ref="0x7fd237503020"/>
        <function-ref name="setValue" scoped="" ref="0x7fd2375031b0"/>
        <function-ref name="set" scoped="" ref="0x7fd237503340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fd2374e00e0" loc="39:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fd2374e00e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd2374e0460"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd2374e05f0"/>
        <function-ref name="start" scoped="" ref="0x7fd2374e0780"/>
        <function-ref name="stop" scoped="" ref="0x7fd2374e0910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7fd2374ddb60" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7fd2374ddb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7fd2374db020"/>
        <function-ref name="request" scoped="" ref="0x7fd2374db1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fd2374d7440" loc="59:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7fd2374d7440"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd2374d77c0"/>
        <function-ref name="ready" scoped="" ref="0x7fd2374d7950"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd2374d7ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fd2374d7d70" loc="60:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7fd2374d7d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd2374d6180"/>
        <function-ref name="header" scoped="" ref="0x7fd2374d6310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7fd2374dfb60" loc="43:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7fd2374dfb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7fd2374de020"/>
        <function-ref name="turnOn" scoped="" ref="0x7fd2374de1b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fd2374de340"/>
        <function-ref name="done" scoped="" ref="0x7fd2374de4d0"/>
        <function-ref name="standby" scoped="" ref="0x7fd2374de660"/>
        <function-ref name="getChannel" scoped="" ref="0x7fd2374de7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7fd2374db400" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7fd2374db400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd2374db780"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd2374db910"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd2374dbaa0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd2374dbc30"/>
        <function-ref name="headerLength" scoped="" ref="0x7fd2374dbdc0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fd2374da020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x7fd2374d8410" loc="58:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x7fd2374d8410"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7fd2374d8890"/>
        <function-ref name="turnOn" scoped="" ref="0x7fd2374d8a20"/>
        <function-ref name="setChannel" scoped="" ref="0x7fd2374d8bb0"/>
        <function-ref name="done" scoped="" ref="0x7fd2374d8d40"/>
        <function-ref name="standby" scoped="" ref="0x7fd2374d7020"/>
        <function-ref name="getChannel" scoped="" ref="0x7fd2374d71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x7fd2374da2b0" loc="49:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x7fd2374da2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7fd2374da630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7fd2374dd400" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7fd2374dd400"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd2374dd780"/>
        <function-ref name="header" scoped="" ref="0x7fd2374dd910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x7fd2374d9d70" loc="56:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x7fd2374d9d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd2374d8180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7fd2374da920" loc="54:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7fd2374da920"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fd2374daca0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fd2374dae30"/>
        <function-ref name="start" scoped="" ref="0x7fd2374d9020"/>
        <function-ref name="stop" scoped="" ref="0x7fd2374d91b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fd2374d6d40" loc="62:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fd2374d6d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd2374d50e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd2374d5270"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd2374d5400"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd2374d5590"/>
        <function-ref name="headerLength" scoped="" ref="0x7fd2374d5720"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fd2374d58b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7fd2374df590" loc="41:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7fd2374df590"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd2374df910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fd2374d5b40" loc="64:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7fd2374d5b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x7fd2374d3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x7fd2374d9440" loc="55:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x7fd2374d9440"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd2374d97c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd2374d9950"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd2374d9ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7fd2374dea40" loc="44:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7fd2374dea40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd2374dedc0"/>
        <function-ref name="ready" scoped="" ref="0x7fd2374dd020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd2374dd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x7fd2374d65a0" loc="61:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x7fd2374d65a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7fd2374d6920"/>
        <function-ref name="request" scoped="" ref="0x7fd2374d6ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7fd2374e0b60" loc="40:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7fd2374e0b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd2374df020"/>
        <function-ref name="cancel" scoped="" ref="0x7fd2374df1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd2374df340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7fd2374cb5c0" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7fd2374cb5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7fd2374cb940"/>
        <function-ref name="request" scoped="" ref="0x7fd2374cbad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7fd2374c63b0" loc="49:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7fd2374c63b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd2374c5ac0"/>
        <function-ref name="get" scoped="" ref="0x7fd2374c5570"/>
        <function-ref name="isSet" scoped="" ref="0x7fd2374c5020"/>
        <function-ref name="set" scoped="" ref="0x7fd2374c4090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x7fd2374b1ca0" loc="64:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x7fd2374b1ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd2374b00a0"/>
        <function-ref name="get" scoped="" ref="0x7fd2374b0230"/>
        <function-ref name="setValue" scoped="" ref="0x7fd2374b03c0"/>
        <function-ref name="set" scoped="" ref="0x7fd2374b0550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7fd2374b52e0" loc="61:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fd2374b52e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd2380681a0"/>
            <typename><typedef-ref name="TRadio" ref="0x7fd237d6fd20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd238a50170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd2374b4840"/>
        <function-ref name="clear" scoped="" ref="0x7fd2374b3020"/>
        <function-ref name="isValid" scoped="" ref="0x7fd2374b4110"/>
        <function-ref name="set" scoped="" ref="0x7fd2374b3750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7fd2374cf620" loc="42:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7fd2374cf620"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7fd2374cf9a0"/>
        <function-ref name="turnOn" scoped="" ref="0x7fd2374cfb30"/>
        <function-ref name="setChannel" scoped="" ref="0x7fd2374cfcc0"/>
        <function-ref name="done" scoped="" ref="0x7fd2374cfe50"/>
        <function-ref name="standby" scoped="" ref="0x7fd2374cc020"/>
        <function-ref name="getChannel" scoped="" ref="0x7fd2374cc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7fd2374af470" loc="66:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7fd2374af470"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd2374af7f0"/>
        <function-ref name="wait" scoped="" ref="0x7fd2374af980"/>
        <function-ref name="cancel" scoped="" ref="0x7fd2374afb10"/>
        <function-ref name="isFree" scoped="" ref="0x7fd2374afca0"/>
        <function-ref name="getNow" scoped="" ref="0x7fd2374afe30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7fd2374cae80" loc="48:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7fd2374cae80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd2374c85e0"/>
        <function-ref name="get" scoped="" ref="0x7fd2374c8090"/>
        <function-ref name="isSet" scoped="" ref="0x7fd2374c9ad0"/>
        <function-ref name="set" scoped="" ref="0x7fd2374c8b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7fd2374cbd90" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7fd2374cbd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd2374ca180"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd2374ca310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd2374ca4a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd2374ca630"/>
        <function-ref name="headerLength" scoped="" ref="0x7fd2374ca7c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fd2374ca950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fd2374b61f0" loc="60:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7fd2374b61f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd2374b6670"/>
        <function-ref name="headerLength" scoped="" ref="0x7fd2374b6800"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fd2374b6990"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7fd2374b6b20"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7fd2374b6cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7fd2374ccdd0" loc="44:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7fd2374ccdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd2374cb180"/>
        <function-ref name="header" scoped="" ref="0x7fd2374cb310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fd2374bbdd0" loc="55:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fd2374bbdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd2380681a0"/>
            <typename><typedef-ref name="TRadio" ref="0x7fd237d6fd20"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7fd237d6e180"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd2374b86e0"/>
        <function-ref name="fired" scoped="" ref="0x7fd2374b96b0"/>
        <function-ref name="startAt" scoped="" ref="0x7fd2374b8090"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd2374b9b70"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd2374b8ba0"/>
        <function-ref name="start" scoped="" ref="0x7fd2374baca0"/>
        <function-ref name="stop" scoped="" ref="0x7fd2374b91f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7fd2374c4940" loc="50:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fd2374c4940"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd2374c1090"/>
        <function-ref name="get" scoped="" ref="0x7fd2374c2af0"/>
        <function-ref name="isSet" scoped="" ref="0x7fd2374c25a0"/>
        <function-ref name="set" scoped="" ref="0x7fd2374c15e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7fd2374bda40" loc="54:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fd2374bda40"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd2380681a0"/>
            <typename><typedef-ref name="TRadio" ref="0x7fd237d6fd20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd2374bb6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7fd2374cc460" loc="43:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7fd2374cc460"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd2374cc7e0"/>
        <function-ref name="ready" scoped="" ref="0x7fd2374cc970"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd2374ccb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7fd2374c1e70" loc="51:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7fd2374c1e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd2374be5e0"/>
        <function-ref name="get" scoped="" ref="0x7fd2374be090"/>
        <function-ref name="isSet" scoped="" ref="0x7fd2374bfad0"/>
        <function-ref name="set" scoped="" ref="0x7fd2374beb30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x7fd2374b08d0" loc="65:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x7fd2374b08d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd2374b0c50"/>
        <function-ref name="get" scoped="" ref="0x7fd2374b0de0"/>
        <function-ref name="setValue" scoped="" ref="0x7fd2374af020"/>
        <function-ref name="set" scoped="" ref="0x7fd2374af1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x7fd2374b1110" loc="63:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7fd2374b1110"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd2374b1490"/>
        <function-ref name="get" scoped="" ref="0x7fd2374b1620"/>
        <function-ref name="setValue" scoped="" ref="0x7fd2374b17b0"/>
        <function-ref name="set" scoped="" ref="0x7fd2374b1940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fd2374bd1e0" loc="52:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd2374bd1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fd2374bd560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7fd2374ae110" loc="67:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7fd2374ae110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7fd2374ae490"/>
        <function-ref name="suspend" scoped="" ref="0x7fd2374ae620"/>
        <function-ref name="resume" scoped="" ref="0x7fd2374ae7b0"/>
        <function-ref name="run" scoped="" ref="0x7fd2374ae940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x7fd2374a5c40" loc="52:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x7fd2374a5c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x7fd2374a4020"/>
        <function-ref name="request" scoped="" ref="0x7fd2374a41b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7fd2374844d0" loc="74:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7fd2374844d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd2380681a0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fd238068510"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7fd23748b3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x7fd2374a0a40" loc="56:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x7fd2374a0a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd23749e1b0"/>
        <function-ref name="get" scoped="" ref="0x7fd23749fc00"/>
        <function-ref name="isSet" scoped="" ref="0x7fd23749f6b0"/>
        <function-ref name="set" scoped="" ref="0x7fd23749e700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x7fd2374816a0" loc="80:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x7fd2374816a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd237481a20"/>
        <function-ref name="get" scoped="" ref="0x7fd237481bb0"/>
        <function-ref name="setValue" scoped="" ref="0x7fd237481d40"/>
        <function-ref name="set" scoped="" ref="0x7fd237480020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x7fd2374a7600" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7fd2374a7600"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7fd2381173a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7fd2381173a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd2374a7980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7fd23747f200" loc="83:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fd23747f200"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd2380681a0"/>
            <typename><typedef-ref name="TRadio" ref="0x7fd237d6fd20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd238a50170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fd23747e970"/>
        <function-ref name="clear" scoped="" ref="0x7fd23747c0d0"/>
        <function-ref name="isValid" scoped="" ref="0x7fd23747e240"/>
        <function-ref name="set" scoped="" ref="0x7fd23747c800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7fd237491020" loc="70:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7fd237491020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd2374913a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237491530"/>
        <function-ref name="toggle" scoped="" ref="0x7fd2374916c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237491850"/>
        <function-ref name="get" scoped="" ref="0x7fd2374919e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237491b70"/>
        <function-ref name="set" scoped="" ref="0x7fd237491d00"/>
        <function-ref name="clr" scoped="" ref="0x7fd23748d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x7fd23747bb70" loc="86:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x7fd23747bb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fd23747a020"/>
        <function-ref name="wait" scoped="" ref="0x7fd23747a1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd23747a340"/>
        <function-ref name="isFree" scoped="" ref="0x7fd23747a4d0"/>
        <function-ref name="getNow" scoped="" ref="0x7fd23747a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x7fd2374a7c40" loc="49:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x7fd2374a7c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x7fd2374a6020"/>
        <function-ref name="turnOn" scoped="" ref="0x7fd2374a61b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fd2374a6340"/>
        <function-ref name="done" scoped="" ref="0x7fd2374a64d0"/>
        <function-ref name="standby" scoped="" ref="0x7fd2374a6660"/>
        <function-ref name="getChannel" scoped="" ref="0x7fd2374a67f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x7fd23748b9d0" loc="75:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7fd23748b9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd2380681a0"/>
            <typename><typedef-ref name="TRadio" ref="0x7fd237d6fd20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd237483630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x7fd2374a3550" loc="55:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x7fd2374a3550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd2374a2c50"/>
        <function-ref name="get" scoped="" ref="0x7fd2374a2700"/>
        <function-ref name="isSet" scoped="" ref="0x7fd2374a21b0"/>
        <function-ref name="set" scoped="" ref="0x7fd2374a01f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x7fd2374a4470" loc="53:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x7fd2374a4470"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd2374a47f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd2374a4980"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd2374a4b10"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd2374a4ca0"/>
        <function-ref name="headerLength" scoped="" ref="0x7fd2374a4e30"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fd2374a3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0x7fd23748edd0" loc="69:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x7fd23748edd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237492180"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237492310"/>
        <function-ref name="toggle" scoped="" ref="0x7fd2374924a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237492630"/>
        <function-ref name="get" scoped="" ref="0x7fd2374927c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237492950"/>
        <function-ref name="set" scoped="" ref="0x7fd237492ae0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237492c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7fd237483b50" loc="77:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x7fd237483b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd237482020"/>
        <function-ref name="headerLength" scoped="" ref="0x7fd2374821b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x7fd237482340"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x7fd2374824d0"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x7fd237482660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x7fd2374a5480" loc="51:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x7fd2374a5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd2374a5800"/>
        <function-ref name="header" scoped="" ref="0x7fd2374a5990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="releaseSpi" ref="0x7fd2373eae40" loc="856:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="releaseSpi" scoped="" ref="0x7fd2373eae40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd2373e91e0"/>
        <function-ref name="runTask" scoped="" ref="0x7fd2373e9370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7fd23749c020" loc="57:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fd23749c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd23749b740"/>
        <function-ref name="get" scoped="" ref="0x7fd23749b1f0"/>
        <function-ref name="isSet" scoped="" ref="0x7fd23749cc50"/>
        <function-ref name="set" scoped="" ref="0x7fd23749bc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7fd2374a9a60" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7fd2374a9a60"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7fd2381173a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7fd2381173a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd2374a9de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fd237494380" loc="65:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7fd237494380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd237494700"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd237494890"/>
        <function-ref name="request" scoped="" ref="0x7fd237494a20"/>
        <function-ref name="granted" scoped="" ref="0x7fd237494bb0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd237494d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0x7fd237495020" loc="64:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x7fd237495020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd2374954a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237495630"/>
        <function-ref name="toggle" scoped="" ref="0x7fd2374957c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237495950"/>
        <function-ref name="get" scoped="" ref="0x7fd237495ae0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237495c70"/>
        <function-ref name="set" scoped="" ref="0x7fd237495e00"/>
        <function-ref name="clr" scoped="" ref="0x7fd237494020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x7fd237499560" loc="58:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x7fd237499560"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd237498c90"/>
        <function-ref name="get" scoped="" ref="0x7fd237498740"/>
        <function-ref name="isSet" scoped="" ref="0x7fd2374981f0"/>
        <function-ref name="set" scoped="" ref="0x7fd237497230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x7fd2374a6aa0" loc="50:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x7fd2374a6aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd2374a6e20"/>
        <function-ref name="ready" scoped="" ref="0x7fd2374a5020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd2374a51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0x7fd237488b30" loc="72:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7fd237488b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fd23748c020"/>
        <function-ref name="disable" scoped="" ref="0x7fd23748c1b0"/>
        <function-ref name="captured" scoped="" ref="0x7fd23748c340"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fd23748c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FastSpiByte" ref="0x7fd23748e270" loc="67:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7fd23748e270"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fd23748e5f0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fd23748e780"/>
        <function-ref name="splitRead" scoped="" ref="0x7fd23748e910"/>
        <function-ref name="write" scoped="" ref="0x7fd23748eaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x7fd2374803a0" loc="81:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x7fd2374803a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd237480720"/>
        <function-ref name="get" scoped="" ref="0x7fd2374808b0"/>
        <function-ref name="setValue" scoped="" ref="0x7fd237480a40"/>
        <function-ref name="set" scoped="" ref="0x7fd237480bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x7fd237482a10" loc="79:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x7fd237482a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd237482d90"/>
        <function-ref name="get" scoped="" ref="0x7fd237481020"/>
        <function-ref name="setValue" scoped="" ref="0x7fd2374811b0"/>
        <function-ref name="set" scoped="" ref="0x7fd237481340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fd2374978b0" loc="59:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fd2374978b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fd237497c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x7fd23747b080" loc="85:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x7fd23747b080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x7fd23747b400"/>
        <function-ref name="suspend" scoped="" ref="0x7fd23747b590"/>
        <function-ref name="resume" scoped="" ref="0x7fd23747b720"/>
        <function-ref name="run" scoped="" ref="0x7fd23747b8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7fd2373a47f0" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7fd2373a47f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd2373a4b70"/>
        <function-ref name="isInput" scoped="" ref="0x7fd2373a4d00"/>
        <function-ref name="toggle" scoped="" ref="0x7fd2373a3020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd2373a31b0"/>
        <function-ref name="get" scoped="" ref="0x7fd2373a3340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd2373a34d0"/>
        <function-ref name="set" scoped="" ref="0x7fd2373a3660"/>
        <function-ref name="clr" scoped="" ref="0x7fd2373a37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0x7fd2373a54e0" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x7fd2373a54e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd2373a5860"/>
        <function-ref name="isInput" scoped="" ref="0x7fd2373a59f0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd2373a5b80"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd2373a5d10"/>
        <function-ref name="get" scoped="" ref="0x7fd2373a4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd2373a41b0"/>
        <function-ref name="set" scoped="" ref="0x7fd2373a4340"/>
        <function-ref name="clr" scoped="" ref="0x7fd2373a44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fd2373a2ac0" loc="49:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fd2373a2ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd2380681a0"/>
            <typename><typedef-ref name="TRadio" ref="0x7fd237d6fd20"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd23739e390"/>
        <function-ref name="fired" scoped="" ref="0x7fd2373a0360"/>
        <function-ref name="startAt" scoped="" ref="0x7fd2373a0ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd2373a0820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd23739e850"/>
        <function-ref name="start" scoped="" ref="0x7fd2373a1970"/>
        <function-ref name="stop" scoped="" ref="0x7fd2373a1e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0x7fd2373a7b50" loc="42:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7fd2373a7b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd2373a6020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd2373a61b0"/>
        <function-ref name="request" scoped="" ref="0x7fd2373a6340"/>
        <function-ref name="granted" scoped="" ref="0x7fd2373a64d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd2373a6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0x7fd2373aa950" loc="41:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x7fd2373aa950"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd2373aacd0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd2373aae60"/>
        <function-ref name="toggle" scoped="" ref="0x7fd2373a7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd2373a71b0"/>
        <function-ref name="get" scoped="" ref="0x7fd2373a7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd2373a74d0"/>
        <function-ref name="set" scoped="" ref="0x7fd2373a7660"/>
        <function-ref name="clr" scoped="" ref="0x7fd2373a77f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x7fd2373a3b10" loc="48:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7fd2373a3b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fd2373a2020"/>
        <function-ref name="disable" scoped="" ref="0x7fd2373a21b0"/>
        <function-ref name="captured" scoped="" ref="0x7fd2373a2340"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fd2373a24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fd2373a6920" loc="43:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7fd2373a6920"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fd2373a6ca0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fd2373a6e30"/>
        <function-ref name="splitRead" scoped="" ref="0x7fd2373a5020"/>
        <function-ref name="write" scoped="" ref="0x7fd2373a51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x7fd23739d020" loc="50:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x7fd23739d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd2380681a0"/>
            <typename><typedef-ref name="TRadio" ref="0x7fd237d6fd20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd23739dc50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0x7fd23738d3d0" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0x7fd23738d3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd23738d750"/>
        <function-ref name="isInput" scoped="" ref="0x7fd23738d8e0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd23738da70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd23738dc00"/>
        <function-ref name="get" scoped="" ref="0x7fd23738dd90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd23738b020"/>
        <function-ref name="set" scoped="" ref="0x7fd23738b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd23738b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0x7fd2373907f0" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7fd2373907f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7fd23738ee60"/>
        <function-ref name="test" scoped="" ref="0x7fd23738e4e0"/>
        <function-ref name="get" scoped="" ref="0x7fd2373974c0"/>
        <function-ref name="captured" scoped="" ref="0x7fd237396020"/>
        <function-ref name="reset" scoped="" ref="0x7fd237396530"/>
        <function-ref name="isOn" scoped="" ref="0x7fd23738e9a0"/>
        <function-ref name="set" scoped="" ref="0x7fd237397980"/>
        <function-ref name="start" scoped="" ref="0x7fd2373969f0"/>
        <function-ref name="stop" scoped="" ref="0x7fd23738e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0x7fd23738b680" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0x7fd23738b680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd23738ba00"/>
        <function-ref name="isInput" scoped="" ref="0x7fd23738bb90"/>
        <function-ref name="toggle" scoped="" ref="0x7fd23738bd20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd23738a020"/>
        <function-ref name="get" scoped="" ref="0x7fd23738a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd23738a340"/>
        <function-ref name="set" scoped="" ref="0x7fd23738a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fd23738a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7fd237399680" loc="40:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7fd237399680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd237399a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x7fd23739c9d0" loc="39:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x7fd23739c9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fd23739cd50"/>
        <function-ref name="disable" scoped="" ref="0x7fd237399020"/>
        <function-ref name="captured" scoped="" ref="0x7fd2373991b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fd237399340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fd237370c80" loc="84:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7fd237370c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd23737a0a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd23737a230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fd237379840" loc="82:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7fd237379840"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fd237379bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd23737c1f0" loc="81:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd23737c1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd23737c570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fd23737b020" loc="83:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7fd23737b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fd23737b3a0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fd23737b530"/>
        <function-ref name="splitRead" scoped="" ref="0x7fd23737b6c0"/>
        <function-ref name="write" scoped="" ref="0x7fd23737b850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd23737aa60" loc="85:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd23737aa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd23737ade0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd237378020"/>
        <function-ref name="request" scoped="" ref="0x7fd2373781b0"/>
        <function-ref name="granted" scoped="" ref="0x7fd237378340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd2373784d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fd23736cd70" loc="95:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd23736cd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd23736b180"/>
        <function-ref name="configure" scoped="" ref="0x7fd23736b310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x7fd23732ede0" loc="294:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x7fd23732ede0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd23732d180"/>
        <function-ref name="runTask" scoped="" ref="0x7fd23732d310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fd23736c020" loc="94:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7fd23736c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd23736c3a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd23736c530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fd23736ee00" loc="92:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7fd23736ee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fd23736d1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd23736e7e0" loc="91:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd23736e7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd23736eb60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x7fd237350800" loc="98:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x7fd237350800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7fd237350b80"/>
        <function-ref name="sleep" scoped="" ref="0x7fd23734e1b0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7fd237369020"/>
        <function-ref name="dataReady" scoped="" ref="0x7fd23734e340"/>
        <function-ref name="initMaster" scoped="" ref="0x7fd237369340"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7fd2373694d0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fd237369660"/>
        <function-ref name="read" scoped="" ref="0x7fd2373697f0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7fd237369980"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7fd237369b10"/>
        <function-ref name="setClock" scoped="" ref="0x7fd237369ca0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd237369e30"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7fd237368020"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7fd2373682b0"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7fd237368440"/>
        <function-ref name="write" scoped="" ref="0x7fd2373685d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fd237368760"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7fd2373688f0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7fd237368a80"/>
        <function-ref name="getClock" scoped="" ref="0x7fd237368c10"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7fd237368da0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7fd237350d10"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7fd2373691b0"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7fd23734e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fd23736d480" loc="93:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7fd23736d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fd23736d800"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fd23736d990"/>
        <function-ref name="splitRead" scoped="" ref="0x7fd23736db20"/>
        <function-ref name="write" scoped="" ref="0x7fd23736dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7fd23734e620" loc="99:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7fd23734e620"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fd23734e9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x7fd23730f720" loc="76:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x7fd23730f720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7fd23730faa0"/>
        <function-ref name="sleep" scoped="" ref="0x7fd23730a020"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7fd23730fdc0"/>
        <function-ref name="dataReady" scoped="" ref="0x7fd23730a1b0"/>
        <function-ref name="initMaster" scoped="" ref="0x7fd23730c1b0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7fd23730c340"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fd23730c4d0"/>
        <function-ref name="read" scoped="" ref="0x7fd23730c660"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7fd23730c7f0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7fd23730c980"/>
        <function-ref name="setClock" scoped="" ref="0x7fd23730cb10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd23730cca0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7fd23730ce30"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7fd23730b120"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7fd23730b2b0"/>
        <function-ref name="write" scoped="" ref="0x7fd23730b440"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fd23730b5d0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7fd23730b760"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7fd23730b8f0"/>
        <function-ref name="getClock" scoped="" ref="0x7fd23730ba80"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7fd23730bc10"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7fd23730fc30"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7fd23730c020"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7fd23730bda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x7fd2372ffe30" loc="81:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x7fd2372ffe30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd2372fd1e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd2372fd370"/>
        <function-ref name="toggle" scoped="" ref="0x7fd2372fd500"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd2372fd690"/>
        <function-ref name="get" scoped="" ref="0x7fd2372fd820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd2372fd9b0"/>
        <function-ref name="set" scoped="" ref="0x7fd2372fdb40"/>
        <function-ref name="clr" scoped="" ref="0x7fd2372fdcd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7fd237302970" loc="79:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7fd237302970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237302cf0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237302e80"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237300030"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd2373001c0"/>
        <function-ref name="get" scoped="" ref="0x7fd237300350"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd2373004e0"/>
        <function-ref name="set" scoped="" ref="0x7fd237300670"/>
        <function-ref name="clr" scoped="" ref="0x7fd237300800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x7fd2373036c0" loc="78:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x7fd2373036c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd237303a40"/>
        <function-ref name="isInput" scoped="" ref="0x7fd237303bd0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd237303d60"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd237302020"/>
        <function-ref name="get" scoped="" ref="0x7fd2373021b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd237302340"/>
        <function-ref name="set" scoped="" ref="0x7fd2373024d0"/>
        <function-ref name="clr" scoped="" ref="0x7fd237302660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7fd237301e00" loc="75:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fd237301e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd2373031c0"/>
        <function-ref name="stop" scoped="" ref="0x7fd237303350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x7fd2372fc060" loc="82:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x7fd2372fc060"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fd2372fc3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x7fd2373076b0" loc="74:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x7fd2373076b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7fd237307a30"/>
        <function-ref name="sleep" scoped="" ref="0x7fd237304020"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7fd237307d50"/>
        <function-ref name="dataReady" scoped="" ref="0x7fd2373041b0"/>
        <function-ref name="initMaster" scoped="" ref="0x7fd2373061b0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7fd237306340"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fd2373064d0"/>
        <function-ref name="read" scoped="" ref="0x7fd237306660"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7fd2373067f0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7fd237306980"/>
        <function-ref name="setClock" scoped="" ref="0x7fd237306b10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd237306ca0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7fd237306e30"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7fd237305120"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7fd2373052b0"/>
        <function-ref name="write" scoped="" ref="0x7fd237305440"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fd2373055d0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7fd237305760"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7fd2373058f0"/>
        <function-ref name="getClock" scoped="" ref="0x7fd237305a80"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7fd237305c10"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7fd237307bc0"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7fd237306020"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7fd237305da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x7fd237300b20" loc="80:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x7fd237300b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd2372ff020"/>
        <function-ref name="isInput" scoped="" ref="0x7fd2372ff1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fd2372ff340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd2372ff4d0"/>
        <function-ref name="get" scoped="" ref="0x7fd2372ff660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd2372ff7f0"/>
        <function-ref name="set" scoped="" ref="0x7fd2372ff980"/>
        <function-ref name="clr" scoped="" ref="0x7fd2372ffb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fd2372b26c0" loc="86:/home/johlab/Videos/lol/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fd2372b26c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fd2372b2a60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd2372b2bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fd2372b0730" loc="89:/home/johlab/Videos/lol/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd2372b0730"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd2372b0ad0"/>
        <function-ref name="configure" scoped="" ref="0x7fd2372b0c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd2372b3900" loc="85:/home/johlab/Videos/lol/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd2372b3900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd2372b3ca0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd2372b3e30"/>
        <function-ref name="request" scoped="" ref="0x7fd2372b2020"/>
        <function-ref name="granted" scoped="" ref="0x7fd2372b21b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd2372b2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fd2372b2e40" loc="87:/home/johlab/Videos/lol/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd2372b2e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd2372b01e0"/>
        <function-ref name="userId" scoped="" ref="0x7fd2372b0370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd236838c80" loc="44:/home/johlab/Videos/lol/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd236838c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd2368370a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fd236837330" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7fd236837330"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fd2368376b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fd236837840"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fd2368379d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fd236837b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fd236834020" loc="52:/home/johlab/Videos/lol/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fd236834020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fd2368343c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd236834550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fd2368330d0" loc="56:/home/johlab/Videos/lol/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd2368330d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd236833470"/>
        <function-ref name="configure" scoped="" ref="0x7fd236833600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fd236833890" loc="57:/home/johlab/Videos/lol/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7fd236833890"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fd236833c10"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fd236833da0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fd236832020"/>
        <function-ref name="dequeue" scoped="" ref="0x7fd2368321b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd236835270" loc="51:/home/johlab/Videos/lol/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd236835270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd236835610"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd2368357a0"/>
        <function-ref name="request" scoped="" ref="0x7fd236835930"/>
        <function-ref name="granted" scoped="" ref="0x7fd236835ac0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd236835c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fd2368347a0" loc="53:/home/johlab/Videos/lol/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd2368347a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd236834b20"/>
        <function-ref name="userId" scoped="" ref="0x7fd236834cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fd236832480" loc="68:/home/johlab/Videos/lol/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7fd236832480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd236832800"/>
        <function-ref name="runTask" scoped="" ref="0x7fd236832990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7fd23729f020" loc="80:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fd23729f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7fd23729f3a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fd23729f530"/>
        <function-ref name="getControlA" scoped="" ref="0x7fd23729f6c0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fd23729f850"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fd23729f9e0"/>
        <function-ref name="setControlB" scoped="" ref="0x7fd23729fb70"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fd23729fd00"/>
        <function-ref name="getControlB" scoped="" ref="0x7fd23729e020"/>
        <function-ref name="setControlC" scoped="" ref="0x7fd23729e1b0"/>
        <function-ref name="setControlA" scoped="" ref="0x7fd23729e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fd23729e850" loc="81:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7fd23729e850"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7fd237294e60"/>
        <function-ref name="test" scoped="" ref="0x7fd2372944e0"/>
        <function-ref name="get" scoped="" ref="0x7fd2372974c0"/>
        <function-ref name="captured" scoped="" ref="0x7fd237295020"/>
        <function-ref name="reset" scoped="" ref="0x7fd237295530"/>
        <function-ref name="isOn" scoped="" ref="0x7fd2372949a0"/>
        <function-ref name="set" scoped="" ref="0x7fd237297980"/>
        <function-ref name="start" scoped="" ref="0x7fd2372959f0"/>
        <function-ref name="stop" scoped="" ref="0x7fd237294020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fd237293ad0" loc="82:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7fd237293ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fd23728f4e0"/>
        <function-ref name="fired" scoped="" ref="0x7fd2372901b0"/>
        <function-ref name="get" scoped="" ref="0x7fd237292790"/>
        <function-ref name="reset" scoped="" ref="0x7fd237290670"/>
        <function-ref name="isOn" scoped="" ref="0x7fd23728f9a0"/>
        <function-ref name="set" scoped="" ref="0x7fd237292c50"/>
        <function-ref name="start" scoped="" ref="0x7fd237290b30"/>
        <function-ref name="stop" scoped="" ref="0x7fd23728f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd2372a8c00" loc="79:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fd2372a8c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fd2372a2020"/>
        <function-ref name="test" scoped="" ref="0x7fd2372a35d0"/>
        <function-ref name="get" scoped="" ref="0x7fd2372a58a0"/>
        <function-ref name="setScale" scoped="" ref="0x7fd2372a24e0"/>
        <function-ref name="getScale" scoped="" ref="0x7fd2372a29f0"/>
        <function-ref name="reset" scoped="" ref="0x7fd2372a4760"/>
        <function-ref name="overflow" scoped="" ref="0x7fd2372a42a0"/>
        <function-ref name="isOn" scoped="" ref="0x7fd2372a3a90"/>
        <function-ref name="set" scoped="" ref="0x7fd2372a5d60"/>
        <function-ref name="start" scoped="" ref="0x7fd2372a4c20"/>
        <function-ref name="stop" scoped="" ref="0x7fd2372a3110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7fd2372852c0" loc="80:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fd2372852c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x7fd237285640"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fd2372857d0"/>
        <function-ref name="getControlA" scoped="" ref="0x7fd237285960"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fd237285af0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fd237285c80"/>
        <function-ref name="setControlB" scoped="" ref="0x7fd237285e10"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fd237284020"/>
        <function-ref name="getControlB" scoped="" ref="0x7fd2372841b0"/>
        <function-ref name="setControlC" scoped="" ref="0x7fd237284340"/>
        <function-ref name="setControlA" scoped="" ref="0x7fd2372844d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7fd23727f5a0" loc="82:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7fd23727f5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fd23727b020"/>
        <function-ref name="fired" scoped="" ref="0x7fd23727ec10"/>
        <function-ref name="get" scoped="" ref="0x7fd23727e240"/>
        <function-ref name="reset" scoped="" ref="0x7fd23727d110"/>
        <function-ref name="isOn" scoped="" ref="0x7fd23727b4e0"/>
        <function-ref name="set" scoped="" ref="0x7fd23727e700"/>
        <function-ref name="start" scoped="" ref="0x7fd23727d5d0"/>
        <function-ref name="stop" scoped="" ref="0x7fd23727da90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fd2372849e0" loc="81:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7fd2372849e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7fd237280e60"/>
        <function-ref name="test" scoped="" ref="0x7fd2372804e0"/>
        <function-ref name="get" scoped="" ref="0x7fd2372836b0"/>
        <function-ref name="captured" scoped="" ref="0x7fd2372820d0"/>
        <function-ref name="reset" scoped="" ref="0x7fd2372825e0"/>
        <function-ref name="isOn" scoped="" ref="0x7fd2372809a0"/>
        <function-ref name="set" scoped="" ref="0x7fd237283b70"/>
        <function-ref name="start" scoped="" ref="0x7fd237282aa0"/>
        <function-ref name="stop" scoped="" ref="0x7fd237280020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7fd23727bba0" loc="83:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7fd23727bba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fd237278550"/>
        <function-ref name="fired" scoped="" ref="0x7fd2372791f0"/>
        <function-ref name="get" scoped="" ref="0x7fd23727a7f0"/>
        <function-ref name="reset" scoped="" ref="0x7fd2372796b0"/>
        <function-ref name="isOn" scoped="" ref="0x7fd237278a10"/>
        <function-ref name="set" scoped="" ref="0x7fd23727acb0"/>
        <function-ref name="start" scoped="" ref="0x7fd237279b70"/>
        <function-ref name="stop" scoped="" ref="0x7fd237278090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7fd237276120" loc="84:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7fd237276120"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fd237274a90"/>
        <function-ref name="fired" scoped="" ref="0x7fd237275770"/>
        <function-ref name="get" scoped="" ref="0x7fd237276d50"/>
        <function-ref name="reset" scoped="" ref="0x7fd237275c30"/>
        <function-ref name="isOn" scoped="" ref="0x7fd237272020"/>
        <function-ref name="set" scoped="" ref="0x7fd237275260"/>
        <function-ref name="start" scoped="" ref="0x7fd237274110"/>
        <function-ref name="stop" scoped="" ref="0x7fd2372745d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fd23728a020" loc="79:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fd23728a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fd237287350"/>
        <function-ref name="test" scoped="" ref="0x7fd2372889a0"/>
        <function-ref name="get" scoped="" ref="0x7fd23728ac50"/>
        <function-ref name="setScale" scoped="" ref="0x7fd237287810"/>
        <function-ref name="getScale" scoped="" ref="0x7fd237287d20"/>
        <function-ref name="reset" scoped="" ref="0x7fd237289b20"/>
        <function-ref name="overflow" scoped="" ref="0x7fd237289660"/>
        <function-ref name="isOn" scoped="" ref="0x7fd237288e60"/>
        <function-ref name="set" scoped="" ref="0x7fd237289150"/>
        <function-ref name="start" scoped="" ref="0x7fd237288020"/>
        <function-ref name="stop" scoped="" ref="0x7fd2372884e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fd2371a56e0" loc="30:/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fd2371a56e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd2380681a0"/>
            <typename><typedef-ref name="TOne" ref="0x7fd2380259a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd2371a1020"/>
        <function-ref name="fired" scoped="" ref="0x7fd2371a3020"/>
        <function-ref name="startAt" scoped="" ref="0x7fd2371a39a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd2371a34e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd2371a14e0"/>
        <function-ref name="start" scoped="" ref="0x7fd2371a45b0"/>
        <function-ref name="stop" scoped="" ref="0x7fd2371a4ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd2371efb50" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd2371efb50"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7fd238117020"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7fd238117020"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd2371e2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd2371e2410" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fd2371e2410"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fd2371de810"/>
        <function-ref name="test" scoped="" ref="0x7fd2371e0e60"/>
        <function-ref name="get" scoped="" ref="0x7fd2371e1090"/>
        <function-ref name="setScale" scoped="" ref="0x7fd2371decd0"/>
        <function-ref name="getScale" scoped="" ref="0x7fd2371dd260"/>
        <function-ref name="reset" scoped="" ref="0x7fd2371e0020"/>
        <function-ref name="overflow" scoped="" ref="0x7fd2371e1a60"/>
        <function-ref name="isOn" scoped="" ref="0x7fd2371de350"/>
        <function-ref name="set" scoped="" ref="0x7fd2371e1550"/>
        <function-ref name="start" scoped="" ref="0x7fd2371e04e0"/>
        <function-ref name="stop" scoped="" ref="0x7fd2371e09a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fd236807420" loc="55:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fd236807420"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x7fd238118c00"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x7fd238118c00"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd2380681a0"/>
            <typename><typedef-ref name="TOne" ref="0x7fd2380259a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fd236805c20"/>
        <function-ref name="fired" scoped="" ref="0x7fd236806c20"/>
        <function-ref name="startAt" scoped="" ref="0x7fd2368055d0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fd236805110"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fd236804110"/>
        <function-ref name="start" scoped="" ref="0x7fd236806250"/>
        <function-ref name="stop" scoped="" ref="0x7fd236806760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x7fd2367ffa80" loc="58:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x7fd2367ffa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fd2367fb4e0"/>
        <function-ref name="fired" scoped="" ref="0x7fd2367fc110"/>
        <function-ref name="get" scoped="" ref="0x7fd2367fd6f0"/>
        <function-ref name="reset" scoped="" ref="0x7fd2367fc5d0"/>
        <function-ref name="isOn" scoped="" ref="0x7fd2367fb9a0"/>
        <function-ref name="set" scoped="" ref="0x7fd2367fdbb0"/>
        <function-ref name="start" scoped="" ref="0x7fd2367fca90"/>
        <function-ref name="stop" scoped="" ref="0x7fd2367fb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x7fd236804660" loc="57:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x7fd236804660"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fd236800a90"/>
        <function-ref name="test" scoped="" ref="0x7fd236800110"/>
        <function-ref name="get" scoped="" ref="0x7fd2368033d0"/>
        <function-ref name="setScale" scoped="" ref="0x7fd2367ff020"/>
        <function-ref name="getScale" scoped="" ref="0x7fd2367ff530"/>
        <function-ref name="reset" scoped="" ref="0x7fd2368012a0"/>
        <function-ref name="overflow" scoped="" ref="0x7fd236803da0"/>
        <function-ref name="isOn" scoped="" ref="0x7fd2368005d0"/>
        <function-ref name="set" scoped="" ref="0x7fd236803890"/>
        <function-ref name="start" scoped="" ref="0x7fd236801760"/>
        <function-ref name="stop" scoped="" ref="0x7fd236801c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fd23719d3a0" loc="39:/home/johlab/Videos/lol/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7fd23719d3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd2380681a0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fd238068510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd23719c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fd237199200" loc="24:/home/johlab/Videos/lol/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fd237199200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd2380681a0"/>
            <typename><typedef-ref name="TOne" ref="0x7fd2380259a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd237198090"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd237198a10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd237198550"/>
        <function-ref name="overflow" scoped="" ref="0x7fd237196020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fd237182020" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fd237182020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd2380681a0"/>
            <typename><typedef-ref name="TOne" ref="0x7fd2380259a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd237182e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd237181800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd237181340"/>
        <function-ref name="overflow" scoped="" ref="0x7fd237181cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fd237180280" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fd237180280"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fd23717c810"/>
        <function-ref name="test" scoped="" ref="0x7fd23717de60"/>
        <function-ref name="get" scoped="" ref="0x7fd23717f020"/>
        <function-ref name="setScale" scoped="" ref="0x7fd23717ccd0"/>
        <function-ref name="getScale" scoped="" ref="0x7fd23717b260"/>
        <function-ref name="reset" scoped="" ref="0x7fd23717d020"/>
        <function-ref name="overflow" scoped="" ref="0x7fd23717f9f0"/>
        <function-ref name="isOn" scoped="" ref="0x7fd23717c350"/>
        <function-ref name="set" scoped="" ref="0x7fd23717f4e0"/>
        <function-ref name="start" scoped="" ref="0x7fd23717d4e0"/>
        <function-ref name="stop" scoped="" ref="0x7fd23717d9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7fd2371590f0" loc="63:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7fd2371590f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd2380681a0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fd238068510"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd237158020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd2371589a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd2371584e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fd237158e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fd23715dcf0" loc="62:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fd23715dcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd2380681a0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fd238068510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd238a50170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd23715cb60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd23715b550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd23715b090"/>
        <function-ref name="overflow" scoped="" ref="0x7fd23715ba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fd237156b60" loc="48:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7fd237156b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd2380681a0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fd238068510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd2371557d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fd237155e40" loc="49:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fd237155e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd2380681a0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fd238068510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd238a50170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fd237153ca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fd237152670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fd2371521b0"/>
        <function-ref name="overflow" scoped="" ref="0x7fd237152b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7fd23714b9b0" loc="36:/home/johlab/Videos/lol/tinyos-main/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7fd23714b9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fd2380681a0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fd238068510"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7fd2371487e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fd237061020" loc="49:/home/johlab/Videos/lol/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="mymainC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fd237061020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd2370613a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd237061530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd2370616c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd237061850"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd2370619e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fd237061c30" loc="50:/home/johlab/Videos/lol/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="mymainC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fd237061c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd237060020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd2370601b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd237060340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd2370604d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd237060660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fd2370608b0" loc="51:/home/johlab/Videos/lol/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="mymainC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fd2370608b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd237060c30"/>
        <function-ref name="source" scoped="" ref="0x7fd237060dc0"/>
        <function-ref name="address" scoped="" ref="0x7fd23705f020"/>
        <function-ref name="destination" scoped="" ref="0x7fd23705f1b0"/>
        <function-ref name="setSource" scoped="" ref="0x7fd23705f340"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd23705f4d0"/>
        <function-ref name="type" scoped="" ref="0x7fd23705f660"/>
        <function-ref name="setType" scoped="" ref="0x7fd23705f7f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd23705f980"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd23705fb10"/>
        <function-ref name="localGroup" scoped="" ref="0x7fd23705fca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fd23705e020" loc="52:/home/johlab/Videos/lol/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="mymainC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7fd23705e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fd23705e3a0"/>
        <function-ref name="noAck" scoped="" ref="0x7fd23705e530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fd23705e6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fd2367cd920" loc="49:/home/johlab/Videos/lol/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="mymainC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fd2367cd920"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd2367cdca0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd2367cde30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd2367cc020"/>
        <function-ref name="cancel" scoped="" ref="0x7fd2367cc1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd2367cc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fd2367cc590" loc="50:/home/johlab/Videos/lol/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="mymainC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fd2367cc590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd2367cc910"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd2367ccaa0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd2367ccc30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd2367ccdc0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd2367ca020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fd2367ca270" loc="51:/home/johlab/Videos/lol/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="mymainC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fd2367ca270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd2367ca5f0"/>
        <function-ref name="source" scoped="" ref="0x7fd2367ca780"/>
        <function-ref name="address" scoped="" ref="0x7fd2367ca910"/>
        <function-ref name="destination" scoped="" ref="0x7fd2367caaa0"/>
        <function-ref name="setSource" scoped="" ref="0x7fd2367cac30"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd2367cadc0"/>
        <function-ref name="type" scoped="" ref="0x7fd2367c9020"/>
        <function-ref name="setType" scoped="" ref="0x7fd2367c91b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd2367c9340"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd2367c94d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7fd2367c9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fd2367c98f0" loc="52:/home/johlab/Videos/lol/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="mymainC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7fd2367c98f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fd2367c9c70"/>
        <function-ref name="noAck" scoped="" ref="0x7fd2367c9e00"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fd2367c8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fd2367bf390" loc="44:/home/johlab/Videos/lol/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="mymainC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fd2367bf390"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd2367bf710"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd2367bf8a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd2367bfa30"/>
        <function-ref name="cancel" scoped="" ref="0x7fd2367bfbc0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd2367bfd50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7fd2367be060" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="mymainC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fd2367be060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd2367be3e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd2367be570"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd2367be700"/>
        <function-ref name="cancel" scoped="" ref="0x7fd2367be890"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd2367bea20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fd2367bec70" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="mymainC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fd2367bec70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd2367bd020"/>
        <function-ref name="source" scoped="" ref="0x7fd2367bd1b0"/>
        <function-ref name="address" scoped="" ref="0x7fd2367bd340"/>
        <function-ref name="destination" scoped="" ref="0x7fd2367bd4d0"/>
        <function-ref name="setSource" scoped="" ref="0x7fd2367bd660"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd2367bd7f0"/>
        <function-ref name="type" scoped="" ref="0x7fd2367bd980"/>
        <function-ref name="setType" scoped="" ref="0x7fd2367bdb10"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd2367bdca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd2367bde30"/>
        <function-ref name="localGroup" scoped="" ref="0x7fd2367bc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd2370c4c30" loc="43:/home/johlab/Videos/lol/tinyos-main/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fd2370c4c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd2370c0020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd2370c01b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd2370c0340"/>
        <function-ref name="cancel" scoped="" ref="0x7fd2370c04d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd2370c0660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7fd237076400" loc="48:/home/johlab/Videos/lol/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7fd237076400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fd237d609e0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd2370767a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd237076930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd237076ac0"/>
        <function-ref name="cancel" scoped="" ref="0x7fd237076c50"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd237076de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fd237077580" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7fd237077580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fd237077920"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd237077ab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd237077c40"/>
        <function-ref name="cancel" scoped="" ref="0x7fd237077dd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fd237076020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fd237074720" loc="50:/home/johlab/Videos/lol/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fd237074720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd237074aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd237074c30"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd237074dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd237073020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd2370731b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7fd237073480" loc="169:/home/johlab/Videos/lol/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x7fd237073480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd237073800"/>
        <function-ref name="runTask" scoped="" ref="0x7fd237073990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7fd237073c60" loc="126:/home/johlab/Videos/lol/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x7fd237073c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd237072020"/>
        <function-ref name="runTask" scoped="" ref="0x7fd2370721b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fd237075060" loc="49:/home/johlab/Videos/lol/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fd237075060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd2370753e0"/>
        <function-ref name="source" scoped="" ref="0x7fd237075570"/>
        <function-ref name="address" scoped="" ref="0x7fd237075700"/>
        <function-ref name="destination" scoped="" ref="0x7fd237075890"/>
        <function-ref name="setSource" scoped="" ref="0x7fd237075a20"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd237075bb0"/>
        <function-ref name="type" scoped="" ref="0x7fd237075d40"/>
        <function-ref name="setType" scoped="" ref="0x7fd237074020"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd2370741b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd237074340"/>
        <function-ref name="localGroup" scoped="" ref="0x7fd2370744d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fd237054020" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="mymainC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7fd237054020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fd2370543a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fd237054530"/>
        <function-ref name="getPayload" scoped="" ref="0x7fd2370546c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fd237054850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fd2370549e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fd23705b910" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="mymainC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7fd23705b910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fd23705bc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fd237054c30" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="mymainC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7fd237054c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fd237053020"/>
        <function-ref name="source" scoped="" ref="0x7fd2370531b0"/>
        <function-ref name="address" scoped="" ref="0x7fd237053340"/>
        <function-ref name="destination" scoped="" ref="0x7fd2370534d0"/>
        <function-ref name="setSource" scoped="" ref="0x7fd237053660"/>
        <function-ref name="setDestination" scoped="" ref="0x7fd2370537f0"/>
        <function-ref name="type" scoped="" ref="0x7fd237053980"/>
        <function-ref name="setType" scoped="" ref="0x7fd237053b10"/>
        <function-ref name="isForMe" scoped="" ref="0x7fd237053ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fd237053e30"/>
        <function-ref name="localGroup" scoped="" ref="0x7fd237052020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd23704e720" loc="44:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="mymainC.Atm128I2CMasterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd23704e720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd23704eaa0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd23704ec30"/>
        <function-ref name="request" scoped="" ref="0x7fd23704edc0"/>
        <function-ref name="granted" scoped="" ref="0x7fd236ea1020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd236ea11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7fd236ea1560" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="mymainC.Atm128I2CMasterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7fd236ea1560"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7fd237d14540"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7fd237d14800"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd236ea01f0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd236e9d6d0"/>
        <function-ref name="write" scoped="" ref="0x7fd236ea0e00"/>
        <function-ref name="readDone" scoped="" ref="0x7fd236e9ea50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd237041530" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd237041530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd2370418b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd237041a40"/>
        <function-ref name="request" scoped="" ref="0x7fd237041bd0"/>
        <function-ref name="granted" scoped="" ref="0x7fd237041d60"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd237040020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7fd237040a20" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7fd237040a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7fd237d14540"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7fd237d14800"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd23703e6b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd23703cc30"/>
        <function-ref name="write" scoped="" ref="0x7fd23703d330"/>
        <function-ref name="readDone" scoped="" ref="0x7fd23703c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fd236fd56c0" loc="92:/home/johlab/Videos/lol/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fd236fd56c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fd236fd5a60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd236fd5bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fd236fd33e0" loc="96:/home/johlab/Videos/lol/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd236fd33e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd236fd3780"/>
        <function-ref name="configure" scoped="" ref="0x7fd236fd3910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fd236fd5e40" loc="93:/home/johlab/Videos/lol/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd236fd5e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd236fd41e0"/>
        <function-ref name="requested" scoped="" ref="0x7fd236fd4370"/>
        <function-ref name="granted" scoped="" ref="0x7fd236fd4500"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd236fd4690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd236fd4820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd236fd67e0" loc="91:/home/johlab/Videos/lol/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd236fd67e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd236fd6b80"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd236fd6d10"/>
        <function-ref name="request" scoped="" ref="0x7fd236fd5020"/>
        <function-ref name="granted" scoped="" ref="0x7fd236fd51b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd236fd5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fd236fd4a70" loc="94:/home/johlab/Videos/lol/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd236fd4a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd236fd4df0"/>
        <function-ref name="userId" scoped="" ref="0x7fd236fd3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd236767810" loc="44:/home/johlab/Videos/lol/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd236767810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd236767b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fd236767e20" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7fd236767e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fd2367661c0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fd236766350"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fd2367664e0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fd236766670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fd236764d80" loc="55:/home/johlab/Videos/lol/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fd236764d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fd236763180"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd236763310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fd236762b60" loc="60:/home/johlab/Videos/lol/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fd236762b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fd236761020"/>
        <function-ref name="configure" scoped="" ref="0x7fd2367611b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fd236761440" loc="61:/home/johlab/Videos/lol/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7fd236761440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fd2367617c0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fd236761950"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fd236761ae0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fd236761c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fd236763560" loc="56:/home/johlab/Videos/lol/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd236763560"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd2367638e0"/>
        <function-ref name="requested" scoped="" ref="0x7fd236763a70"/>
        <function-ref name="granted" scoped="" ref="0x7fd236763c00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd236763d90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd236762020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd236760020" loc="62:/home/johlab/Videos/lol/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fd236760020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd2367603a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd236760530"/>
        <function-ref name="led1On" scoped="" ref="0x7fd2367606c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd236760850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd2367609e0"/>
        <function-ref name="get" scoped="" ref="0x7fd236760b70"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd236760d00"/>
        <function-ref name="led0On" scoped="" ref="0x7fd23675e4d0"/>
        <function-ref name="set" scoped="" ref="0x7fd23675e1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7fd23675e020"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd23675e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd236764020" loc="54:/home/johlab/Videos/lol/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd236764020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd2367643c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd236764550"/>
        <function-ref name="request" scoped="" ref="0x7fd2367646e0"/>
        <function-ref name="granted" scoped="" ref="0x7fd236764870"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd236764a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fd236762270" loc="57:/home/johlab/Videos/lol/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd236762270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd2367625f0"/>
        <function-ref name="userId" scoped="" ref="0x7fd236762780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fd23675e7a0" loc="75:/home/johlab/Videos/lol/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7fd23675e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd23675eb20"/>
        <function-ref name="runTask" scoped="" ref="0x7fd23675ecb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fd236fd0560" loc="62:/home/johlab/Videos/lol/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fd236fd0560"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fd236fd08e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fd236fd0b30" loc="63:/home/johlab/Videos/lol/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fd236fd0b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd236fc3020"/>
        <function-ref name="requested" scoped="" ref="0x7fd236fc31b0"/>
        <function-ref name="granted" scoped="" ref="0x7fd236fc3340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd236fc34d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fd236fc3660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7fd236fd1dd0" loc="60:/home/johlab/Videos/lol/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fd236fd1dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd236fd0180"/>
        <function-ref name="stop" scoped="" ref="0x7fd236fd0310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fd236fc38b0" loc="64:/home/johlab/Videos/lol/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fd236fc38b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fd236fc3c30"/>
        <function-ref name="userId" scoped="" ref="0x7fd236fc3dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128I2C" ref="0x7fd236f7e2a0" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x7fd236f7e2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x7fd236f7e620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fd236f835a0" loc="44:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fd236f835a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7fd237d14540"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7fd237d14800"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd236f81240"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd236f7f6d0"/>
        <function-ref name="write" scoped="" ref="0x7fd236f81e50"/>
        <function-ref name="readDone" scoped="" ref="0x7fd236f80a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fd236f7e8b0" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fd236f7e8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd236f7ec30"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd236f7edc0"/>
        <function-ref name="led1On" scoped="" ref="0x7fd236f7d020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd236f7d1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd236f7d340"/>
        <function-ref name="get" scoped="" ref="0x7fd236f7d4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd236f7d660"/>
        <function-ref name="led2On" scoped="" ref="0x7fd236f7dca0"/>
        <function-ref name="set" scoped="" ref="0x7fd236f7d980"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd236f7d7f0"/>
        <function-ref name="led0On" scoped="" ref="0x7fd236f7db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fd236fc08b0" loc="41:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fd236fc08b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd236fc0c50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd236fc0de0"/>
        <function-ref name="request" scoped="" ref="0x7fd236f89020"/>
        <function-ref name="granted" scoped="" ref="0x7fd236f891b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd236f89340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7fd236f89820" loc="42:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7fd236f89820"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7fd237d14540"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7fd237d14800"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd236f884c0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd236f859b0"/>
        <function-ref name="write" scoped="" ref="0x7fd236f86110"/>
        <function-ref name="readDone" scoped="" ref="0x7fd236f86d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x7fd236f846c0" loc="43:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x7fd236f846c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fd236f84a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fd236f84bf0"/>
        <function-ref name="request" scoped="" ref="0x7fd236f84d80"/>
        <function-ref name="granted" scoped="" ref="0x7fd236f83020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fd236f831b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128I2C" ref="0x7fd236f097f0" loc="79:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x7fd236f097f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x7fd236f09b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2C" ref="0x7fd236f09e40" loc="81:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7fd236f09e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7fd236f081e0"/>
        <function-ref name="sendCommand" scoped="" ref="0x7fd236f08370"/>
        <function-ref name="setStart" scoped="" ref="0x7fd236f08500"/>
        <function-ref name="status" scoped="" ref="0x7fd236f08690"/>
        <function-ref name="hasAcks" scoped="" ref="0x7fd236f08820"/>
        <function-ref name="isEnabled" scoped="" ref="0x7fd236f089b0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fd236f08b40"/>
        <function-ref name="read" scoped="" ref="0x7fd236f08cd0"/>
        <function-ref name="init" scoped="" ref="0x7fd236f08e60"/>
        <function-ref name="enableAck" scoped="" ref="0x7fd236f07020"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7fd236f071b0"/>
        <function-ref name="hasStart" scoped="" ref="0x7fd236f07340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd236f074d0"/>
        <function-ref name="commandComplete" scoped="" ref="0x7fd236f07760"/>
        <function-ref name="enable" scoped="" ref="0x7fd236f078f0"/>
        <function-ref name="write" scoped="" ref="0x7fd236f07a80"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7fd236f07c10"/>
        <function-ref name="off" scoped="" ref="0x7fd236f07da0"/>
        <function-ref name="setStop" scoped="" ref="0x7fd236f06020"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7fd236f061b0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7fd236f06340"/>
        <function-ref name="hasStop" scoped="" ref="0x7fd236f064d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadDebugLeds" ref="0x7fd236f067a0" loc="82:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadDebugLeds" scoped="" ref="0x7fd236f067a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd236f06b20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd236f06cb0"/>
        <function-ref name="led1On" scoped="" ref="0x7fd236f06e40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd236f05020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd236f051b0"/>
        <function-ref name="get" scoped="" ref="0x7fd236f05340"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd236f054d0"/>
        <function-ref name="led2On" scoped="" ref="0x7fd236f05b10"/>
        <function-ref name="set" scoped="" ref="0x7fd236f057f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd236f05660"/>
        <function-ref name="led0On" scoped="" ref="0x7fd236f05980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WriteDebugLeds" ref="0x7fd236f05de0" loc="83:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WriteDebugLeds" scoped="" ref="0x7fd236f05de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd236f04180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd236f04310"/>
        <function-ref name="led1On" scoped="" ref="0x7fd236f044a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd236f04630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd236f047c0"/>
        <function-ref name="get" scoped="" ref="0x7fd236f04950"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd236f04ae0"/>
        <function-ref name="led2On" scoped="" ref="0x7fd236f031b0"/>
        <function-ref name="set" scoped="" ref="0x7fd236f04e00"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd236f04c70"/>
        <function-ref name="led0On" scoped="" ref="0x7fd236f03020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7fd236f03480" loc="210:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7fd236f03480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fd236f03800"/>
        <function-ref name="runTask" scoped="" ref="0x7fd236f03990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7fd236f0e1e0" loc="77:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fd236f0e1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fd236f0e560"/>
        <function-ref name="stop" scoped="" ref="0x7fd236f0e6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7fd236f0eaa0" loc="78:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7fd236f0eaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7fd237d14540"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7fd237d14800"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fd236f0d6f0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fd236f0bc30"/>
        <function-ref name="write" scoped="" ref="0x7fd236f0c330"/>
        <function-ref name="readDone" scoped="" ref="0x7fd236f0b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x7fd236f00ac0" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <component-ref qname="HplAtm128I2CBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7fd236f00ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7fd236f00e40"/>
        <function-ref name="sendCommand" scoped="" ref="0x7fd236efd020"/>
        <function-ref name="setStart" scoped="" ref="0x7fd236efd1b0"/>
        <function-ref name="status" scoped="" ref="0x7fd236efd340"/>
        <function-ref name="hasAcks" scoped="" ref="0x7fd236efd4d0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7fd236efd660"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fd236efd7f0"/>
        <function-ref name="read" scoped="" ref="0x7fd236efd980"/>
        <function-ref name="init" scoped="" ref="0x7fd236efdb10"/>
        <function-ref name="enableAck" scoped="" ref="0x7fd236efdca0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7fd236efde30"/>
        <function-ref name="hasStart" scoped="" ref="0x7fd236efc020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd236efc1b0"/>
        <function-ref name="commandComplete" scoped="" ref="0x7fd236efc440"/>
        <function-ref name="enable" scoped="" ref="0x7fd236efc5d0"/>
        <function-ref name="write" scoped="" ref="0x7fd236efc760"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7fd236efc8f0"/>
        <function-ref name="off" scoped="" ref="0x7fd236efca80"/>
        <function-ref name="setStop" scoped="" ref="0x7fd236efcc10"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7fd236efcda0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7fd236efb020"/>
        <function-ref name="hasStop" scoped="" ref="0x7fd236efb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x7fd236ef8440" loc="50:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7fd236ef8440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7fd236ef87c0"/>
        <function-ref name="sendCommand" scoped="" ref="0x7fd236ef8950"/>
        <function-ref name="setStart" scoped="" ref="0x7fd236ef8ae0"/>
        <function-ref name="status" scoped="" ref="0x7fd236ef8c70"/>
        <function-ref name="hasAcks" scoped="" ref="0x7fd236ef8e00"/>
        <function-ref name="isEnabled" scoped="" ref="0x7fd236ef7020"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fd236ef71b0"/>
        <function-ref name="read" scoped="" ref="0x7fd236ef7340"/>
        <function-ref name="init" scoped="" ref="0x7fd236ef74d0"/>
        <function-ref name="enableAck" scoped="" ref="0x7fd236ef7660"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7fd236ef77f0"/>
        <function-ref name="hasStart" scoped="" ref="0x7fd236ef7980"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fd236ef7b10"/>
        <function-ref name="commandComplete" scoped="" ref="0x7fd236ef7da0"/>
        <function-ref name="enable" scoped="" ref="0x7fd236ef6020"/>
        <function-ref name="write" scoped="" ref="0x7fd236ef61b0"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7fd236ef6340"/>
        <function-ref name="off" scoped="" ref="0x7fd236ef64d0"/>
        <function-ref name="setStop" scoped="" ref="0x7fd236ef6660"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7fd236ef67f0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7fd236ef6980"/>
        <function-ref name="hasStop" scoped="" ref="0x7fd236ef6b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CClk" ref="0x7fd236ef5020" loc="53:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CClk" scoped="" ref="0x7fd236ef5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd236ef53a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd236ef5530"/>
        <function-ref name="toggle" scoped="" ref="0x7fd236ef56c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd236ef5850"/>
        <function-ref name="get" scoped="" ref="0x7fd236ef59e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd236ef5b70"/>
        <function-ref name="set" scoped="" ref="0x7fd236ef5d00"/>
        <function-ref name="clr" scoped="" ref="0x7fd236ef4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CData" ref="0x7fd236ef4360" loc="54:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CData" scoped="" ref="0x7fd236ef4360"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fd236ef46e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fd236ef4870"/>
        <function-ref name="toggle" scoped="" ref="0x7fd236ef4a00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fd236ef4b90"/>
        <function-ref name="get" scoped="" ref="0x7fd236ef4d20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fd236ef3020"/>
        <function-ref name="set" scoped="" ref="0x7fd236ef31b0"/>
        <function-ref name="clr" scoped="" ref="0x7fd236ef3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fd236ebd8f0" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fd236ebd8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fd236ebdc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fd236eba020" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fd236eba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fd236eba3a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fd236eba530"/>
        <function-ref name="led1On" scoped="" ref="0x7fd236eba6c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fd236eba850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fd236eba9e0"/>
        <function-ref name="get" scoped="" ref="0x7fd236ebab70"/>
        <function-ref name="led1Off" scoped="" ref="0x7fd236ebad00"/>
        <function-ref name="led2Off" scoped="" ref="0x7fd236eb94d0"/>
        <function-ref name="set" scoped="" ref="0x7fd236eb9020"/>
        <function-ref name="led0On" scoped="" ref="0x7fd236eb91b0"/>
        <function-ref name="led2On" scoped="" ref="0x7fd236eb9340"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fd237fd8c80" loc="62:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7fd237fd9810" loc="60:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7fd237fcb890" loc="60:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd238a50170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7fd237fcb610" loc="60:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd238a50170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7fd237fd0e10" loc="31:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7fd237fcd8e0" loc="39:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd238a50170"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd238a50170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7fd237fcd660" loc="39:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd238a50170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7fd237fcc440" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd238a50170"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd238a50170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7fd237fcc1c0" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd238a50170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7fd237fccd00" loc="53:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fd237fb9ca0" loc="44:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7fd237fb8420" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fd237fbae30" loc="42:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7fd237fb62b0" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fd237fb9590" loc="43:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fd237fb8b40" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fd237fba070" loc="40:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7fd237fba740" loc="41:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fd2380ef190" loc="57:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7fd2380ee190" loc="72:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7fd2380ef900" loc="65:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7fd2380e6670" loc="67:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7fd2380e5020" loc="75:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="65:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7fd23801b7f0" loc="85:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7fd23801a020" loc="86:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7fd23801b020" loc="79:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="78:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/home/johlab/Videos/lol/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7fd238000e40" loc="62:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7fd238095ac0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7fd237ffe830" loc="52:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/johlab/Videos/lol/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7fd237df9a60" loc="61:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7fd237df8270" loc="67:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7fd237df8a50" loc="72:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7fd237df7a20" loc="83:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7fd237df41f0" loc="100:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fd237df4a00" loc="117:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7fd237df7270" loc="77:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fd237df35a0" loc="134:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7fd237df3320" loc="134:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7fd237df92d0" loc="56:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7fd237df6270" loc="89:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7fd237df6a00" loc="94:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd237dc25e0" loc="53:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd237dc25e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fd237db8420" loc="136:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd238a50170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fd237dbdd60" loc="83:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7fd237dbbb10" loc="114:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd238a50170"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd238a50170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fd237dbb540" loc="114:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd238a50170"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fd237dbb880" loc="114:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd238a50170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7fd237dbcd60" loc="98:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7fd237db7460" loc="151:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd238a50170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7fd237db8bb0" loc="144:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd238a50170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fd237dbc570" loc="92:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7fd237dbe2a0" loc="64:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd238a50170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fd237dbe020" loc="64:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd238a50170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7fd237db9aa0" loc="129:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd238a50170"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd238a50170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fd237db94d0" loc="129:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd238a50170"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fd237db9810" loc="129:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd238a50170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7fd237dbed60" loc="73:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd238a50170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fd237dbeae0" loc="73:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fd238a50170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fd237dbd650" loc="78:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7fd237d1c120" loc="113:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fd237d20e80" loc="113:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7fd237d1b600" loc="138:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fd237d1b380" loc="138:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fd237d204a0" loc="104:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fd237d1c970" loc="130:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Packet.nc">
      <function command="" provided="0" name="clear" ref="0x7fd237d442a0" loc="65:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237d44020" loc="65:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7fd237d43350" loc="78:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237d430d0" loc="78:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fd237d40660" loc="126:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237d40060" loc="126:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd237d40390" loc="126:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fd237d3f750" loc="106:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7fd237d427d0" loc="94:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237d42210" loc="94:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd237d42540" loc="94:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fd237d2a2c0" loc="80:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd237d5f1d0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fd237d4f800" loc="80:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd237d5f1d0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7fd237d4fb80" loc="80:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd237d2a020" loc="80:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fd237d26970" loc="135:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237d26370" loc="135:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd237d266a0" loc="135:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fd237d25a60" loc="123:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fd237d29630" loc="96:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237d293b0" loc="96:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fd237d27b80" loc="110:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237d275a0" loc="110:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fd237d278f0" loc="110:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7fd237d219c0" loc="78:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
              <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237d21060" loc="78:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7fd237d213b0" loc="78:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd237d216e0" loc="78:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fd237d17bf0" loc="120:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7fd237d18be0" loc="97:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7fd237d18270" loc="88:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fd237d17420" loc="102:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fd237d168b0" loc="128:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="I2CPacket" loc="102:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/I2CPacket.nc">
      <parameters>
        <typedef name="addr_size" ref="0x7fd237d11b20" loc="102:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/I2CPacket.nc">
          <interfacedef-ref qname="I2CPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="addr_size" scoped="" ref="0x7fd237d11b20"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7fd237d0f150" loc="120:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/I2CPacket.nc">
        <documentation loc="103:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C read operation&#10;&#10; </short>
          <long>&#10; Perform an I2C read operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10;    I2C_ACK_END - ACK the last byte if set. Otherwise NACK last byte. This&#10;                   flag cannot be used with the I2C_STOP flag.&#10;    I2C_RESTART - restarting an I2C transaction (turn bus around).&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7fd237d12780"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7fd237d10460" loc="120:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7fd237d12780"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7fd237d107b0" loc="120:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7fd237d10b00" loc="120:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fd237d10e80" loc="120:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7fd237d09a90" loc="157:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/I2CPacket.nc">
        <documentation loc="149:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the write operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the write operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, written&#10; @param 'uint8_t* COUNT(length) data' Pointer to the data buffer written&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fd237d0ada0" loc="157:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7fd237d09110" loc="157:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7fd237d09460" loc="157:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fd237d097e0" loc="157:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fd237d0c060" loc="137:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/I2CPacket.nc">
        <documentation loc="122:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C write operation&#10;&#10; </short>
          <long>&#10; Perform an I2C write operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10;    I2C_RESTART - restarting an I2C transaction (turn bus around).&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7fd237d12780"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7fd237d0e360" loc="137:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7fd237d12780"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7fd237d0e6b0" loc="137:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7fd237d0ea00" loc="137:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fd237d0ed80" loc="137:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fd237d0be20" loc="147:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/I2CPacket.nc">
        <documentation loc="139:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the read operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the read operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, read&#10; @param 'uint8_t* COUNT(length) data' Pointer to the received data buffer&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fd237d0b150" loc="147:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7fd237d0b4a0" loc="147:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7fd237d0b7f0" loc="147:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fd237d0bb70" loc="147:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7fd237d30040" loc="177:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fd237d60dc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd237d31d90" loc="177:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7fd237d3abe0" loc="88:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7fd237d5f1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd237d3a960" loc="88:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7fd237d3d070" loc="68:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7fd237d5f1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7fd237d3db30" loc="78:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7fd237d5f1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd237d3d8b0" loc="78:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7fd237d37600" loc="121:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd237d5f1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd237d37020" loc="121:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fd237d37370" loc="121:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd237d5f1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7fd237d39040" loc="103:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd237d5f1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd237d38a30" loc="103:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fd237d38d80" loc="103:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd237d5f1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7fd237d33ae0" loc="147:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fd237d609e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd237d33860" loc="147:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7fd237d32e60" loc="162:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fd237d609e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd237d328b0" loc="162:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7fd237d32bd0" loc="162:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fd237d609e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7fd237d34890" loc="136:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd237d34610" loc="136:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7fd237d2f600" loc="187:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fd237d60dc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fd237d2f020" loc="187:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7fd237d2f370" loc="187:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fd237d60dc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7fd237d2d490" loc="195:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fd237d60dc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd237cbe6e0" loc="53:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd237cbe6e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fd237cbb030" loc="61:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd238a50170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd237cab4a0" loc="57:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd237cab4a0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fd237cab6e0" loc="57:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd237cab6e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fd237ca9030" loc="64:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd237cab6e0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fd237ca8190" loc="76:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fd237ca98b0" loc="71:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fd237ca88f0" loc="82:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd237cb8bb0" loc="56:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd237cb8bb0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fd237cb8df0" loc="56:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd237cb8df0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fd237cb1a60" loc="109:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd237cb8df0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fd237cb3a30" loc="78:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7fd237cb10c0" loc="103:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd237cb8df0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd237cb8df0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fd237cb2a90" loc="103:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd237cb8df0"/></type-var>
          </variable>
          <variable name="dt" ref="0x7fd237cb2dd0" loc="103:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd237cb8df0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fd237cb2270" loc="88:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7fd237cb0270" loc="116:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd237cb8df0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fd237cb59a0" loc="66:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd237cb8df0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fd237cb5720" loc="66:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd237cb8df0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fd237cb3270" loc="73:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7fd237c7bb20" loc="89:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7fd237c7c8e0" loc="85:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7fd237c7f5a0" loc="79:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7fd237c7b350" loc="86:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7fd237c7b0d0" loc="86:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7fd237c7c110" loc="82:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fd237c7de30" loc="82:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7fd237c7a5c0" loc="90:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7fd237c7a340" loc="90:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7fd237c7fd40" loc="80:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7fd237c7d710" loc="81:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fd237c7d490" loc="81:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="51:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="45:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x7fd237c69270" loc="92:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="88:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x7fd237c6b190" loc="68:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x7fd237c6b910" loc="74:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="70:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x7fd237c6a190" loc="80:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="76:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x7fd237c69a80" loc="98:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="94:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x7fd237c6a9c0" loc="86:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="82:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x7fd237c70e80" loc="57:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="53:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd23804e1d0"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7fd23804e5f0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x7fd237c6c8e0" loc="63:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd23804e1d0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7fd23804e5f0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7fd237c6c660" loc="63:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fd23804e1d0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7fd23804e5f0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7fd237c79750" loc="41:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd237c79750"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7fd237c730e0" loc="74:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fd237c75270" loc="58:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fd237c760e0" loc="48:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd237c79750"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7fd237c759e0" loc="62:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7fd237c738a0" loc="80:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fd237c76aa0" loc="54:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd237c79750"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7fd237c76820" loc="54:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd237c79750"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fd237c74190" loc="65:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fd237c748e0" loc="68:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7fd237c8c430" loc="55:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fd237c8c430"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7fd237c86020" loc="98:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7fd237c87020" loc="87:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fd237c8cd60" loc="61:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fd237c8c430"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7fd237c86a00" loc="104:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7fd237c86780" loc="104:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7fd237c85270" loc="110:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7fd237c8a7b0" loc="75:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fd237c8a020" loc="70:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7fd237c877e0" loc="93:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fd237c8b760" loc="67:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fd237c8c430"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7fd237c8b4e0" loc="67:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fd237c8c430"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fd237c89020" loc="78:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fd237c89770" loc="81:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7fd237afad40" loc="59:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd237d5f1d0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7fd237afa730" loc="59:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd237d5f1d0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7fd237afaab0" loc="59:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7fd237aed2b0" loc="65:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237aeebd0" loc="65:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7fd237aed020" loc="65:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7fd237aec430" loc="71:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237aec1b0" loc="71:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7fd237aee3e0" loc="57:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7fd237af09e0" loc="52:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7fd237af0760" loc="52:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7fd237af45f0" loc="59:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237af4370" loc="59:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7fd237af37d0" loc="71:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237af3550" loc="71:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7fd237af1940" loc="85:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237af16c0" loc="85:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7fd237ae56c0" loc="65:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237ae5440" loc="65:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7fd237ae9790" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237ae9170" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7fd237ae9500" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7fd237ae6680" loc="59:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237ae6400" loc="59:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7fd237ae8b90" loc="53:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237ae8570" loc="53:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7fd237ae8900" loc="53:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7fd237ae46c0" loc="71:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237ae4440" loc="71:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="37:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="setChannelDone" ref="0x7fd237ae01f0" loc="50:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="46:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7fd237ae19a0" loc="44:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="39:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7fd237ae1720" loc="44:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7fd237ae0a40" loc="55:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="52:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7fd237aeab90" loc="35:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd237aeab90"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fd237aeadd0" loc="35:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd237aeadd0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7fd237adbc00" loc="63:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd237aeadd0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237adb980" loc="63:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7fd237adad80" loc="70:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237adab00" loc="70:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7fd237ade9c0" loc="49:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237ade740" loc="49:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fd237adc0c0" loc="78:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd237aeadd0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237ad9a80" loc="78:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7fd237ad9de0" loc="78:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd237aeadd0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="37:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x7fd237ac5bf0" loc="37:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7fd237ac5bf0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x7fd237ac1d10" loc="53:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="50:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237ac1a90" loc="53:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fd237ac12a0" loc="48:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="44:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7fd237ac5bf0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237ac1020" loc="48:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7fd237ac27f0" loc="42:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="39:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237ac2570" loc="42:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fd237abfaa0" loc="59:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="55:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7fd237ac5bf0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237abf4a0" loc="59:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7fd237abf810" loc="59:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x7fd237ac5bf0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7fd237ab6d10" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237ab6a90" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x7fd237a922a0" loc="41:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7fd237d6b630"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237a92020" loc="41:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7fd237a96c80" loc="37:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7fd237d6b630"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7fd237a93730" loc="39:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7fd237d6b630"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237a934b0" loc="39:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7fd237a90d30" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7fd237d6b630"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237a90710" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fd237a90aa0" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7fd237d6b630"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7fd237a90020" loc="43:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7fd237d6b630"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237a929c0" loc="43:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fd237a92d50" loc="43:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7fd237d6b630"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x7fd237a8e110" loc="49:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7fd237d6b210"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237a8fe60" loc="49:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x7fd237a8edf0" loc="51:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x7fd237d6b210"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237a8e7e0" loc="51:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7fd237a8eb60" loc="51:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x7fd237d6b210"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7fd237a8f710" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237a8f490" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x7fd237a8c5a0" loc="53:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7fd237d6b210"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fd237a9d970" loc="67:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7fd237d6b630"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fd237a9d020" loc="67:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x7fd237d6b630"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7fd237a9d3a0" loc="67:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd237a9d6d0" loc="67:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fd237a98020" loc="122:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237a99950" loc="122:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd237a99c80" loc="122:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fd237a990e0" loc="110:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fd237a9c790" loc="83:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237a9c510" loc="83:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fd237a9a750" loc="97:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237a9a170" loc="97:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fd237a9a4c0" loc="97:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x7fd237a6f1f0" loc="59:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x7fd237a6fb00" loc="72:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x7fd237a6e4a0" loc="79:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x7fd237a72a30" loc="48:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fd237a572a0" loc="57:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7fd237a57020" loc="57:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x7fd237a57a80" loc="62:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fd237a60e60" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7fd237a60be0" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fd237a58810" loc="51:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7fd237a58590" loc="51:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="43:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="38:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x7fd237a5ed60" loc="58:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="52:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7fd237a5eae0" loc="58:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x7fd237a5c3f0" loc="72:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="65:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd237d5f1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fd237a5c170" loc="72:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd237d5f1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x7fd237a5d970" loc="63:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="60:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7fd237d5f1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7fd237a5d6f0" loc="63:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x7fd237a5a020" loc="81:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="74:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7fd237a5cc60" loc="81:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x7fd237a5e2a0" loc="50:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="45:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd237d5f1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fd237a5e020" loc="50:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd237d5f1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x7fd2379f6270" loc="40:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0x7fd237a0a390" loc="40:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237a0a110" loc="40:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x7fd2379fbcb0" loc="52:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fd237d60dc0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd2379fba30" loc="52:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x7fd2379f9490" loc="63:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd2379f9210" loc="63:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7fd2379fd510" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7fd237d5f1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd2379fd290" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7fd237a0bce0" loc="40:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7fd237d5f1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237a0ba60" loc="40:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7fd2379fb2b0" loc="49:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd237d5f1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd2379fdc40" loc="49:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fd2379fb020" loc="49:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd237d5f1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7fd2379feab0" loc="43:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd237d5f1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd2379fe4d0" loc="43:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fd2379fe820" loc="43:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd237d5f1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7fd2379faa20" loc="55:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fd237d60dc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd2379fa440" loc="55:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7fd2379fa790" loc="55:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fd237d60dc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x7fd237a04350" loc="42:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x7fd237a04cb0" loc="49:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x7fd237a00020" loc="65:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237a01ce0" loc="65:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x7fd237a03800" loc="54:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237a03580" loc="54:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x7fd237a01350" loc="60:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
          <long>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237a010d0" loc="60:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x7fd2379d7890" loc="60:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
          <long>&#10; This event is fired when the specified timeout period expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x7fd2379d8950" loc="50:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x7fd237d6e180"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x7fd2379d86d0" loc="50:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x7fd237d6e180"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fd2379d7120" loc="55:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x7fd2379dbe40" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x7fd2379d60e0" loc="65:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x7fd237d6e180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="37:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x7fd2379d0550" loc="72:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="69:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
          <long>&#10; Clears all metadata and sets all default values in the headers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd2379d02d0" loc="72:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7fd2379d3880" loc="51:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="47:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd2379d3600" loc="51:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fd2379d1020" loc="61:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="58:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7fd2379d26b0" loc="56:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="53:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
          <long>&#10; Sets the length of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd2379d20d0" loc="56:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fd2379d2420" loc="56:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x7fd2379dace0" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="39:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd2379daa60" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x7fd2379d1ab0" loc="67:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="63:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd2379d1830" loc="67:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230DriverConfig" loc="35:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fd237a1fbf0" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="42:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x7fd237a1f3d0" loc="40:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="37:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237a1f150" loc="40:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x7fd237a1e750" loc="52:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="48:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237a1e4d0" loc="52:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerPreloadLength" ref="0x7fd237a1c020" loc="59:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="54:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The header length must be at least one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x7fd237a1cba0" loc="65:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="61:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237a1c920" loc="65:/home/johlab/Videos/lol/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x7fd237a1bbe0" loc="41:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
          <long>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237a1b960" loc="41:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x7fd237a14e00" loc="86:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
          <long>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x7fd237a14630" loc="80:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd237a14020" loc="80:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7fd237a143a0" loc="80:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x7fd237a180b0" loc="55:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237a19df0" loc="55:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x7fd237a18bc0" loc="62:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237a18940" loc="62:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x7fd237a16b00" loc="69:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd237a164f0" loc="69:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7fd237a16870" loc="69:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x7fd237a1a720" loc="43:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x7fd237a195c0" loc="49:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237a19020" loc="49:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7fd237a19330" loc="49:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x7fd237a156c0" loc="75:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237a15440" loc="75:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x7fd2379e7d60" loc="131:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd2379e7ae0" loc="131:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x7fd2379e8490" loc="120:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd2379e8210" loc="120:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x7fd2379f4940" loc="57:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd2379f4370" loc="57:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x7fd2379f46b0" loc="57:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x7fd2379f1b10" loc="75:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd2379f1890" loc="75:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x7fd2379e2bd0" loc="156:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd2379e25f0" loc="156:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fd2379e2940" loc="156:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x7fd2379f1020" loc="69:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd2379f3ca0" loc="69:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x7fd2379e72f0" loc="125:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd2379e8cf0" loc="125:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x7fd2379e7060" loc="125:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x7fd2379ef630" loc="88:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd2379ef020" loc="88:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7fd2379ef3a0" loc="88:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x7fd2379e3e20" loc="151:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd2379e3ba0" loc="151:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x7fd2379f3430" loc="63:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd2379f31b0" loc="63:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x7fd2379ec2a0" loc="99:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd2379ec020" loc="99:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x7fd2379ed630" loc="94:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd2379ed020" loc="94:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7fd2379ed3a0" loc="94:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x7fd2379de390" loc="178:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x7fd237d6b630"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x7fd2379e0680" loc="162:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd2379e0400" loc="162:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x7fd2379dfb70" loc="173:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x7fd237d6b210"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x7fd2379e33a0" loc="146:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd2379e4d90" loc="146:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fd2379e3110" loc="146:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x7fd2379f0630" loc="81:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd2379f03b0" loc="81:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x7fd2379e99d0" loc="115:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd2379e9400" loc="115:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x7fd2379e9740" loc="115:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x7fd2379e6b40" loc="136:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd2379e6570" loc="136:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x7fd2379e68b0" loc="136:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7fd2379dedc0" loc="185:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd2379deb40" loc="185:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x7fd2379eb0c0" loc="105:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd2379ecaa0" loc="105:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x7fd2379ecdb0" loc="105:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x7fd2379f5b60" loc="51:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd2379f58e0" loc="51:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x7fd2379df2a0" loc="168:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd2379df020" loc="168:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x7fd2379e45f0" loc="141:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd2379e4370" loc="141:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x7fd2379ebbc0" loc="110:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd2379eb940" loc="110:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x7fd237a0f8b0" loc="52:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237a0f2d0" loc="52:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x7fd237a0f620" loc="52:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x7fd237a0d0e0" loc="58:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x7fd237a10020" loc="42:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237a20d00" loc="42:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x7fd237a10ab0" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7fd237d5f1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237a10830" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x7fd237a085f0" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237a08370" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x7fd237a09a30" loc="40:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237a097b0" loc="40:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x7fd237a08e40" loc="51:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x7fd237a06960" loc="57:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237a066e0" loc="57:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="38:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fd2379332a0" loc="49:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="40:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237933020" loc="49:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fd237932dd0" loc="67:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="59:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237932b50" loc="67:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fd2379322b0" loc="57:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="51:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237933bc0" loc="57:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fd237932020" loc="57:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="37:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x7fd2379308d0" loc="44:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="39:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
              <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd237930610" loc="44:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7fd23791e6a0" loc="50:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7fd237d5f1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7fd23791d600" loc="60:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7fd23791ee80" loc="55:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fd237d60dc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7fd237921e10" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fd237d60dc0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd237d5f1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7fd237921830" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fd237d60dc0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7fd237921b80" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7fd237d5f1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7fd2378753b0" loc="53:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fd237875ce0" loc="61:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7fd23786f510" loc="65:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7fd237876cd0" loc="59:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7fd237877b90" loc="90:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7fd237872420" loc="98:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7fd237865540" loc="79:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fd2378715f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fd2378652c0" loc="79:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fd2378715f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7fd237868580" loc="53:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7fd2378670b0" loc="62:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fd2378715f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fd237868e00" loc="62:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fd2378715f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7fd2378679c0" loc="70:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7fd2378715f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="38:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x7fd2376f9020" loc="54:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="49:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
              <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd2376fad30" loc="54:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x7fd2376fa390" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="40:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd2376fa110" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="38:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="turnOff" ref="0x7fd23768ed30" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="40:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x7fd23768be60" loc="57:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="53:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7fd237689920" loc="64:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="59:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7fd2376896a0" loc="64:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x7fd237688120" loc="70:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="66:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x7fd23768b600" loc="51:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="47:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7fd2376889d0" loc="75:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="72:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="38:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x7fd237685730" loc="49:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="40:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd2376854b0" loc="49:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x7fd237684bc0" loc="64:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="59:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fd237684350" loc="57:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="51:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fd2376840d0" loc="57:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Random.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7fd23760e020" loc="52:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="48:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7fd23760f690" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="42:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fd238a50170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7fd2375e0020" loc="53:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fd2375e0020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7fd2375e0b60" loc="64:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fd2375e0020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7fd2375e08e0" loc="64:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fd2375e0020"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="37:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x7fd2375b9490" loc="57:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="54:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd2375b9210" loc="57:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fd2375bb2a0" loc="42:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="39:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
          <long>&#10; Returns if the flag is set for this message. &#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd2375bb020" loc="42:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x7fd2375ba050" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="44:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd2375bba60" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7fd2375bbd90" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fd2375baa60" loc="52:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="49:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd2375ba7e0" loc="52:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="38:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="done" ref="0x7fd2375874e0" loc="53:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="47:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fd237587260" loc="53:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7fd23758a9e0" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="40:/home/johlab/Videos/lol/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fd237485070" loc="59:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fd237485070"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fd2374852b0" loc="59:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd2374852b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7fd237485de0" loc="66:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd2374852b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fd237485b60" loc="66:/home/johlab/Videos/lol/tinyos-main/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd2374852b0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7fd237489650" loc="54:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fd2374887d0" loc="66:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7fd237488020" loc="61:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fd237489d70" loc="61:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7fd23748dd90" loc="53:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7fd237490020" loc="62:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd237493cc0" loc="62:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7fd23748f3c0" loc="74:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd23748f140" loc="74:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7fd237490890" loc="68:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fd23748fe50" loc="81:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd23748fbd0" loc="81:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7fd237398360" loc="40:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd237398360"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x7fd2373902a0" loc="88:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x7fd237390020" loc="88:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7fd237391020" loc="76:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fd237398ca0" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd237398360"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7fd237393110" loc="60:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd237398360"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7fd237395e10" loc="60:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd237398360"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7fd2373938c0" loc="64:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7fd2373917e0" loc="82:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fd237395670" loc="53:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd237398360"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7fd2373953f0" loc="53:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fd237398360"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fd237392070" loc="67:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fd2373927c0" loc="70:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/SpiPacket.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fd2373753b0" loc="76:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/SpiPacket.nc">
        <documentation loc="62:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7fd237377a00" loc="76:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7fd237377d90" loc="76:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd237375110" loc="76:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fd237374980" loc="88:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/SpiPacket.nc">
        <documentation loc="78:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7fd237373bd0" loc="88:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7fd237374020" loc="88:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd237374360" loc="88:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fd238a51610"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fd2373746d0" loc="89:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7fd2373794c0" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7fd237379240" loc="45:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x7fd23735f1f0" loc="86:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x7fd237355070" loc="126:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x7fd23735aa00" loc="117:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x7fd237355a90" loc="128:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x7fd237355810" loc="128:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x7fd237360a10" loc="83:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x7fd2373575c0" loc="122:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x7fd237357340" loc="122:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7fd23735b0b0" loc="113:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7fd23735cdd0" loc="113:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7fd23735e190" loc="97:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x7fd2373504e0" loc="141:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7fd237350260" loc="141:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7fd23735b850" loc="114:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x7fd237353c10" loc="131:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x7fd237353990" loc="131:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7fd237352b70" loc="136:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x7fd2373568a0" loc="125:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x7fd237356620" loc="125:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x7fd237351b10" loc="140:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x7fd2373583f0" loc="119:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x7fd237358170" loc="119:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fd23735eb70" loc="103:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd23735e8f0" loc="103:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7fd23735a2a0" loc="116:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x7fd23735a020" loc="116:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x7fd237357e30" loc="123:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x7fd237353270" loc="129:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x7fd237352390" loc="132:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7fd237351350" loc="138:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x7fd237358b70" loc="120:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7fd23735f980" loc="89:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7fd23735c5b0" loc="109:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd23735c330" loc="109:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7fd237301190" loc="95:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fd2373019e0" loc="105:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="76:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="67:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0x7fd23729da20" loc="81:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7fd237299020" loc="87:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="86:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7fd2372a0ae0" loc="79:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="78:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7fd237298270" loc="91:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="90:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7fd237299a10" loc="88:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7fd237299790" loc="88:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7fd23729cd80" loc="83:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fd23729cb00" loc="83:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7fd237298c70" loc="92:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7fd2372989f0" loc="92:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7fd23729d2b0" loc="80:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0x7fd23729b750" loc="84:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fd23729b4d0" loc="84:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7fd23729c3e0" loc="82:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fd23729c160" loc="82:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/home/johlab/Videos/lol/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fd2370db5e0" loc="75:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd2370db020" loc="75:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd2370db350" loc="75:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fd2370d6bb0" loc="125:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd2370d65b0" loc="125:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fd2370d68e0" loc="125:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fd2370dad20" loc="112:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fd2370d9900" loc="89:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd2370d9680" loc="89:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fd2370d7e00" loc="100:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fd2370d7820" loc="100:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:129" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fd237d47160"/>
                <typename><typedef-ref name="message_t" ref="0x7fd237d467f0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fd2370d7b70" loc="100:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fd23702a020" loc="56:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fd2380e9020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7fd2370290e0" loc="73:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fd23702c6f0" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fd23702a890" loc="65:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fd237029a10" loc="81:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/home/johlab/Videos/lol/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/home/johlab/Videos/lol/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/home/johlab/Videos/lol/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7fd236fcb120" loc="62:/home/johlab/Videos/lol/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/home/johlab/Videos/lol/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128I2C" loc="44:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/Atm128I2C.nc">
      <documentation loc="35:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/Atm128I2C.nc">
        <short>&#10; An interface for stopping the I2C bus.</short>
        <long>&#10; An interface for stopping the I2C bus. Needed by the resource&#10; reservation system, so that when a client releases you're sure&#10; there's a stop.&#10;&#10; @author Philip Levis&#10;&#10; @version  $Id: Atm128I2C.nc,v 1.4 2006-12-12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="stop" ref="0x7fd236fb1d50" loc="46:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/Atm128I2C.nc">
        <interfacedef-ref qname="Atm128I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128I2CBus" loc="47:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
      <documentation loc="37:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version  $Id: HplAtm128I2CBus.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="readCurrent" ref="0x7fd236f6d5b0" loc="54:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sendCommand" ref="0x7fd236f6dcd0" loc="55:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStart" ref="0x7fd236f6ce20" loc="60:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7fd236f6cba0" loc="60:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="status" ref="0x7fd236f6ee30" loc="52:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasAcks" ref="0x7fd236f68840" loc="65:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7fd236f63760" loc="84:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7fd236f672a0" loc="67:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7fd236f67020" loc="67:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7fd236f600e0" loc="89:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x7fd236f6e020" loc="49:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hasExternalPulldown" ref="0x7fd236f72c60" loc="49:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAck" ref="0x7fd236f68110" loc="64:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7fd236f69e30" loc="64:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7fd236f67b40" loc="68:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStart" ref="0x7fd236f6b590" loc="61:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7fd236f66b50" loc="75:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="commandComplete" ref="0x7fd236f6c4c0" loc="56:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7fd236f63020" loc="83:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7fd236f64c60" loc="83:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fd236f62990" loc="88:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fd236f62710" loc="88:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fd238a52ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRealInterruptPending" ref="0x7fd236f66390" loc="72:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x7fd236f6e6f0" loc="50:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStop" ref="0x7fd236f69020" loc="62:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7fd236f6bc40" loc="62:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptPending" ref="0x7fd236f645c0" loc="81:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7fd236f64340" loc="81:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7fd236f62020" loc="85:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStop" ref="0x7fd236f69750" loc="63:/home/johlab/Videos/lol/tinyos-main/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fd238119500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
